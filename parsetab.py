
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN CADENA_DE_CARACTERES CAPITALIZE COMA DCOR DECIMAL DIVIDE DLLAVE DOSPUNTOS DOUBLE DPAR ELSE ENTERO EQUAL EQUALS FALSE FIRST FOR FUN GET ICOR ID IF ILLAVE IN INT IPAR ISEMPTY KEYS LARGE LISTOF LRGEQ MAPOF MINUS NEGATION NOT NOTEQ OR PAIR PLUS PRINT PRINTLN PUNTO PUNTOS READLINE RETURN SETOF SIZE SLICE SMALL SMLEQ STEP STRING TIMES TO TRUE VAL VALUES VAR WHILEalgoritmo : cuerpo\n                  | cuerpo algoritmo\n    cuerpo : iniVariable\n                  | expresion\n                  | expresionRelacional\n                  | imprimir\n                  | readline\n                  | firstAndCap\n                  | list\n                  | conjuntos\n                  | tupla\n                  | maps\n                  | funColecciones\n                  | expLogicas\n                  | fun\n    fun : FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE\n            | FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE\n            | FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE\n            | FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE\n            | FUN ID IPAR entrada_fun DPAR EQUALS return\n    return :  expLogicas\n               | expresion\n               | valorBoolean\n               | expresionRelacional\n    entrada_fun : ID DOSPUNTOS tipos\n                    | ID DOSPUNTOS tipos COMA entrada_fun\n\n    tipos : INT\n             | DOUBLE\n             | BOOLEAN\n             | STRING\n    iniVariable : variable ID tipoDeDato\n                    | variable ID EQUALS valor\n                    | variable ID EQUALS valorBoolean\n                    | variable ID EQUALS expLogicas\n                    | variable ID EQUALS expresionRelacional\n    imprimir : PRINT IPAR elementosPrint DPAR\n                | PRINTLN IPAR elementosPrint DPAR\n    elementosPrint : funColecciones\n                    | coleccion\n                    | expresion\n                    | valorBoolean\n                    | expLogicas\n                    | expresionRelacional\n    funColecciones : indexCol\n                    | slice\n                    | size\n                    | isEmpty\n                    | funMap\n                    | getMap\n\n    indexCol : ID ICOR ENTERO DCOR\n                | ID ICOR ID DCOR\n    slice : ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR\n    size : ID PUNTO SIZE\n            | coleccion PUNTO SIZE\n            isEmpty : ID PUNTO ISEMPTY IPAR DPAR\n            | coleccion PUNTO ISEMPTY IPAR DPAR\n             getMap : ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR\n                | MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR\n    funMap : ID PUNTO KEYS\n             | ID PUNTO VALUES\n             | MAPOF IPAR mapsElemento DPAR PUNTO VALUES\n    maps : variable ID EQUALS MAPOF IPAR mapsElemento DPAR\n        mapsElemento : CADENA_DE_CARACTERES TO tuplaElemento\n                     | CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento\n\n    \n        tupla : variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR\n    \n        tuplaElemento : valor\n                      | ID\n                      | valorBoolean\n                      | LISTOF IPAR listElementos DPAR\n                      | SETOF IPAR listElementos DPAR\n    conjuntos : variable ID EQUALS SETOF IPAR listElementos DPARlist : variable ID EQUALS LISTOF IPAR listElementos DPAR\n        listElementos : valor\n                      | ID\n                      | valorBoolean\n                      | expresionRelacional\n                      | expLogicas\n                      | valorBoolean COMA listElementos\n                      | valor COMA listElementos\n                      | ID COMA listElementos\n                      | LISTOF IPAR listElementos DPAR\n                      | SETOF IPAR listElementos DPAR\n\n    variable : VAR\n                 | VAL\n    \n        readline : READLINE IPAR DPAR\n                 | variable ID EQUALS READLINE IPAR DPAR\n\n    \n        firstAndCap : ID PUNTO FIRST IPAR DPAR\n                    | ID PUNTO CAPITALIZE IPAR DPAR\n\n    tipoDeDato : DOSPUNTOS INT EQUALS ENTERO\n            | DOSPUNTOS DOUBLE EQUALS DECIMAL\n            | DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES\n            | DOSPUNTOS BOOLEAN EQUALS valorBoolean\n            | DOSPUNTOS BOOLEAN EQUALS expLogicas\n            | DOSPUNTOS BOOLEAN EQUALS expresionRelacional\n    coleccion : LISTOF IPAR listElementos DPAR\n                | SETOF IPAR listElementos DPAR\n                | MAPOF IPAR mapsElemento DPAR\n                expresion : valor\n                 | ID\n\n    expresion : valor operadorMat expresion\n                 | ID operadorMat expresion\n    expresionRelacional : elementoRelacional operadorRelacional elementoRelacional\n\n    elementoRelacional : ENTERO\n                        | DOUBLE\n                        | ID\n                        | valorBoolean\n       operadorMat : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE\n    valor : ENTERO\n            | DECIMAL\n            | CADENA_DE_CARACTERES\n   expLogicas : boolID opLogico boolID\n                | NEGATION boolID\n    boolID : ID\n            | valorBoolean\n    opLogico : AND\n                | OR\n    valorBoolean : TRUE\n                     | FALSE\n\n\n    operadorRelacional : EQUAL\n                         | NOTEQ\n                         | LARGE\n                         | SMALL\n                         | LRGEQ\n                         | SMLEQ\n    '
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,27,28,29,30,31,32,34,35,36,37,38,39,40,41,43,44,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,69,70,71,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,122,123,126,127,128,129,138,144,145,146,149,150,152,153,154,155,158,164,165,170,172,173,175,191,194,195,199,200,201,202,203,204,207,211,214,215,223,225,226,227,228,235,236,237,240,241,242,243,244,245,253,254,255,256,257,258,262,263,264,267,268,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,46,-99,-98,-44,-45,-46,-47,-48,-49,73,75,-83,-84,-111,-112,-113,-104,-120,-121,80,81,92,-107,-108,-109,-110,81,97,-122,-123,-124,-125,-126,-127,107,107,113,113,73,-118,-119,-115,-116,-117,-31,125,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,159,-54,-32,-33,-34,-35,171,-51,-50,-36,-37,113,113,113,113,113,186,113,113,125,-87,-88,-55,17,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,113,113,17,240,-72,-71,-62,159,-16,17,-99,-20,-21,-22,-23,-24,-17,17,186,-52,-58,240,240,186,-18,-19,-65,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,72,73,74,77,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,172,173,175,191,194,195,199,200,201,202,203,204,207,211,223,226,227,228,236,237,240,241,242,243,244,245,253,254,256,257,264,267,268,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,-115,-116,-117,-31,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,-87,-88,-55,21,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,21,-72,-71,-62,-16,21,-99,-20,-21,-22,-23,-24,-17,21,-52,-58,-18,-19,-65,]),'PRINTLN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,72,73,74,77,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,172,173,175,191,194,195,199,200,201,202,203,204,207,211,223,226,227,228,236,237,240,241,242,243,244,245,253,254,256,257,264,267,268,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,-115,-116,-117,-31,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,-87,-88,-55,22,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,22,-72,-71,-62,-16,22,-99,-20,-21,-22,-23,-24,-17,22,-52,-58,-18,-19,-65,]),'READLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,172,173,175,191,194,195,199,200,201,202,203,204,207,211,223,226,227,228,236,237,240,241,242,243,244,245,253,254,256,257,264,267,268,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,-115,-116,-117,-31,130,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,-87,-88,-55,23,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,23,-72,-71,-62,-16,23,-99,-20,-21,-22,-23,-24,-17,23,-52,-58,-18,-19,-65,]),'NEGATION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,63,64,66,67,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,150,152,153,154,155,164,165,170,172,173,175,191,194,195,199,200,201,202,203,204,207,211,214,215,223,225,226,227,228,236,237,240,241,242,243,244,245,253,254,256,257,258,262,264,267,268,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,34,34,34,34,-115,-116,-117,-31,34,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,34,34,34,34,34,34,34,34,-87,-88,-55,34,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,34,34,34,34,-72,-71,-62,-16,34,-99,-20,-21,-22,-23,-24,-17,34,-52,-58,34,34,-18,-19,-65,]),'FUN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,72,73,74,77,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,172,173,175,191,194,195,199,200,201,202,203,204,207,211,223,226,227,228,236,237,240,241,242,243,244,245,253,254,256,257,264,267,268,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,-115,-116,-117,-31,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,-87,-88,-55,35,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,35,-72,-71,-62,-16,35,-99,-20,-21,-22,-23,-24,-17,35,-52,-58,-18,-19,-65,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,72,73,74,77,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,172,173,175,191,194,195,199,200,201,202,203,204,207,211,223,226,227,228,236,237,240,241,242,243,244,245,253,254,256,257,264,267,268,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,-115,-116,-117,-31,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,-87,-88,-55,36,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,36,-72,-71,-62,-16,36,-99,-20,-21,-22,-23,-24,-17,36,-52,-58,-18,-19,-65,]),'VAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,72,73,74,77,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,172,173,175,191,194,195,199,200,201,202,203,204,207,211,223,226,227,228,236,237,240,241,242,243,244,245,253,254,256,257,264,267,268,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,-115,-116,-117,-31,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,-87,-88,-55,37,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,37,-72,-71,-62,-16,37,-99,-20,-21,-22,-23,-24,-17,37,-52,-58,-18,-19,-65,]),'ENTERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,141,144,145,146,149,150,152,153,154,155,158,164,165,167,170,172,173,175,191,194,195,199,200,201,202,203,204,207,211,214,215,223,225,226,227,228,230,236,237,240,241,242,243,244,245,253,254,255,256,257,258,262,263,264,267,268,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,83,93,-107,-108,-109,-110,83,96,-122,-123,-124,-125,-126,-127,38,38,38,38,-115,-116,-117,-31,38,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,174,-51,-50,-36,-37,38,38,38,38,38,83,38,38,199,96,-87,-88,-55,38,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,38,38,38,38,-72,-71,-62,247,-16,38,-99,-20,-21,-22,-23,-24,-17,38,83,-52,-58,38,38,83,-18,-19,-65,]),'DECIMAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,48,51,52,53,54,55,63,64,66,67,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,150,152,153,154,155,158,164,165,168,172,173,175,191,194,195,199,200,201,202,203,204,207,211,214,215,223,225,226,227,228,236,237,240,241,242,243,244,245,253,254,255,256,257,258,262,263,264,267,268,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,39,-107,-108,-109,-110,39,39,39,39,39,-115,-116,-117,-31,39,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,39,39,39,39,39,39,39,39,200,-87,-88,-55,39,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,39,39,39,39,-72,-71,-62,-16,39,-99,-20,-21,-22,-23,-24,-17,39,39,-52,-58,39,39,39,-18,-19,-65,]),'CADENA_DE_CARACTERES':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,48,51,52,53,54,55,63,64,66,67,68,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,143,144,145,146,147,149,150,152,153,154,155,158,164,165,166,169,172,173,175,191,194,195,199,200,201,202,203,204,207,211,213,214,215,223,225,226,227,228,231,236,237,240,241,242,243,244,245,253,254,255,256,257,258,262,263,264,267,268,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,40,-107,-108,-109,-110,40,40,40,40,40,120,-115,-116,-117,-31,40,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,176,-51,-50,-36,120,-37,40,40,40,40,40,40,40,40,120,201,-87,-88,-55,40,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,120,40,40,40,40,-72,-71,-62,248,-16,40,-99,-20,-21,-22,-23,-24,-17,40,40,-52,-58,40,40,40,-18,-19,-65,]),'DOUBLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,56,57,58,59,60,61,62,63,64,66,67,72,73,74,77,78,79,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,150,152,153,154,155,164,165,170,172,173,175,190,191,192,194,195,199,200,201,202,203,204,207,211,214,215,223,224,225,226,227,228,236,237,240,241,242,243,244,245,253,254,256,257,258,262,264,267,268,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,41,-122,-123,-124,-125,-126,-127,41,41,41,41,-115,-116,-117,-31,41,135,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,41,41,41,41,41,41,41,41,-87,-88,-55,218,41,218,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,41,41,41,218,41,-72,-71,-62,-16,41,-99,-20,-21,-22,-23,-24,-17,41,-52,-58,41,41,-18,-19,-65,]),'MAPOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,63,64,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,172,173,175,191,194,195,199,200,201,202,203,204,207,211,223,226,227,228,236,237,240,241,242,243,244,245,253,254,256,257,264,267,268,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,106,106,-115,-116,-117,-31,133,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,-87,-88,-55,26,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,26,-72,-71,-62,-16,26,-99,-20,-21,-22,-23,-24,-17,26,-52,-58,-18,-19,-65,]),'TRUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,34,38,39,40,41,43,44,56,57,58,59,60,61,62,63,64,66,67,69,70,71,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,150,152,153,154,155,158,164,165,170,172,173,175,191,194,195,199,200,201,202,203,204,207,211,214,215,223,225,226,227,228,236,237,240,241,242,243,244,245,253,254,255,256,257,258,262,263,264,267,268,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,43,-111,-112,-113,-104,-120,-121,43,-122,-123,-124,-125,-126,-127,43,43,43,43,43,-118,-119,-115,-116,-117,-31,43,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,43,43,43,43,43,43,43,43,43,-87,-88,-55,43,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,43,43,43,43,-72,-71,-62,-16,43,-99,-20,-21,-22,-23,-24,-17,43,43,-52,-58,43,43,43,-18,-19,-65,]),'FALSE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,34,38,39,40,41,43,44,56,57,58,59,60,61,62,63,64,66,67,69,70,71,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,150,152,153,154,155,158,164,165,170,172,173,175,191,194,195,199,200,201,202,203,204,207,211,214,215,223,225,226,227,228,236,237,240,241,242,243,244,245,253,254,255,256,257,258,262,263,264,267,268,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,44,-111,-112,-113,-104,-120,-121,44,-122,-123,-124,-125,-126,-127,44,44,44,44,44,-118,-119,-115,-116,-117,-31,44,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,44,44,44,44,44,44,44,44,44,-87,-88,-55,44,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,44,44,44,44,-72,-71,-62,-16,44,-99,-20,-21,-22,-23,-24,-17,44,44,-52,-58,44,44,44,-18,-19,-65,]),'LISTOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,63,64,66,67,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,150,152,153,154,155,158,164,165,172,173,175,191,194,195,199,200,201,202,203,204,207,211,214,215,223,226,227,228,236,237,240,241,242,243,244,245,253,254,255,256,257,263,264,267,268,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,24,24,110,110,-115,-116,-117,-31,131,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,110,110,110,110,110,188,110,110,-87,-88,-55,24,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,110,110,24,-72,-71,-62,-16,24,-99,-20,-21,-22,-23,-24,-17,24,188,-52,-58,188,-18,-19,-65,]),'SETOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,63,64,66,67,72,73,74,77,78,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,150,152,153,154,155,158,164,165,172,173,175,191,194,195,199,200,201,202,203,204,207,211,214,215,223,226,227,228,236,237,240,241,242,243,244,245,253,254,255,256,257,263,264,267,268,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,25,25,117,117,-115,-116,-117,-31,132,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,117,117,117,117,117,189,117,117,-87,-88,-55,25,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,117,117,25,-72,-71,-62,-16,25,-99,-20,-21,-22,-23,-24,-17,25,189,-52,-58,189,-18,-19,-65,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,45,72,73,74,77,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,172,173,175,194,195,199,200,201,202,203,204,207,211,226,227,228,236,240,241,242,243,244,245,253,256,257,264,267,268,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,-2,-115,-116,-117,-31,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,-87,-88,-55,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,-72,-71,-62,-16,-99,-20,-21,-22,-23,-24,-17,-52,-58,-18,-19,-65,]),'DLLAVE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,45,72,73,74,77,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,172,173,175,194,195,199,200,201,202,203,204,207,211,221,226,227,228,236,238,240,241,242,243,244,245,253,256,257,261,264,265,267,268,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,-2,-115,-116,-117,-31,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,-87,-88,-55,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,236,-72,-71,-62,-16,253,-99,-20,-21,-22,-23,-24,-17,-52,-58,264,-18,267,-19,-65,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,27,28,29,30,31,32,38,39,40,41,43,44,45,72,73,74,77,81,82,83,87,89,90,94,95,96,97,98,109,121,123,126,127,128,129,144,145,146,149,172,173,175,194,195,199,200,201,202,203,204,207,211,226,227,228,236,240,241,242,243,244,245,252,253,256,257,259,264,267,268,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-99,-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,-2,-115,-116,-117,-31,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,-85,-114,-54,-32,-33,-34,-35,-51,-50,-36,-37,-87,-88,-55,-56,-86,-89,-90,-91,-92,-93,-94,-57,-61,-72,-71,-62,-16,-99,-20,-21,-22,-23,-24,258,-17,-52,-58,262,-18,-19,-65,]),'IPAR':([16,21,22,23,24,25,26,36,37,75,84,85,86,88,91,106,110,117,124,130,131,132,133,188,189,212,246,],[47,63,64,65,66,67,68,-83,-84,122,139,140,141,142,143,147,150,155,162,163,164,165,166,214,215,231,255,]),'PUNTO':([17,42,101,107,151,156,157,174,206,208,],[49,76,76,148,-95,-96,183,206,230,183,]),'EQUAL':([17,19,20,38,41,43,44,96,103,107,113,114,125,127,202,240,244,],[-105,-106,57,-103,-104,-120,-121,-103,-106,-105,-105,-106,-105,-106,-106,-105,-106,]),'NOTEQ':([17,19,20,38,41,43,44,96,103,107,113,114,125,127,202,240,244,],[-105,-106,58,-103,-104,-120,-121,-103,-106,-105,-105,-106,-105,-106,-106,-105,-106,]),'LARGE':([17,19,20,38,41,43,44,96,103,107,113,114,125,127,202,240,244,],[-105,-106,59,-103,-104,-120,-121,-103,-106,-105,-105,-106,-105,-106,-106,-105,-106,]),'SMALL':([17,19,20,38,41,43,44,96,103,107,113,114,125,127,202,240,244,],[-105,-106,60,-103,-104,-120,-121,-103,-106,-105,-105,-106,-105,-106,-106,-105,-106,]),'LRGEQ':([17,19,20,38,41,43,44,96,103,107,113,114,125,127,202,240,244,],[-105,-106,61,-103,-104,-120,-121,-103,-106,-105,-105,-106,-105,-106,-106,-105,-106,]),'SMLEQ':([17,19,20,38,41,43,44,96,103,107,113,114,125,127,202,240,244,],[-105,-106,62,-103,-104,-120,-121,-103,-106,-105,-105,-106,-105,-106,-106,-105,-106,]),'ICOR':([17,107,],[50,50,]),'AND':([17,19,33,43,44,103,107,113,114,125,127,202,240,244,],[-116,-117,70,-120,-121,-117,-116,-116,-117,-116,-117,-117,-116,-117,]),'OR':([17,19,33,43,44,103,107,113,114,125,127,202,240,244,],[-116,-117,71,-120,-121,-117,-116,-116,-117,-116,-117,-117,-116,-117,]),'PLUS':([17,18,38,39,40,81,83,107,240,],[51,51,-111,-112,-113,51,-111,51,51,]),'MINUS':([17,18,38,39,40,81,83,107,240,],[52,52,-111,-112,-113,52,-111,52,52,]),'TIMES':([17,18,38,39,40,81,83,107,240,],[53,53,-111,-112,-113,53,-111,53,53,]),'DIVIDE':([17,18,38,39,40,81,83,107,240,],[54,54,-111,-112,-113,54,-111,54,54,]),'DPAR':([18,27,28,29,30,31,32,38,39,40,41,43,44,65,72,73,74,81,82,83,87,89,90,94,95,96,97,98,99,100,101,102,103,104,105,107,108,111,112,113,114,115,116,118,119,121,122,123,139,140,142,144,145,151,156,161,162,163,171,175,176,177,178,179,180,181,182,184,185,186,187,194,196,197,198,207,208,209,210,211,216,217,218,219,220,232,233,234,247,248,249,250,251,256,257,266,],[-98,-44,-45,-46,-47,-48,-49,-111,-112,-113,-104,-120,-121,109,-115,-116,-117,-99,-101,-111,-53,-59,-60,-100,-102,-103,-105,-106,146,-38,-39,-40,-41,-42,-43,-99,149,151,-73,-74,-75,-76,-77,156,157,-114,160,-54,172,173,175,-51,-50,-95,-96,193,194,195,205,-55,207,208,209,-79,-80,-78,210,-63,-66,-67,-68,-56,226,227,228,-57,-97,-81,-82,-61,-25,-27,-28,-29,-30,-64,249,250,256,257,-69,-70,-26,-52,-58,268,]),'COMA':([38,39,40,43,44,80,83,112,113,114,184,185,186,187,216,217,218,219,220,249,250,260,],[-111,-112,-113,-120,-121,138,-111,152,153,154,213,-66,-67,-68,235,-27,-28,-29,-30,-69,-70,263,]),'EQUALS':([46,134,135,136,137,193,205,],[78,167,168,169,170,225,229,]),'DOSPUNTOS':([46,159,160,193,],[79,190,192,224,]),'FIRST':([49,],[84,]),'CAPITALIZE':([49,],[85,]),'SLICE':([49,148,],[86,86,]),'SIZE':([49,76,148,],[87,123,87,]),'ISEMPTY':([49,76,148,],[88,124,88,]),'KEYS':([49,148,],[89,89,]),'VALUES':([49,148,183,],[90,90,211,]),'GET':([49,148,183,],[91,91,212,]),'INT':([79,190,192,224,],[134,217,217,217,]),'STRING':([79,190,192,224,],[136,220,220,220,]),'BOOLEAN':([79,190,192,224,],[137,219,219,219,]),'DCOR':([92,93,],[144,145,]),'TO':([120,],[158,]),'ILLAVE':([160,193,217,218,219,220,222,239,],[191,223,-27,-28,-29,-30,237,254,]),'PAIR':([229,],[246,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'algoritmo':([0,2,191,223,237,254,],[1,45,221,238,252,259,]),'cuerpo':([0,2,191,223,237,254,],[2,2,2,2,2,2,]),'iniVariable':([0,2,191,223,237,254,],[3,3,3,3,3,3,]),'expresion':([0,2,48,55,63,64,191,223,225,237,254,258,262,],[4,4,82,94,102,102,4,4,243,4,4,243,243,]),'expresionRelacional':([0,2,63,64,66,67,78,150,152,153,154,155,164,165,170,191,214,215,223,225,237,254,258,262,],[5,5,105,105,115,115,129,115,115,115,115,115,115,115,204,5,115,115,5,245,5,5,245,245,]),'imprimir':([0,2,191,223,237,254,],[6,6,6,6,6,6,]),'readline':([0,2,191,223,237,254,],[7,7,7,7,7,7,]),'firstAndCap':([0,2,191,223,237,254,],[8,8,8,8,8,8,]),'list':([0,2,191,223,237,254,],[9,9,9,9,9,9,]),'conjuntos':([0,2,191,223,237,254,],[10,10,10,10,10,10,]),'tupla':([0,2,191,223,237,254,],[11,11,11,11,11,11,]),'maps':([0,2,191,223,237,254,],[12,12,12,12,12,12,]),'funColecciones':([0,2,63,64,191,223,237,254,],[13,13,100,100,13,13,13,13,]),'expLogicas':([0,2,63,64,66,67,78,150,152,153,154,155,164,165,170,191,214,215,223,225,237,254,258,262,],[14,14,104,104,116,116,128,116,116,116,116,116,116,116,203,14,116,116,14,242,14,14,242,242,]),'fun':([0,2,191,223,237,254,],[15,15,15,15,15,15,]),'variable':([0,2,191,223,237,254,],[16,16,16,16,16,16,]),'valor':([0,2,48,55,63,64,66,67,78,150,152,153,154,155,158,164,165,191,214,215,223,225,237,254,255,258,262,263,],[18,18,18,18,18,18,112,112,126,112,112,112,112,112,185,112,112,18,112,112,18,18,18,18,185,18,18,185,]),'valorBoolean':([0,2,34,56,63,64,66,67,69,78,150,152,153,154,155,158,164,165,170,191,214,215,223,225,237,254,255,258,262,263,],[19,19,74,98,103,103,114,114,74,127,114,114,114,114,114,187,114,114,202,19,114,114,19,244,19,19,187,244,244,187,]),'elementoRelacional':([0,2,56,63,64,66,67,78,150,152,153,154,155,164,165,170,191,214,215,223,225,237,254,258,262,],[20,20,95,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'indexCol':([0,2,63,64,191,223,237,254,],[27,27,27,27,27,27,27,27,]),'slice':([0,2,63,64,191,223,237,254,],[28,28,28,28,28,28,28,28,]),'size':([0,2,63,64,191,223,237,254,],[29,29,29,29,29,29,29,29,]),'isEmpty':([0,2,63,64,191,223,237,254,],[30,30,30,30,30,30,30,30,]),'funMap':([0,2,63,64,191,223,237,254,],[31,31,31,31,31,31,31,31,]),'getMap':([0,2,63,64,191,223,237,254,],[32,32,32,32,32,32,32,32,]),'boolID':([0,2,34,63,64,66,67,69,78,150,152,153,154,155,164,165,170,191,214,215,223,225,237,254,258,262,],[33,33,72,33,33,33,33,121,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'coleccion':([0,2,63,64,191,223,237,254,],[42,42,101,101,42,42,42,42,]),'operadorMat':([17,18,81,107,240,],[48,55,48,48,48,]),'operadorRelacional':([20,],[56,]),'opLogico':([33,],[69,]),'tipoDeDato':([46,],[77,]),'elementosPrint':([63,64,],[99,108,]),'listElementos':([66,67,150,152,153,154,155,164,165,214,215,],[111,118,178,179,180,181,182,196,197,233,234,]),'mapsElemento':([68,147,166,213,],[119,177,198,232,]),'entrada_fun':([122,235,],[161,251,]),'tuplaElemento':([158,255,263,],[184,260,266,]),'tipos':([190,192,224,],[216,222,239,]),'return':([225,258,262,],[241,261,265,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> algoritmo","S'",1,None,None,None),
  ('algoritmo -> cuerpo','algoritmo',1,'p_algoritmo','sintactico.py',6),
  ('algoritmo -> cuerpo algoritmo','algoritmo',2,'p_algoritmo','sintactico.py',7),
  ('cuerpo -> iniVariable','cuerpo',1,'p_cuerpo','sintactico.py',11),
  ('cuerpo -> expresion','cuerpo',1,'p_cuerpo','sintactico.py',12),
  ('cuerpo -> expresionRelacional','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> imprimir','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> readline','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> firstAndCap','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> list','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> conjuntos','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> tupla','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> maps','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> funColecciones','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> expLogicas','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> fun','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE','fun',7,'p_fun','sintactico.py',28),
  ('fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE','fun',8,'p_fun','sintactico.py',29),
  ('fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE','fun',11,'p_fun','sintactico.py',30),
  ('fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE','fun',12,'p_fun','sintactico.py',31),
  ('fun -> FUN ID IPAR entrada_fun DPAR EQUALS return','fun',7,'p_fun','sintactico.py',32),
  ('return -> expLogicas','return',1,'p_return','sintactico.py',38),
  ('return -> expresion','return',1,'p_return','sintactico.py',39),
  ('return -> valorBoolean','return',1,'p_return','sintactico.py',40),
  ('return -> expresionRelacional','return',1,'p_return','sintactico.py',41),
  ('entrada_fun -> ID DOSPUNTOS tipos','entrada_fun',3,'p_entrada_fun','sintactico.py',47),
  ('entrada_fun -> ID DOSPUNTOS tipos COMA entrada_fun','entrada_fun',5,'p_entrada_fun','sintactico.py',48),
  ('tipos -> INT','tipos',1,'p_tipos','sintactico.py',53),
  ('tipos -> DOUBLE','tipos',1,'p_tipos','sintactico.py',54),
  ('tipos -> BOOLEAN','tipos',1,'p_tipos','sintactico.py',55),
  ('tipos -> STRING','tipos',1,'p_tipos','sintactico.py',56),
  ('iniVariable -> variable ID tipoDeDato','iniVariable',3,'p_ini_variable','sintactico.py',64),
  ('iniVariable -> variable ID EQUALS valor','iniVariable',4,'p_ini_variable','sintactico.py',65),
  ('iniVariable -> variable ID EQUALS valorBoolean','iniVariable',4,'p_ini_variable','sintactico.py',66),
  ('iniVariable -> variable ID EQUALS expLogicas','iniVariable',4,'p_ini_variable','sintactico.py',67),
  ('iniVariable -> variable ID EQUALS expresionRelacional','iniVariable',4,'p_ini_variable','sintactico.py',68),
  ('imprimir -> PRINT IPAR elementosPrint DPAR','imprimir',4,'p_imprimir','sintactico.py',73),
  ('imprimir -> PRINTLN IPAR elementosPrint DPAR','imprimir',4,'p_imprimir','sintactico.py',74),
  ('elementosPrint -> funColecciones','elementosPrint',1,'p_elementosPrint','sintactico.py',79),
  ('elementosPrint -> coleccion','elementosPrint',1,'p_elementosPrint','sintactico.py',80),
  ('elementosPrint -> expresion','elementosPrint',1,'p_elementosPrint','sintactico.py',81),
  ('elementosPrint -> valorBoolean','elementosPrint',1,'p_elementosPrint','sintactico.py',82),
  ('elementosPrint -> expLogicas','elementosPrint',1,'p_elementosPrint','sintactico.py',83),
  ('elementosPrint -> expresionRelacional','elementosPrint',1,'p_elementosPrint','sintactico.py',84),
  ('funColecciones -> indexCol','funColecciones',1,'p_funColecciones','sintactico.py',89),
  ('funColecciones -> slice','funColecciones',1,'p_funColecciones','sintactico.py',90),
  ('funColecciones -> size','funColecciones',1,'p_funColecciones','sintactico.py',91),
  ('funColecciones -> isEmpty','funColecciones',1,'p_funColecciones','sintactico.py',92),
  ('funColecciones -> funMap','funColecciones',1,'p_funColecciones','sintactico.py',93),
  ('funColecciones -> getMap','funColecciones',1,'p_funColecciones','sintactico.py',94),
  ('indexCol -> ID ICOR ENTERO DCOR','indexCol',4,'p_indexCol','sintactico.py',100),
  ('indexCol -> ID ICOR ID DCOR','indexCol',4,'p_indexCol','sintactico.py',101),
  ('slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR','slice',9,'p_slice','sintactico.py',107),
  ('size -> ID PUNTO SIZE','size',3,'p_size','sintactico.py',113),
  ('size -> coleccion PUNTO SIZE','size',3,'p_size','sintactico.py',114),
  ('isEmpty -> ID PUNTO ISEMPTY IPAR DPAR','isEmpty',5,'p_isEmpty','sintactico.py',119),
  ('isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR','isEmpty',5,'p_isEmpty','sintactico.py',120),
  ('getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR','getMap',6,'p_getMap','sintactico.py',125),
  ('getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR','getMap',9,'p_getMap','sintactico.py',126),
  ('funMap -> ID PUNTO KEYS','funMap',3,'p_funMap','sintactico.py',131),
  ('funMap -> ID PUNTO VALUES','funMap',3,'p_funMap','sintactico.py',132),
  ('funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES','funMap',6,'p_funMap','sintactico.py',133),
  ('maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR','maps',7,'p_maps','sintactico.py',139),
  ('mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento','mapsElemento',3,'p_mapsElemento','sintactico.py',145),
  ('mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento','mapsElemento',5,'p_mapsElemento','sintactico.py',146),
  ('tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR','tupla',13,'p_tupla','sintactico.py',153),
  ('tuplaElemento -> valor','tuplaElemento',1,'p_tuplaElemento','sintactico.py',157),
  ('tuplaElemento -> ID','tuplaElemento',1,'p_tuplaElemento','sintactico.py',158),
  ('tuplaElemento -> valorBoolean','tuplaElemento',1,'p_tuplaElemento','sintactico.py',159),
  ('tuplaElemento -> LISTOF IPAR listElementos DPAR','tuplaElemento',4,'p_tuplaElemento','sintactico.py',160),
  ('tuplaElemento -> SETOF IPAR listElementos DPAR','tuplaElemento',4,'p_tuplaElemento','sintactico.py',161),
  ('conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR','conjuntos',7,'p_conjuntos','sintactico.py',164),
  ('list -> variable ID EQUALS LISTOF IPAR listElementos DPAR','list',7,'p_list','sintactico.py',168),
  ('listElementos -> valor','listElementos',1,'p_listElementos','sintactico.py',172),
  ('listElementos -> ID','listElementos',1,'p_listElementos','sintactico.py',173),
  ('listElementos -> valorBoolean','listElementos',1,'p_listElementos','sintactico.py',174),
  ('listElementos -> expresionRelacional','listElementos',1,'p_listElementos','sintactico.py',175),
  ('listElementos -> expLogicas','listElementos',1,'p_listElementos','sintactico.py',176),
  ('listElementos -> valorBoolean COMA listElementos','listElementos',3,'p_listElementos','sintactico.py',177),
  ('listElementos -> valor COMA listElementos','listElementos',3,'p_listElementos','sintactico.py',178),
  ('listElementos -> ID COMA listElementos','listElementos',3,'p_listElementos','sintactico.py',179),
  ('listElementos -> LISTOF IPAR listElementos DPAR','listElementos',4,'p_listElementos','sintactico.py',180),
  ('listElementos -> SETOF IPAR listElementos DPAR','listElementos',4,'p_listElementos','sintactico.py',181),
  ('variable -> VAR','variable',1,'p_variable','sintactico.py',186),
  ('variable -> VAL','variable',1,'p_variable','sintactico.py',187),
  ('readline -> READLINE IPAR DPAR','readline',3,'p_readline','sintactico.py',192),
  ('readline -> variable ID EQUALS READLINE IPAR DPAR','readline',6,'p_readline','sintactico.py',193),
  ('firstAndCap -> ID PUNTO FIRST IPAR DPAR','firstAndCap',5,'p_firstAndCap','sintactico.py',200),
  ('firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR','firstAndCap',5,'p_firstAndCap','sintactico.py',201),
  ('tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO','tipoDeDato',4,'p_tipoDeDato','sintactico.py',206),
  ('tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL','tipoDeDato',4,'p_tipoDeDato','sintactico.py',207),
  ('tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES','tipoDeDato',4,'p_tipoDeDato','sintactico.py',208),
  ('tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean','tipoDeDato',4,'p_tipoDeDato','sintactico.py',209),
  ('tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas','tipoDeDato',4,'p_tipoDeDato','sintactico.py',210),
  ('tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional','tipoDeDato',4,'p_tipoDeDato','sintactico.py',211),
  ('coleccion -> LISTOF IPAR listElementos DPAR','coleccion',4,'p_coleccion','sintactico.py',216),
  ('coleccion -> SETOF IPAR listElementos DPAR','coleccion',4,'p_coleccion','sintactico.py',217),
  ('coleccion -> MAPOF IPAR mapsElemento DPAR','coleccion',4,'p_coleccion','sintactico.py',218),
  ('expresion -> valor','expresion',1,'p_expresion','sintactico.py',223),
  ('expresion -> ID','expresion',1,'p_expresion','sintactico.py',224),
  ('expresion -> valor operadorMat expresion','expresion',3,'p_expresion_aritmetica','sintactico.py',231),
  ('expresion -> ID operadorMat expresion','expresion',3,'p_expresion_aritmetica','sintactico.py',232),
  ('expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional','expresionRelacional',3,'p_expresion_relacional','sintactico.py',238),
  ('elementoRelacional -> ENTERO','elementoRelacional',1,'p_elementoRelacional','sintactico.py',245),
  ('elementoRelacional -> DOUBLE','elementoRelacional',1,'p_elementoRelacional','sintactico.py',246),
  ('elementoRelacional -> ID','elementoRelacional',1,'p_elementoRelacional','sintactico.py',247),
  ('elementoRelacional -> valorBoolean','elementoRelacional',1,'p_elementoRelacional','sintactico.py',248),
  ('operadorMat -> PLUS','operadorMat',1,'p_operadorMat','sintactico.py',253),
  ('operadorMat -> MINUS','operadorMat',1,'p_operadorMat','sintactico.py',254),
  ('operadorMat -> TIMES','operadorMat',1,'p_operadorMat','sintactico.py',255),
  ('operadorMat -> DIVIDE','operadorMat',1,'p_operadorMat','sintactico.py',256),
  ('valor -> ENTERO','valor',1,'p_valor','sintactico.py',261),
  ('valor -> DECIMAL','valor',1,'p_valor','sintactico.py',262),
  ('valor -> CADENA_DE_CARACTERES','valor',1,'p_valor','sintactico.py',263),
  ('expLogicas -> boolID opLogico boolID','expLogicas',3,'p_expLogicas','sintactico.py',268),
  ('expLogicas -> NEGATION boolID','expLogicas',2,'p_expLogicas','sintactico.py',269),
  ('boolID -> ID','boolID',1,'p_boolID','sintactico.py',275),
  ('boolID -> valorBoolean','boolID',1,'p_boolID','sintactico.py',276),
  ('opLogico -> AND','opLogico',1,'p_opLogico','sintactico.py',282),
  ('opLogico -> OR','opLogico',1,'p_opLogico','sintactico.py',283),
  ('valorBoolean -> TRUE','valorBoolean',1,'p_valorBoolean','sintactico.py',287),
  ('valorBoolean -> FALSE','valorBoolean',1,'p_valorBoolean','sintactico.py',288),
  ('operadorRelacional -> EQUAL','operadorRelacional',1,'p_operadorRelacional','sintactico.py',294),
  ('operadorRelacional -> NOTEQ','operadorRelacional',1,'p_operadorRelacional','sintactico.py',295),
  ('operadorRelacional -> LARGE','operadorRelacional',1,'p_operadorRelacional','sintactico.py',296),
  ('operadorRelacional -> SMALL','operadorRelacional',1,'p_operadorRelacional','sintactico.py',297),
  ('operadorRelacional -> LRGEQ','operadorRelacional',1,'p_operadorRelacional','sintactico.py',298),
  ('operadorRelacional -> SMLEQ','operadorRelacional',1,'p_operadorRelacional','sintactico.py',299),
]
