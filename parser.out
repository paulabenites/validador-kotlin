Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DLLAVE
    ELSE
    EQUAL
    FOR
    FUN
    IF
    ILLAVE
    IN
    INDENT
    LARGE
    LRGEQ
    NOT
    NOTEQ
    PUNTOS
    RETURN
    SMALL
    SMLEQ
    STEP
    TAB
    WHILE
    newline

Grammar

Rule 0     S' -> algoritmo
Rule 1     algoritmo -> iniVariable
Rule 2     algoritmo -> expresion
Rule 3     algoritmo -> imprimir
Rule 4     algoritmo -> readline
Rule 5     algoritmo -> firstAndCap
Rule 6     algoritmo -> list
Rule 7     algoritmo -> conjuntos
Rule 8     algoritmo -> tupla
Rule 9     algoritmo -> maps
Rule 10    algoritmo -> funColecciones
Rule 11    iniVariable -> variable ID tipoDeDato
Rule 12    iniVariable -> variable ID EQUALS valor
Rule 13    iniVariable -> variable ID EQUALS valorBoolean
Rule 14    iniVariable -> variable ID EQUALS expLogicas
Rule 15    imprimir -> PRINT IPAR elementosPrint DPAR
Rule 16    imprimir -> PRINTLN IPAR elementosPrint DPAR
Rule 17    elementosPrint -> funColecciones
Rule 18    elementosPrint -> coleccion
Rule 19    elementosPrint -> expresion
Rule 20    elementosPrint -> valorBoolean
Rule 21    elementosPrint -> expLogicas
Rule 22    funColecciones -> indexCol
Rule 23    funColecciones -> slice
Rule 24    funColecciones -> size
Rule 25    funColecciones -> isEmpty
Rule 26    funColecciones -> funMap
Rule 27    funColecciones -> getMap
Rule 28    indexCol -> ID ICOR ENTERO DCOR
Rule 29    indexCol -> ID ICOR ID DCOR
Rule 30    slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
Rule 31    size -> ID PUNTO SIZE
Rule 32    size -> coleccion PUNTO SIZE
Rule 33    isEmpty -> ID PUNTO ISEMPTY IPAR DPAR
Rule 34    isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR
Rule 35    getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
Rule 36    getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
Rule 37    funMap -> ID PUNTO KEYS
Rule 38    funMap -> ID PUNTO VALUES
Rule 39    funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES
Rule 40    maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR
Rule 41    mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento
Rule 42    mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento
Rule 43    tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
Rule 44    tuplaElemento -> valor
Rule 45    tuplaElemento -> ID
Rule 46    tuplaElemento -> valorBoolean
Rule 47    tuplaElemento -> LISTOF IPAR listElementos DPAR
Rule 48    tuplaElemento -> SETOF IPAR listElementos DPAR
Rule 49    conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR
Rule 50    list -> variable ID EQUALS LISTOF IPAR listElementos DPAR
Rule 51    listElementos -> valor
Rule 52    listElementos -> ID
Rule 53    listElementos -> valorBoolean
Rule 54    listElementos -> valorBoolean COMA listElementos
Rule 55    listElementos -> valor COMA listElementos
Rule 56    listElementos -> ID COMA listElementos
Rule 57    listElementos -> LISTOF IPAR listElementos DPAR
Rule 58    listElementos -> SETOF IPAR listElementos DPAR
Rule 59    variable -> VAR
Rule 60    variable -> VAL
Rule 61    readline -> READLINE IPAR DPAR
Rule 62    readline -> variable ID EQUALS READLINE IPAR DPAR
Rule 63    firstAndCap -> ID PUNTO FIRST IPAR DPAR
Rule 64    firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR
Rule 65    tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO
Rule 66    tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL
Rule 67    tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES
Rule 68    tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean
Rule 69    tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas
Rule 70    coleccion -> LISTOF IPAR listElementos DPAR
Rule 71    coleccion -> SETOF IPAR listElementos DPAR
Rule 72    coleccion -> MAPOF IPAR mapsElemento DPAR
Rule 73    expresion -> valor
Rule 74    expresion -> ID
Rule 75    expresion -> valor operadorMat expresion
Rule 76    expresion -> ID operadorMat expresion
Rule 77    operadorMat -> PLUS
Rule 78    operadorMat -> MINUS
Rule 79    operadorMat -> TIMES
Rule 80    operadorMat -> DIVIDE
Rule 81    valor -> ENTERO
Rule 82    valor -> DECIMAL
Rule 83    valor -> CADENA_DE_CARACTERES
Rule 84    expLogicas -> boolID opLogico boolID
Rule 85    expLogicas -> NEGATION boolID
Rule 86    boolID -> ID
Rule 87    boolID -> valorBoolean
Rule 88    opLogico -> AND
Rule 89    opLogico -> OR
Rule 90    valorBoolean -> TRUE
Rule 91    valorBoolean -> FALSE

Terminals, with rules where they appear

AND                  : 88
BOOLEAN              : 68 69
CADENA_DE_CARACTERES : 35 36 41 42 67 83
CAPITALIZE           : 64
COMA                 : 42 43 43 54 55 56
DCOR                 : 28 29
DECIMAL              : 66 82
DIVIDE               : 80
DLLAVE               : 
DOSPUNTOS            : 65 66 67 68 69
DOUBLE               : 66
DPAR                 : 15 16 30 33 34 35 36 36 39 40 43 43 47 48 49 50 57 58 61 62 63 64 70 71 72
ELSE                 : 
ENTERO               : 28 30 30 65 81
EQUAL                : 
EQUALS               : 12 13 14 40 43 49 50 62 65 66 67 68 69
FALSE                : 91
FIRST                : 63
FOR                  : 
FUN                  : 
GET                  : 35 36
ICOR                 : 28 29
ID                   : 11 12 13 14 28 29 29 30 31 33 35 37 38 40 43 43 45 49 50 52 56 62 63 64 74 76 86
IF                   : 
ILLAVE               : 
IN                   : 
INDENT               : 
INT                  : 65
IPAR                 : 15 16 30 33 34 35 36 36 39 40 43 43 47 48 49 50 57 58 61 62 63 64 70 71 72
ISEMPTY              : 33 34
KEYS                 : 37
LARGE                : 
LISTOF               : 47 50 57 70
LRGEQ                : 
MAPOF                : 36 39 40 72
MINUS                : 78
NEGATION             : 85
NOT                  : 
NOTEQ                : 
OR                   : 89
PAIR                 : 43
PLUS                 : 77
PRINT                : 15
PRINTLN              : 16
PUNTO                : 30 30 30 31 32 33 34 35 36 37 38 39 63 64
PUNTOS               : 
READLINE             : 61 62
RETURN               : 
SETOF                : 48 49 58 71
SIZE                 : 31 32
SLICE                : 30
SMALL                : 
SMLEQ                : 
STEP                 : 
STRING               : 67
TAB                  : 
TIMES                : 79
TO                   : 41 42
TRUE                 : 90
VAL                  : 60
VALUES               : 38 39
VAR                  : 59
WHILE                : 
error                : 
newline              : 

Nonterminals, with rules where they appear

algoritmo            : 0
boolID               : 84 84 85
coleccion            : 18 32 34
conjuntos            : 7
elementosPrint       : 15 16
expLogicas           : 14 21 69
expresion            : 2 19 75 76
firstAndCap          : 5
funColecciones       : 10 17
funMap               : 26
getMap               : 27
imprimir             : 3
indexCol             : 22
iniVariable          : 1
isEmpty              : 25
list                 : 6
listElementos        : 47 48 49 50 54 55 56 57 58 70 71
maps                 : 9
mapsElemento         : 36 39 40 42 72
opLogico             : 84
operadorMat          : 75 76
readline             : 4
size                 : 24
slice                : 23
tipoDeDato           : 11
tupla                : 8
tuplaElemento        : 41 42 43 43
valor                : 12 44 51 55 73 75
valorBoolean         : 13 20 46 53 54 68 87
variable             : 11 12 13 14 40 43 49 50 62

Parsing method: LALR

state 0

    (0) S' -> . algoritmo
    (1) algoritmo -> . iniVariable
    (2) algoritmo -> . expresion
    (3) algoritmo -> . imprimir
    (4) algoritmo -> . readline
    (5) algoritmo -> . firstAndCap
    (6) algoritmo -> . list
    (7) algoritmo -> . conjuntos
    (8) algoritmo -> . tupla
    (9) algoritmo -> . maps
    (10) algoritmo -> . funColecciones
    (11) iniVariable -> . variable ID tipoDeDato
    (12) iniVariable -> . variable ID EQUALS valor
    (13) iniVariable -> . variable ID EQUALS valorBoolean
    (14) iniVariable -> . variable ID EQUALS expLogicas
    (73) expresion -> . valor
    (74) expresion -> . ID
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . ID operadorMat expresion
    (15) imprimir -> . PRINT IPAR elementosPrint DPAR
    (16) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (61) readline -> . READLINE IPAR DPAR
    (62) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (63) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (64) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (50) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (49) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (43) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (40) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (22) funColecciones -> . indexCol
    (23) funColecciones -> . slice
    (24) funColecciones -> . size
    (25) funColecciones -> . isEmpty
    (26) funColecciones -> . funMap
    (27) funColecciones -> . getMap
    (59) variable -> . VAR
    (60) variable -> . VAL
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (28) indexCol -> . ID ICOR ENTERO DCOR
    (29) indexCol -> . ID ICOR ID DCOR
    (30) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (31) size -> . ID PUNTO SIZE
    (32) size -> . coleccion PUNTO SIZE
    (33) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (34) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (37) funMap -> . ID PUNTO KEYS
    (38) funMap -> . ID PUNTO VALUES
    (39) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (35) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (36) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (70) coleccion -> . LISTOF IPAR listElementos DPAR
    (71) coleccion -> . SETOF IPAR listElementos DPAR
    (72) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 13
    PRINT           shift and go to state 15
    PRINTLN         shift and go to state 16
    READLINE        shift and go to state 17
    VAR             shift and go to state 27
    VAL             shift and go to state 28
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    MAPOF           shift and go to state 20
    LISTOF          shift and go to state 18
    SETOF           shift and go to state 19

    algoritmo                      shift and go to state 1
    iniVariable                    shift and go to state 2
    expresion                      shift and go to state 3
    imprimir                       shift and go to state 4
    readline                       shift and go to state 5
    firstAndCap                    shift and go to state 6
    list                           shift and go to state 7
    conjuntos                      shift and go to state 8
    tupla                          shift and go to state 9
    maps                           shift and go to state 10
    funColecciones                 shift and go to state 11
    variable                       shift and go to state 12
    valor                          shift and go to state 14
    indexCol                       shift and go to state 21
    slice                          shift and go to state 22
    size                           shift and go to state 23
    isEmpty                        shift and go to state 24
    funMap                         shift and go to state 25
    getMap                         shift and go to state 26
    coleccion                      shift and go to state 32

state 1

    (0) S' -> algoritmo .



state 2

    (1) algoritmo -> iniVariable .

    $end            reduce using rule 1 (algoritmo -> iniVariable .)


state 3

    (2) algoritmo -> expresion .

    $end            reduce using rule 2 (algoritmo -> expresion .)


state 4

    (3) algoritmo -> imprimir .

    $end            reduce using rule 3 (algoritmo -> imprimir .)


state 5

    (4) algoritmo -> readline .

    $end            reduce using rule 4 (algoritmo -> readline .)


state 6

    (5) algoritmo -> firstAndCap .

    $end            reduce using rule 5 (algoritmo -> firstAndCap .)


state 7

    (6) algoritmo -> list .

    $end            reduce using rule 6 (algoritmo -> list .)


state 8

    (7) algoritmo -> conjuntos .

    $end            reduce using rule 7 (algoritmo -> conjuntos .)


state 9

    (8) algoritmo -> tupla .

    $end            reduce using rule 8 (algoritmo -> tupla .)


state 10

    (9) algoritmo -> maps .

    $end            reduce using rule 9 (algoritmo -> maps .)


state 11

    (10) algoritmo -> funColecciones .

    $end            reduce using rule 10 (algoritmo -> funColecciones .)


state 12

    (11) iniVariable -> variable . ID tipoDeDato
    (12) iniVariable -> variable . ID EQUALS valor
    (13) iniVariable -> variable . ID EQUALS valorBoolean
    (14) iniVariable -> variable . ID EQUALS expLogicas
    (62) readline -> variable . ID EQUALS READLINE IPAR DPAR
    (50) list -> variable . ID EQUALS LISTOF IPAR listElementos DPAR
    (49) conjuntos -> variable . ID EQUALS SETOF IPAR listElementos DPAR
    (43) tupla -> variable . IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (40) maps -> variable . ID EQUALS MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 33
    IPAR            shift and go to state 34


state 13

    (74) expresion -> ID .
    (76) expresion -> ID . operadorMat expresion
    (63) firstAndCap -> ID . PUNTO FIRST IPAR DPAR
    (64) firstAndCap -> ID . PUNTO CAPITALIZE IPAR DPAR
    (28) indexCol -> ID . ICOR ENTERO DCOR
    (29) indexCol -> ID . ICOR ID DCOR
    (30) slice -> ID . PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (31) size -> ID . PUNTO SIZE
    (33) isEmpty -> ID . PUNTO ISEMPTY IPAR DPAR
    (37) funMap -> ID . PUNTO KEYS
    (38) funMap -> ID . PUNTO VALUES
    (35) getMap -> ID . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (77) operadorMat -> . PLUS
    (78) operadorMat -> . MINUS
    (79) operadorMat -> . TIMES
    (80) operadorMat -> . DIVIDE

    $end            reduce using rule 74 (expresion -> ID .)
    PUNTO           shift and go to state 36
    ICOR            shift and go to state 37
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

    operadorMat                    shift and go to state 35

state 14

    (73) expresion -> valor .
    (75) expresion -> valor . operadorMat expresion
    (77) operadorMat -> . PLUS
    (78) operadorMat -> . MINUS
    (79) operadorMat -> . TIMES
    (80) operadorMat -> . DIVIDE

    $end            reduce using rule 73 (expresion -> valor .)
    DPAR            reduce using rule 73 (expresion -> valor .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

    operadorMat                    shift and go to state 42

state 15

    (15) imprimir -> PRINT . IPAR elementosPrint DPAR

    IPAR            shift and go to state 43


state 16

    (16) imprimir -> PRINTLN . IPAR elementosPrint DPAR

    IPAR            shift and go to state 44


state 17

    (61) readline -> READLINE . IPAR DPAR

    IPAR            shift and go to state 45


state 18

    (70) coleccion -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 46


state 19

    (71) coleccion -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 47


state 20

    (39) funMap -> MAPOF . IPAR mapsElemento DPAR PUNTO VALUES
    (36) getMap -> MAPOF . IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (72) coleccion -> MAPOF . IPAR mapsElemento DPAR

    IPAR            shift and go to state 48


state 21

    (22) funColecciones -> indexCol .

    $end            reduce using rule 22 (funColecciones -> indexCol .)
    DPAR            reduce using rule 22 (funColecciones -> indexCol .)


state 22

    (23) funColecciones -> slice .

    $end            reduce using rule 23 (funColecciones -> slice .)
    DPAR            reduce using rule 23 (funColecciones -> slice .)


state 23

    (24) funColecciones -> size .

    $end            reduce using rule 24 (funColecciones -> size .)
    DPAR            reduce using rule 24 (funColecciones -> size .)


state 24

    (25) funColecciones -> isEmpty .

    $end            reduce using rule 25 (funColecciones -> isEmpty .)
    DPAR            reduce using rule 25 (funColecciones -> isEmpty .)


state 25

    (26) funColecciones -> funMap .

    $end            reduce using rule 26 (funColecciones -> funMap .)
    DPAR            reduce using rule 26 (funColecciones -> funMap .)


state 26

    (27) funColecciones -> getMap .

    $end            reduce using rule 27 (funColecciones -> getMap .)
    DPAR            reduce using rule 27 (funColecciones -> getMap .)


state 27

    (59) variable -> VAR .

    ID              reduce using rule 59 (variable -> VAR .)
    IPAR            reduce using rule 59 (variable -> VAR .)


state 28

    (60) variable -> VAL .

    ID              reduce using rule 60 (variable -> VAL .)
    IPAR            reduce using rule 60 (variable -> VAL .)


state 29

    (81) valor -> ENTERO .

    PLUS            reduce using rule 81 (valor -> ENTERO .)
    MINUS           reduce using rule 81 (valor -> ENTERO .)
    TIMES           reduce using rule 81 (valor -> ENTERO .)
    DIVIDE          reduce using rule 81 (valor -> ENTERO .)
    $end            reduce using rule 81 (valor -> ENTERO .)
    DPAR            reduce using rule 81 (valor -> ENTERO .)
    COMA            reduce using rule 81 (valor -> ENTERO .)


state 30

    (82) valor -> DECIMAL .

    PLUS            reduce using rule 82 (valor -> DECIMAL .)
    MINUS           reduce using rule 82 (valor -> DECIMAL .)
    TIMES           reduce using rule 82 (valor -> DECIMAL .)
    DIVIDE          reduce using rule 82 (valor -> DECIMAL .)
    $end            reduce using rule 82 (valor -> DECIMAL .)
    DPAR            reduce using rule 82 (valor -> DECIMAL .)
    COMA            reduce using rule 82 (valor -> DECIMAL .)


state 31

    (83) valor -> CADENA_DE_CARACTERES .

    PLUS            reduce using rule 83 (valor -> CADENA_DE_CARACTERES .)
    MINUS           reduce using rule 83 (valor -> CADENA_DE_CARACTERES .)
    TIMES           reduce using rule 83 (valor -> CADENA_DE_CARACTERES .)
    DIVIDE          reduce using rule 83 (valor -> CADENA_DE_CARACTERES .)
    $end            reduce using rule 83 (valor -> CADENA_DE_CARACTERES .)
    DPAR            reduce using rule 83 (valor -> CADENA_DE_CARACTERES .)
    COMA            reduce using rule 83 (valor -> CADENA_DE_CARACTERES .)


state 32

    (32) size -> coleccion . PUNTO SIZE
    (34) isEmpty -> coleccion . PUNTO ISEMPTY IPAR DPAR

    PUNTO           shift and go to state 49


state 33

    (11) iniVariable -> variable ID . tipoDeDato
    (12) iniVariable -> variable ID . EQUALS valor
    (13) iniVariable -> variable ID . EQUALS valorBoolean
    (14) iniVariable -> variable ID . EQUALS expLogicas
    (62) readline -> variable ID . EQUALS READLINE IPAR DPAR
    (50) list -> variable ID . EQUALS LISTOF IPAR listElementos DPAR
    (49) conjuntos -> variable ID . EQUALS SETOF IPAR listElementos DPAR
    (40) maps -> variable ID . EQUALS MAPOF IPAR mapsElemento DPAR
    (65) tipoDeDato -> . DOSPUNTOS INT EQUALS ENTERO
    (66) tipoDeDato -> . DOSPUNTOS DOUBLE EQUALS DECIMAL
    (67) tipoDeDato -> . DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES
    (68) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS valorBoolean
    (69) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS expLogicas

    EQUALS          shift and go to state 51
    DOSPUNTOS       shift and go to state 52

    tipoDeDato                     shift and go to state 50

state 34

    (43) tupla -> variable IPAR . ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    ID              shift and go to state 53


state 35

    (76) expresion -> ID operadorMat . expresion
    (73) expresion -> . valor
    (74) expresion -> . ID
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . ID operadorMat expresion
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 54
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31

    expresion                      shift and go to state 55
    valor                          shift and go to state 14

state 36

    (63) firstAndCap -> ID PUNTO . FIRST IPAR DPAR
    (64) firstAndCap -> ID PUNTO . CAPITALIZE IPAR DPAR
    (30) slice -> ID PUNTO . SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (31) size -> ID PUNTO . SIZE
    (33) isEmpty -> ID PUNTO . ISEMPTY IPAR DPAR
    (37) funMap -> ID PUNTO . KEYS
    (38) funMap -> ID PUNTO . VALUES
    (35) getMap -> ID PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    FIRST           shift and go to state 56
    CAPITALIZE      shift and go to state 57
    SLICE           shift and go to state 58
    SIZE            shift and go to state 59
    ISEMPTY         shift and go to state 60
    KEYS            shift and go to state 61
    VALUES          shift and go to state 62
    GET             shift and go to state 63


state 37

    (28) indexCol -> ID ICOR . ENTERO DCOR
    (29) indexCol -> ID ICOR . ID DCOR

    ENTERO          shift and go to state 65
    ID              shift and go to state 64


state 38

    (77) operadorMat -> PLUS .

    ID              reduce using rule 77 (operadorMat -> PLUS .)
    ENTERO          reduce using rule 77 (operadorMat -> PLUS .)
    DECIMAL         reduce using rule 77 (operadorMat -> PLUS .)
    CADENA_DE_CARACTERES reduce using rule 77 (operadorMat -> PLUS .)


state 39

    (78) operadorMat -> MINUS .

    ID              reduce using rule 78 (operadorMat -> MINUS .)
    ENTERO          reduce using rule 78 (operadorMat -> MINUS .)
    DECIMAL         reduce using rule 78 (operadorMat -> MINUS .)
    CADENA_DE_CARACTERES reduce using rule 78 (operadorMat -> MINUS .)


state 40

    (79) operadorMat -> TIMES .

    ID              reduce using rule 79 (operadorMat -> TIMES .)
    ENTERO          reduce using rule 79 (operadorMat -> TIMES .)
    DECIMAL         reduce using rule 79 (operadorMat -> TIMES .)
    CADENA_DE_CARACTERES reduce using rule 79 (operadorMat -> TIMES .)


state 41

    (80) operadorMat -> DIVIDE .

    ID              reduce using rule 80 (operadorMat -> DIVIDE .)
    ENTERO          reduce using rule 80 (operadorMat -> DIVIDE .)
    DECIMAL         reduce using rule 80 (operadorMat -> DIVIDE .)
    CADENA_DE_CARACTERES reduce using rule 80 (operadorMat -> DIVIDE .)


state 42

    (75) expresion -> valor operadorMat . expresion
    (73) expresion -> . valor
    (74) expresion -> . ID
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . ID operadorMat expresion
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 54
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31

    valor                          shift and go to state 14
    expresion                      shift and go to state 66

state 43

    (15) imprimir -> PRINT IPAR . elementosPrint DPAR
    (17) elementosPrint -> . funColecciones
    (18) elementosPrint -> . coleccion
    (19) elementosPrint -> . expresion
    (20) elementosPrint -> . valorBoolean
    (21) elementosPrint -> . expLogicas
    (22) funColecciones -> . indexCol
    (23) funColecciones -> . slice
    (24) funColecciones -> . size
    (25) funColecciones -> . isEmpty
    (26) funColecciones -> . funMap
    (27) funColecciones -> . getMap
    (70) coleccion -> . LISTOF IPAR listElementos DPAR
    (71) coleccion -> . SETOF IPAR listElementos DPAR
    (72) coleccion -> . MAPOF IPAR mapsElemento DPAR
    (73) expresion -> . valor
    (74) expresion -> . ID
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . ID operadorMat expresion
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE
    (84) expLogicas -> . boolID opLogico boolID
    (85) expLogicas -> . NEGATION boolID
    (28) indexCol -> . ID ICOR ENTERO DCOR
    (29) indexCol -> . ID ICOR ID DCOR
    (30) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (31) size -> . ID PUNTO SIZE
    (32) size -> . coleccion PUNTO SIZE
    (33) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (34) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (37) funMap -> . ID PUNTO KEYS
    (38) funMap -> . ID PUNTO VALUES
    (39) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (35) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (36) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (86) boolID -> . ID
    (87) boolID -> . valorBoolean

    LISTOF          shift and go to state 18
    SETOF           shift and go to state 19
    MAPOF           shift and go to state 73
    ID              shift and go to state 74
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NEGATION        shift and go to state 78
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31

    elementosPrint                 shift and go to state 67
    funColecciones                 shift and go to state 68
    coleccion                      shift and go to state 69
    expresion                      shift and go to state 70
    valorBoolean                   shift and go to state 71
    expLogicas                     shift and go to state 72
    indexCol                       shift and go to state 21
    slice                          shift and go to state 22
    size                           shift and go to state 23
    isEmpty                        shift and go to state 24
    funMap                         shift and go to state 25
    getMap                         shift and go to state 26
    valor                          shift and go to state 14
    boolID                         shift and go to state 77

state 44

    (16) imprimir -> PRINTLN IPAR . elementosPrint DPAR
    (17) elementosPrint -> . funColecciones
    (18) elementosPrint -> . coleccion
    (19) elementosPrint -> . expresion
    (20) elementosPrint -> . valorBoolean
    (21) elementosPrint -> . expLogicas
    (22) funColecciones -> . indexCol
    (23) funColecciones -> . slice
    (24) funColecciones -> . size
    (25) funColecciones -> . isEmpty
    (26) funColecciones -> . funMap
    (27) funColecciones -> . getMap
    (70) coleccion -> . LISTOF IPAR listElementos DPAR
    (71) coleccion -> . SETOF IPAR listElementos DPAR
    (72) coleccion -> . MAPOF IPAR mapsElemento DPAR
    (73) expresion -> . valor
    (74) expresion -> . ID
    (75) expresion -> . valor operadorMat expresion
    (76) expresion -> . ID operadorMat expresion
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE
    (84) expLogicas -> . boolID opLogico boolID
    (85) expLogicas -> . NEGATION boolID
    (28) indexCol -> . ID ICOR ENTERO DCOR
    (29) indexCol -> . ID ICOR ID DCOR
    (30) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (31) size -> . ID PUNTO SIZE
    (32) size -> . coleccion PUNTO SIZE
    (33) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (34) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (37) funMap -> . ID PUNTO KEYS
    (38) funMap -> . ID PUNTO VALUES
    (39) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (35) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (36) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (86) boolID -> . ID
    (87) boolID -> . valorBoolean

    LISTOF          shift and go to state 18
    SETOF           shift and go to state 19
    MAPOF           shift and go to state 73
    ID              shift and go to state 74
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NEGATION        shift and go to state 78
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31

    elementosPrint                 shift and go to state 79
    funColecciones                 shift and go to state 68
    coleccion                      shift and go to state 69
    expresion                      shift and go to state 70
    valorBoolean                   shift and go to state 71
    expLogicas                     shift and go to state 72
    indexCol                       shift and go to state 21
    slice                          shift and go to state 22
    size                           shift and go to state 23
    isEmpty                        shift and go to state 24
    funMap                         shift and go to state 25
    getMap                         shift and go to state 26
    valor                          shift and go to state 14
    boolID                         shift and go to state 77

state 45

    (61) readline -> READLINE IPAR . DPAR

    DPAR            shift and go to state 80


state 46

    (70) coleccion -> LISTOF IPAR . listElementos DPAR
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElementos                  shift and go to state 82
    valor                          shift and go to state 83
    valorBoolean                   shift and go to state 85

state 47

    (71) coleccion -> SETOF IPAR . listElementos DPAR
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElementos                  shift and go to state 87
    valor                          shift and go to state 83
    valorBoolean                   shift and go to state 85

state 48

    (39) funMap -> MAPOF IPAR . mapsElemento DPAR PUNTO VALUES
    (36) getMap -> MAPOF IPAR . mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (72) coleccion -> MAPOF IPAR . mapsElemento DPAR
    (41) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (42) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 89

    mapsElemento                   shift and go to state 88

state 49

    (32) size -> coleccion PUNTO . SIZE
    (34) isEmpty -> coleccion PUNTO . ISEMPTY IPAR DPAR

    SIZE            shift and go to state 90
    ISEMPTY         shift and go to state 91


state 50

    (11) iniVariable -> variable ID tipoDeDato .

    $end            reduce using rule 11 (iniVariable -> variable ID tipoDeDato .)


state 51

    (12) iniVariable -> variable ID EQUALS . valor
    (13) iniVariable -> variable ID EQUALS . valorBoolean
    (14) iniVariable -> variable ID EQUALS . expLogicas
    (62) readline -> variable ID EQUALS . READLINE IPAR DPAR
    (50) list -> variable ID EQUALS . LISTOF IPAR listElementos DPAR
    (49) conjuntos -> variable ID EQUALS . SETOF IPAR listElementos DPAR
    (40) maps -> variable ID EQUALS . MAPOF IPAR mapsElemento DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE
    (84) expLogicas -> . boolID opLogico boolID
    (85) expLogicas -> . NEGATION boolID
    (86) boolID -> . ID
    (87) boolID -> . valorBoolean

    READLINE        shift and go to state 96
    LISTOF          shift and go to state 97
    SETOF           shift and go to state 98
    MAPOF           shift and go to state 99
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NEGATION        shift and go to state 78
    ID              shift and go to state 92

    valor                          shift and go to state 93
    valorBoolean                   shift and go to state 94
    expLogicas                     shift and go to state 95
    boolID                         shift and go to state 77

state 52

    (65) tipoDeDato -> DOSPUNTOS . INT EQUALS ENTERO
    (66) tipoDeDato -> DOSPUNTOS . DOUBLE EQUALS DECIMAL
    (67) tipoDeDato -> DOSPUNTOS . STRING EQUALS CADENA_DE_CARACTERES
    (68) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS valorBoolean
    (69) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS expLogicas

    INT             shift and go to state 100
    DOUBLE          shift and go to state 101
    STRING          shift and go to state 102
    BOOLEAN         shift and go to state 103


state 53

    (43) tupla -> variable IPAR ID . COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    COMA            shift and go to state 104


state 54

    (74) expresion -> ID .
    (76) expresion -> ID . operadorMat expresion
    (77) operadorMat -> . PLUS
    (78) operadorMat -> . MINUS
    (79) operadorMat -> . TIMES
    (80) operadorMat -> . DIVIDE

    $end            reduce using rule 74 (expresion -> ID .)
    DPAR            reduce using rule 74 (expresion -> ID .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

    operadorMat                    shift and go to state 35

state 55

    (76) expresion -> ID operadorMat expresion .

    $end            reduce using rule 76 (expresion -> ID operadorMat expresion .)
    DPAR            reduce using rule 76 (expresion -> ID operadorMat expresion .)


state 56

    (63) firstAndCap -> ID PUNTO FIRST . IPAR DPAR

    IPAR            shift and go to state 105


state 57

    (64) firstAndCap -> ID PUNTO CAPITALIZE . IPAR DPAR

    IPAR            shift and go to state 106


state 58

    (30) slice -> ID PUNTO SLICE . IPAR ENTERO PUNTO PUNTO ENTERO DPAR

    IPAR            shift and go to state 107


state 59

    (31) size -> ID PUNTO SIZE .

    $end            reduce using rule 31 (size -> ID PUNTO SIZE .)
    DPAR            reduce using rule 31 (size -> ID PUNTO SIZE .)


state 60

    (33) isEmpty -> ID PUNTO ISEMPTY . IPAR DPAR

    IPAR            shift and go to state 108


state 61

    (37) funMap -> ID PUNTO KEYS .

    $end            reduce using rule 37 (funMap -> ID PUNTO KEYS .)
    DPAR            reduce using rule 37 (funMap -> ID PUNTO KEYS .)


state 62

    (38) funMap -> ID PUNTO VALUES .

    $end            reduce using rule 38 (funMap -> ID PUNTO VALUES .)
    DPAR            reduce using rule 38 (funMap -> ID PUNTO VALUES .)


state 63

    (35) getMap -> ID PUNTO GET . IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 109


state 64

    (29) indexCol -> ID ICOR ID . DCOR

    DCOR            shift and go to state 110


state 65

    (28) indexCol -> ID ICOR ENTERO . DCOR

    DCOR            shift and go to state 111


state 66

    (75) expresion -> valor operadorMat expresion .

    $end            reduce using rule 75 (expresion -> valor operadorMat expresion .)
    DPAR            reduce using rule 75 (expresion -> valor operadorMat expresion .)


state 67

    (15) imprimir -> PRINT IPAR elementosPrint . DPAR

    DPAR            shift and go to state 112


state 68

    (17) elementosPrint -> funColecciones .

    DPAR            reduce using rule 17 (elementosPrint -> funColecciones .)


state 69

    (18) elementosPrint -> coleccion .
    (32) size -> coleccion . PUNTO SIZE
    (34) isEmpty -> coleccion . PUNTO ISEMPTY IPAR DPAR

    DPAR            reduce using rule 18 (elementosPrint -> coleccion .)
    PUNTO           shift and go to state 49


state 70

    (19) elementosPrint -> expresion .

    DPAR            reduce using rule 19 (elementosPrint -> expresion .)


state 71

    (20) elementosPrint -> valorBoolean .
    (87) boolID -> valorBoolean .

    DPAR            reduce using rule 20 (elementosPrint -> valorBoolean .)
    AND             reduce using rule 87 (boolID -> valorBoolean .)
    OR              reduce using rule 87 (boolID -> valorBoolean .)


state 72

    (21) elementosPrint -> expLogicas .

    DPAR            reduce using rule 21 (elementosPrint -> expLogicas .)


state 73

    (72) coleccion -> MAPOF . IPAR mapsElemento DPAR
    (39) funMap -> MAPOF . IPAR mapsElemento DPAR PUNTO VALUES
    (36) getMap -> MAPOF . IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 113


state 74

    (74) expresion -> ID .
    (76) expresion -> ID . operadorMat expresion
    (28) indexCol -> ID . ICOR ENTERO DCOR
    (29) indexCol -> ID . ICOR ID DCOR
    (30) slice -> ID . PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (31) size -> ID . PUNTO SIZE
    (33) isEmpty -> ID . PUNTO ISEMPTY IPAR DPAR
    (37) funMap -> ID . PUNTO KEYS
    (38) funMap -> ID . PUNTO VALUES
    (35) getMap -> ID . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (86) boolID -> ID .
    (77) operadorMat -> . PLUS
    (78) operadorMat -> . MINUS
    (79) operadorMat -> . TIMES
    (80) operadorMat -> . DIVIDE

    DPAR            reduce using rule 74 (expresion -> ID .)
    ICOR            shift and go to state 37
    PUNTO           shift and go to state 114
    AND             reduce using rule 86 (boolID -> ID .)
    OR              reduce using rule 86 (boolID -> ID .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

    operadorMat                    shift and go to state 35

state 75

    (90) valorBoolean -> TRUE .

    DPAR            reduce using rule 90 (valorBoolean -> TRUE .)
    AND             reduce using rule 90 (valorBoolean -> TRUE .)
    OR              reduce using rule 90 (valorBoolean -> TRUE .)
    COMA            reduce using rule 90 (valorBoolean -> TRUE .)
    $end            reduce using rule 90 (valorBoolean -> TRUE .)


state 76

    (91) valorBoolean -> FALSE .

    DPAR            reduce using rule 91 (valorBoolean -> FALSE .)
    AND             reduce using rule 91 (valorBoolean -> FALSE .)
    OR              reduce using rule 91 (valorBoolean -> FALSE .)
    COMA            reduce using rule 91 (valorBoolean -> FALSE .)
    $end            reduce using rule 91 (valorBoolean -> FALSE .)


state 77

    (84) expLogicas -> boolID . opLogico boolID
    (88) opLogico -> . AND
    (89) opLogico -> . OR

    AND             shift and go to state 116
    OR              shift and go to state 117

    opLogico                       shift and go to state 115

state 78

    (85) expLogicas -> NEGATION . boolID
    (86) boolID -> . ID
    (87) boolID -> . valorBoolean
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 92
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    boolID                         shift and go to state 118
    valorBoolean                   shift and go to state 119

state 79

    (16) imprimir -> PRINTLN IPAR elementosPrint . DPAR

    DPAR            shift and go to state 120


state 80

    (61) readline -> READLINE IPAR DPAR .

    $end            reduce using rule 61 (readline -> READLINE IPAR DPAR .)


state 81

    (57) listElementos -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 121


state 82

    (70) coleccion -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 122


state 83

    (51) listElementos -> valor .
    (55) listElementos -> valor . COMA listElementos

    DPAR            reduce using rule 51 (listElementos -> valor .)
    COMA            shift and go to state 123


state 84

    (52) listElementos -> ID .
    (56) listElementos -> ID . COMA listElementos

    DPAR            reduce using rule 52 (listElementos -> ID .)
    COMA            shift and go to state 124


state 85

    (53) listElementos -> valorBoolean .
    (54) listElementos -> valorBoolean . COMA listElementos

    DPAR            reduce using rule 53 (listElementos -> valorBoolean .)
    COMA            shift and go to state 125


state 86

    (58) listElementos -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 126


state 87

    (71) coleccion -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 127


state 88

    (39) funMap -> MAPOF IPAR mapsElemento . DPAR PUNTO VALUES
    (36) getMap -> MAPOF IPAR mapsElemento . DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (72) coleccion -> MAPOF IPAR mapsElemento . DPAR

    DPAR            shift and go to state 128


state 89

    (41) mapsElemento -> CADENA_DE_CARACTERES . TO tuplaElemento
    (42) mapsElemento -> CADENA_DE_CARACTERES . TO tuplaElemento COMA mapsElemento

    TO              shift and go to state 129


state 90

    (32) size -> coleccion PUNTO SIZE .

    $end            reduce using rule 32 (size -> coleccion PUNTO SIZE .)
    DPAR            reduce using rule 32 (size -> coleccion PUNTO SIZE .)


state 91

    (34) isEmpty -> coleccion PUNTO ISEMPTY . IPAR DPAR

    IPAR            shift and go to state 130


state 92

    (86) boolID -> ID .

    AND             reduce using rule 86 (boolID -> ID .)
    OR              reduce using rule 86 (boolID -> ID .)
    DPAR            reduce using rule 86 (boolID -> ID .)
    $end            reduce using rule 86 (boolID -> ID .)


state 93

    (12) iniVariable -> variable ID EQUALS valor .

    $end            reduce using rule 12 (iniVariable -> variable ID EQUALS valor .)


state 94

    (13) iniVariable -> variable ID EQUALS valorBoolean .
    (87) boolID -> valorBoolean .

    $end            reduce using rule 13 (iniVariable -> variable ID EQUALS valorBoolean .)
    AND             reduce using rule 87 (boolID -> valorBoolean .)
    OR              reduce using rule 87 (boolID -> valorBoolean .)


state 95

    (14) iniVariable -> variable ID EQUALS expLogicas .

    $end            reduce using rule 14 (iniVariable -> variable ID EQUALS expLogicas .)


state 96

    (62) readline -> variable ID EQUALS READLINE . IPAR DPAR

    IPAR            shift and go to state 131


state 97

    (50) list -> variable ID EQUALS LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 132


state 98

    (49) conjuntos -> variable ID EQUALS SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 133


state 99

    (40) maps -> variable ID EQUALS MAPOF . IPAR mapsElemento DPAR

    IPAR            shift and go to state 134


state 100

    (65) tipoDeDato -> DOSPUNTOS INT . EQUALS ENTERO

    EQUALS          shift and go to state 135


state 101

    (66) tipoDeDato -> DOSPUNTOS DOUBLE . EQUALS DECIMAL

    EQUALS          shift and go to state 136


state 102

    (67) tipoDeDato -> DOSPUNTOS STRING . EQUALS CADENA_DE_CARACTERES

    EQUALS          shift and go to state 137


state 103

    (68) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS valorBoolean
    (69) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS expLogicas

    EQUALS          shift and go to state 138


state 104

    (43) tupla -> variable IPAR ID COMA . ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    ID              shift and go to state 139


state 105

    (63) firstAndCap -> ID PUNTO FIRST IPAR . DPAR

    DPAR            shift and go to state 140


state 106

    (64) firstAndCap -> ID PUNTO CAPITALIZE IPAR . DPAR

    DPAR            shift and go to state 141


state 107

    (30) slice -> ID PUNTO SLICE IPAR . ENTERO PUNTO PUNTO ENTERO DPAR

    ENTERO          shift and go to state 142


state 108

    (33) isEmpty -> ID PUNTO ISEMPTY IPAR . DPAR

    DPAR            shift and go to state 143


state 109

    (35) getMap -> ID PUNTO GET IPAR . CADENA_DE_CARACTERES DPAR

    CADENA_DE_CARACTERES shift and go to state 144


state 110

    (29) indexCol -> ID ICOR ID DCOR .

    $end            reduce using rule 29 (indexCol -> ID ICOR ID DCOR .)
    DPAR            reduce using rule 29 (indexCol -> ID ICOR ID DCOR .)


state 111

    (28) indexCol -> ID ICOR ENTERO DCOR .

    $end            reduce using rule 28 (indexCol -> ID ICOR ENTERO DCOR .)
    DPAR            reduce using rule 28 (indexCol -> ID ICOR ENTERO DCOR .)


state 112

    (15) imprimir -> PRINT IPAR elementosPrint DPAR .

    $end            reduce using rule 15 (imprimir -> PRINT IPAR elementosPrint DPAR .)


state 113

    (72) coleccion -> MAPOF IPAR . mapsElemento DPAR
    (39) funMap -> MAPOF IPAR . mapsElemento DPAR PUNTO VALUES
    (36) getMap -> MAPOF IPAR . mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (41) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (42) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 89

    mapsElemento                   shift and go to state 145

state 114

    (30) slice -> ID PUNTO . SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (31) size -> ID PUNTO . SIZE
    (33) isEmpty -> ID PUNTO . ISEMPTY IPAR DPAR
    (37) funMap -> ID PUNTO . KEYS
    (38) funMap -> ID PUNTO . VALUES
    (35) getMap -> ID PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    SLICE           shift and go to state 58
    SIZE            shift and go to state 59
    ISEMPTY         shift and go to state 60
    KEYS            shift and go to state 61
    VALUES          shift and go to state 62
    GET             shift and go to state 63


state 115

    (84) expLogicas -> boolID opLogico . boolID
    (86) boolID -> . ID
    (87) boolID -> . valorBoolean
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 92
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    boolID                         shift and go to state 146
    valorBoolean                   shift and go to state 119

state 116

    (88) opLogico -> AND .

    ID              reduce using rule 88 (opLogico -> AND .)
    TRUE            reduce using rule 88 (opLogico -> AND .)
    FALSE           reduce using rule 88 (opLogico -> AND .)


state 117

    (89) opLogico -> OR .

    ID              reduce using rule 89 (opLogico -> OR .)
    TRUE            reduce using rule 89 (opLogico -> OR .)
    FALSE           reduce using rule 89 (opLogico -> OR .)


state 118

    (85) expLogicas -> NEGATION boolID .

    DPAR            reduce using rule 85 (expLogicas -> NEGATION boolID .)
    $end            reduce using rule 85 (expLogicas -> NEGATION boolID .)


state 119

    (87) boolID -> valorBoolean .

    DPAR            reduce using rule 87 (boolID -> valorBoolean .)
    $end            reduce using rule 87 (boolID -> valorBoolean .)


state 120

    (16) imprimir -> PRINTLN IPAR elementosPrint DPAR .

    $end            reduce using rule 16 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)


state 121

    (57) listElementos -> LISTOF IPAR . listElementos DPAR
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElementos                  shift and go to state 147
    valor                          shift and go to state 83
    valorBoolean                   shift and go to state 85

state 122

    (70) coleccion -> LISTOF IPAR listElementos DPAR .

    PUNTO           reduce using rule 70 (coleccion -> LISTOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 70 (coleccion -> LISTOF IPAR listElementos DPAR .)


state 123

    (55) listElementos -> valor COMA . listElementos
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    valor                          shift and go to state 83
    listElementos                  shift and go to state 148
    valorBoolean                   shift and go to state 85

state 124

    (56) listElementos -> ID COMA . listElementos
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElementos                  shift and go to state 149
    valor                          shift and go to state 83
    valorBoolean                   shift and go to state 85

state 125

    (54) listElementos -> valorBoolean COMA . listElementos
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    valorBoolean                   shift and go to state 85
    listElementos                  shift and go to state 150
    valor                          shift and go to state 83

state 126

    (58) listElementos -> SETOF IPAR . listElementos DPAR
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElementos                  shift and go to state 151
    valor                          shift and go to state 83
    valorBoolean                   shift and go to state 85

state 127

    (71) coleccion -> SETOF IPAR listElementos DPAR .

    PUNTO           reduce using rule 71 (coleccion -> SETOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 71 (coleccion -> SETOF IPAR listElementos DPAR .)


state 128

    (39) funMap -> MAPOF IPAR mapsElemento DPAR . PUNTO VALUES
    (36) getMap -> MAPOF IPAR mapsElemento DPAR . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (72) coleccion -> MAPOF IPAR mapsElemento DPAR .

  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO           shift and go to state 152

  ! PUNTO           [ reduce using rule 72 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]


state 129

    (41) mapsElemento -> CADENA_DE_CARACTERES TO . tuplaElemento
    (42) mapsElemento -> CADENA_DE_CARACTERES TO . tuplaElemento COMA mapsElemento
    (44) tuplaElemento -> . valor
    (45) tuplaElemento -> . ID
    (46) tuplaElemento -> . valorBoolean
    (47) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (48) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 155
    LISTOF          shift and go to state 157
    SETOF           shift and go to state 158
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    tuplaElemento                  shift and go to state 153
    valor                          shift and go to state 154
    valorBoolean                   shift and go to state 156

state 130

    (34) isEmpty -> coleccion PUNTO ISEMPTY IPAR . DPAR

    DPAR            shift and go to state 159


state 131

    (62) readline -> variable ID EQUALS READLINE IPAR . DPAR

    DPAR            shift and go to state 160


state 132

    (50) list -> variable ID EQUALS LISTOF IPAR . listElementos DPAR
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElementos                  shift and go to state 161
    valor                          shift and go to state 83
    valorBoolean                   shift and go to state 85

state 133

    (49) conjuntos -> variable ID EQUALS SETOF IPAR . listElementos DPAR
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElementos                  shift and go to state 162
    valor                          shift and go to state 83
    valorBoolean                   shift and go to state 85

state 134

    (40) maps -> variable ID EQUALS MAPOF IPAR . mapsElemento DPAR
    (41) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (42) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 89

    mapsElemento                   shift and go to state 163

state 135

    (65) tipoDeDato -> DOSPUNTOS INT EQUALS . ENTERO

    ENTERO          shift and go to state 164


state 136

    (66) tipoDeDato -> DOSPUNTOS DOUBLE EQUALS . DECIMAL

    DECIMAL         shift and go to state 165


state 137

    (67) tipoDeDato -> DOSPUNTOS STRING EQUALS . CADENA_DE_CARACTERES

    CADENA_DE_CARACTERES shift and go to state 166


state 138

    (68) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . valorBoolean
    (69) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . expLogicas
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE
    (84) expLogicas -> . boolID opLogico boolID
    (85) expLogicas -> . NEGATION boolID
    (86) boolID -> . ID
    (87) boolID -> . valorBoolean

    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    NEGATION        shift and go to state 78
    ID              shift and go to state 92

    valorBoolean                   shift and go to state 167
    expLogicas                     shift and go to state 168
    boolID                         shift and go to state 77

state 139

    (43) tupla -> variable IPAR ID COMA ID . DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    DPAR            shift and go to state 169


state 140

    (63) firstAndCap -> ID PUNTO FIRST IPAR DPAR .

    $end            reduce using rule 63 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)


state 141

    (64) firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .

    $end            reduce using rule 64 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)


state 142

    (30) slice -> ID PUNTO SLICE IPAR ENTERO . PUNTO PUNTO ENTERO DPAR

    PUNTO           shift and go to state 170


state 143

    (33) isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .

    $end            reduce using rule 33 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DPAR            reduce using rule 33 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)


state 144

    (35) getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES . DPAR

    DPAR            shift and go to state 171


state 145

    (72) coleccion -> MAPOF IPAR mapsElemento . DPAR
    (39) funMap -> MAPOF IPAR mapsElemento . DPAR PUNTO VALUES
    (36) getMap -> MAPOF IPAR mapsElemento . DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR

    DPAR            shift and go to state 172


state 146

    (84) expLogicas -> boolID opLogico boolID .

    DPAR            reduce using rule 84 (expLogicas -> boolID opLogico boolID .)
    $end            reduce using rule 84 (expLogicas -> boolID opLogico boolID .)


state 147

    (57) listElementos -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 173


state 148

    (55) listElementos -> valor COMA listElementos .

    DPAR            reduce using rule 55 (listElementos -> valor COMA listElementos .)


state 149

    (56) listElementos -> ID COMA listElementos .

    DPAR            reduce using rule 56 (listElementos -> ID COMA listElementos .)


state 150

    (54) listElementos -> valorBoolean COMA listElementos .

    DPAR            reduce using rule 54 (listElementos -> valorBoolean COMA listElementos .)


state 151

    (58) listElementos -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 174


state 152

    (39) funMap -> MAPOF IPAR mapsElemento DPAR PUNTO . VALUES
    (36) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    VALUES          shift and go to state 175
    GET             shift and go to state 176


state 153

    (41) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento .
    (42) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento . COMA mapsElemento

    DPAR            reduce using rule 41 (mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento .)
    COMA            shift and go to state 177


state 154

    (44) tuplaElemento -> valor .

    COMA            reduce using rule 44 (tuplaElemento -> valor .)
    DPAR            reduce using rule 44 (tuplaElemento -> valor .)


state 155

    (45) tuplaElemento -> ID .

    COMA            reduce using rule 45 (tuplaElemento -> ID .)
    DPAR            reduce using rule 45 (tuplaElemento -> ID .)


state 156

    (46) tuplaElemento -> valorBoolean .

    COMA            reduce using rule 46 (tuplaElemento -> valorBoolean .)
    DPAR            reduce using rule 46 (tuplaElemento -> valorBoolean .)


state 157

    (47) tuplaElemento -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 178


state 158

    (48) tuplaElemento -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 179


state 159

    (34) isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .

    $end            reduce using rule 34 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DPAR            reduce using rule 34 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)


state 160

    (62) readline -> variable ID EQUALS READLINE IPAR DPAR .

    $end            reduce using rule 62 (readline -> variable ID EQUALS READLINE IPAR DPAR .)


state 161

    (50) list -> variable ID EQUALS LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 180


state 162

    (49) conjuntos -> variable ID EQUALS SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 181


state 163

    (40) maps -> variable ID EQUALS MAPOF IPAR mapsElemento . DPAR

    DPAR            shift and go to state 182


state 164

    (65) tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .

    $end            reduce using rule 65 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)


state 165

    (66) tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .

    $end            reduce using rule 66 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)


state 166

    (67) tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .

    $end            reduce using rule 67 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)


state 167

    (68) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .
    (87) boolID -> valorBoolean .

    $end            reduce using rule 68 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    AND             reduce using rule 87 (boolID -> valorBoolean .)
    OR              reduce using rule 87 (boolID -> valorBoolean .)


state 168

    (69) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .

    $end            reduce using rule 69 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)


state 169

    (43) tupla -> variable IPAR ID COMA ID DPAR . EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    EQUALS          shift and go to state 183


state 170

    (30) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO . PUNTO ENTERO DPAR

    PUNTO           shift and go to state 184


state 171

    (35) getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .

    $end            reduce using rule 35 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DPAR            reduce using rule 35 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)


state 172

    (72) coleccion -> MAPOF IPAR mapsElemento DPAR .
    (39) funMap -> MAPOF IPAR mapsElemento DPAR . PUNTO VALUES
    (36) getMap -> MAPOF IPAR mapsElemento DPAR . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR

  ! shift/reduce conflict for PUNTO resolved as shift
    DPAR            reduce using rule 72 (coleccion -> MAPOF IPAR mapsElemento DPAR .)
    PUNTO           shift and go to state 152

  ! PUNTO           [ reduce using rule 72 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]


state 173

    (57) listElementos -> LISTOF IPAR listElementos DPAR .

    DPAR            reduce using rule 57 (listElementos -> LISTOF IPAR listElementos DPAR .)


state 174

    (58) listElementos -> SETOF IPAR listElementos DPAR .

    DPAR            reduce using rule 58 (listElementos -> SETOF IPAR listElementos DPAR .)


state 175

    (39) funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .

    $end            reduce using rule 39 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DPAR            reduce using rule 39 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)


state 176

    (36) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET . IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 185


state 177

    (42) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA . mapsElemento
    (41) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (42) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 89

    mapsElemento                   shift and go to state 186

state 178

    (47) tuplaElemento -> LISTOF IPAR . listElementos DPAR
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElementos                  shift and go to state 187
    valor                          shift and go to state 83
    valorBoolean                   shift and go to state 85

state 179

    (48) tuplaElemento -> SETOF IPAR . listElementos DPAR
    (51) listElementos -> . valor
    (52) listElementos -> . ID
    (53) listElementos -> . valorBoolean
    (54) listElementos -> . valorBoolean COMA listElementos
    (55) listElementos -> . valor COMA listElementos
    (56) listElementos -> . ID COMA listElementos
    (57) listElementos -> . LISTOF IPAR listElementos DPAR
    (58) listElementos -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 84
    LISTOF          shift and go to state 81
    SETOF           shift and go to state 86
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    listElementos                  shift and go to state 188
    valor                          shift and go to state 83
    valorBoolean                   shift and go to state 85

state 180

    (50) list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .

    $end            reduce using rule 50 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)


state 181

    (49) conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .

    $end            reduce using rule 49 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)


state 182

    (40) maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .

    $end            reduce using rule 40 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)


state 183

    (43) tupla -> variable IPAR ID COMA ID DPAR EQUALS . PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    PAIR            shift and go to state 189


state 184

    (30) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO . ENTERO DPAR

    ENTERO          shift and go to state 190


state 185

    (36) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR . CADENA_DE_CARACTERES DPAR

    CADENA_DE_CARACTERES shift and go to state 191


state 186

    (42) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento .

    DPAR            reduce using rule 42 (mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento .)


state 187

    (47) tuplaElemento -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 192


state 188

    (48) tuplaElemento -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 193


state 189

    (43) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR . IPAR tuplaElemento COMA tuplaElemento DPAR

    IPAR            shift and go to state 194


state 190

    (30) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO . DPAR

    DPAR            shift and go to state 195


state 191

    (36) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES . DPAR

    DPAR            shift and go to state 196


state 192

    (47) tuplaElemento -> LISTOF IPAR listElementos DPAR .

    COMA            reduce using rule 47 (tuplaElemento -> LISTOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 47 (tuplaElemento -> LISTOF IPAR listElementos DPAR .)


state 193

    (48) tuplaElemento -> SETOF IPAR listElementos DPAR .

    COMA            reduce using rule 48 (tuplaElemento -> SETOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 48 (tuplaElemento -> SETOF IPAR listElementos DPAR .)


state 194

    (43) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR . tuplaElemento COMA tuplaElemento DPAR
    (44) tuplaElemento -> . valor
    (45) tuplaElemento -> . ID
    (46) tuplaElemento -> . valorBoolean
    (47) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (48) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 155
    LISTOF          shift and go to state 157
    SETOF           shift and go to state 158
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    tuplaElemento                  shift and go to state 197
    valor                          shift and go to state 154
    valorBoolean                   shift and go to state 156

state 195

    (30) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .

    $end            reduce using rule 30 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DPAR            reduce using rule 30 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)


state 196

    (36) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .

    $end            reduce using rule 36 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DPAR            reduce using rule 36 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)


state 197

    (43) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento . COMA tuplaElemento DPAR

    COMA            shift and go to state 198


state 198

    (43) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA . tuplaElemento DPAR
    (44) tuplaElemento -> . valor
    (45) tuplaElemento -> . ID
    (46) tuplaElemento -> . valorBoolean
    (47) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (48) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (81) valor -> . ENTERO
    (82) valor -> . DECIMAL
    (83) valor -> . CADENA_DE_CARACTERES
    (90) valorBoolean -> . TRUE
    (91) valorBoolean -> . FALSE

    ID              shift and go to state 155
    LISTOF          shift and go to state 157
    SETOF           shift and go to state 158
    ENTERO          shift and go to state 29
    DECIMAL         shift and go to state 30
    CADENA_DE_CARACTERES shift and go to state 31
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    tuplaElemento                  shift and go to state 199
    valor                          shift and go to state 154
    valorBoolean                   shift and go to state 156

state 199

    (43) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento . DPAR

    DPAR            shift and go to state 200


state 200

    (43) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .

    $end            reduce using rule 43 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTO in state 128 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 172 resolved as shift
