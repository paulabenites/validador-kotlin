Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT
    PUNTOS
    WHILE

Grammar

Rule 0     S' -> algoritmo
Rule 1     algoritmo -> cuerpo
Rule 2     algoritmo -> cuerpo algoritmo
Rule 3     cuerpo -> iniVariable
Rule 4     cuerpo -> expresion
Rule 5     cuerpo -> expresionRelacional
Rule 6     cuerpo -> imprimir
Rule 7     cuerpo -> readline
Rule 8     cuerpo -> firstAndCap
Rule 9     cuerpo -> list
Rule 10    cuerpo -> conjuntos
Rule 11    cuerpo -> tupla
Rule 12    cuerpo -> maps
Rule 13    cuerpo -> funColecciones
Rule 14    cuerpo -> expLogicas
Rule 15    cuerpo -> fun
Rule 16    cuerpo -> if
Rule 17    cuerpo -> for
Rule 18    fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
Rule 19    fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
Rule 20    fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
Rule 21    fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
Rule 22    fun -> FUN ID IPAR entrada_fun DPAR EQUALS return
Rule 23    for -> FOR condicionFor ILLAVE algoritmo DLLAVE
Rule 24    condicionFor -> IPAR ID IN ID DPAR
Rule 25    condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR
Rule 26    condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR
Rule 27    if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
Rule 28    if -> IF IPAR entradaIf DPAR return
Rule 29    if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
Rule 30    if -> IF IPAR entradaIf DPAR return else
Rule 31    else -> ELSE ILLAVE algoritmo DLLAVE
Rule 32    else -> ELSE return
Rule 33    entradaIf -> valorBoolean
Rule 34    entradaIf -> expLogicas
Rule 35    entradaIf -> expresionRelacional
Rule 36    return -> expLogicas
Rule 37    return -> expresion
Rule 38    return -> valorBoolean
Rule 39    return -> expresionRelacional
Rule 40    entrada_fun -> ID DOSPUNTOS tipos
Rule 41    entrada_fun -> ID DOSPUNTOS tipos COMA entrada_fun
Rule 42    tipos -> INT
Rule 43    tipos -> DOUBLE
Rule 44    tipos -> BOOLEAN
Rule 45    tipos -> STRING
Rule 46    iniVariable -> variable ID tipoDeDato
Rule 47    iniVariable -> variable ID EQUALS valor
Rule 48    iniVariable -> variable ID EQUALS valorBoolean
Rule 49    iniVariable -> variable ID EQUALS expLogicas
Rule 50    iniVariable -> variable ID EQUALS expresionRelacional
Rule 51    imprimir -> PRINT IPAR elementosPrint DPAR
Rule 52    imprimir -> PRINTLN IPAR elementosPrint DPAR
Rule 53    elementosPrint -> funColecciones
Rule 54    elementosPrint -> coleccion
Rule 55    elementosPrint -> expresion
Rule 56    elementosPrint -> valorBoolean
Rule 57    elementosPrint -> expLogicas
Rule 58    elementosPrint -> expresionRelacional
Rule 59    funColecciones -> indexCol
Rule 60    funColecciones -> slice
Rule 61    funColecciones -> size
Rule 62    funColecciones -> isEmpty
Rule 63    funColecciones -> funMap
Rule 64    funColecciones -> getMap
Rule 65    indexCol -> ID ICOR ENTERO DCOR
Rule 66    indexCol -> ID ICOR ID DCOR
Rule 67    slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
Rule 68    size -> ID PUNTO SIZE
Rule 69    size -> coleccion PUNTO SIZE
Rule 70    isEmpty -> ID PUNTO ISEMPTY IPAR DPAR
Rule 71    isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR
Rule 72    getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
Rule 73    getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
Rule 74    funMap -> ID PUNTO KEYS
Rule 75    funMap -> ID PUNTO VALUES
Rule 76    funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES
Rule 77    maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR
Rule 78    mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento
Rule 79    mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento
Rule 80    tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
Rule 81    tuplaElemento -> valor
Rule 82    tuplaElemento -> ID
Rule 83    tuplaElemento -> valorBoolean
Rule 84    tuplaElemento -> LISTOF IPAR listElementos DPAR
Rule 85    tuplaElemento -> SETOF IPAR listElementos DPAR
Rule 86    conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR
Rule 87    list -> variable ID EQUALS LISTOF IPAR listElementos DPAR
Rule 88    listElementos -> valor
Rule 89    listElementos -> ID
Rule 90    listElementos -> valorBoolean
Rule 91    listElementos -> expresionRelacional
Rule 92    listElementos -> expLogicas
Rule 93    listElementos -> valorBoolean COMA listElementos
Rule 94    listElementos -> valor COMA listElementos
Rule 95    listElementos -> ID COMA listElementos
Rule 96    listElementos -> LISTOF IPAR listElementos DPAR
Rule 97    listElementos -> SETOF IPAR listElementos DPAR
Rule 98    variable -> VAR
Rule 99    variable -> VAL
Rule 100   readline -> READLINE IPAR DPAR
Rule 101   readline -> variable ID EQUALS READLINE IPAR DPAR
Rule 102   firstAndCap -> ID PUNTO FIRST IPAR DPAR
Rule 103   firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR
Rule 104   tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO
Rule 105   tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL
Rule 106   tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES
Rule 107   tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean
Rule 108   tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas
Rule 109   tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional
Rule 110   coleccion -> LISTOF IPAR listElementos DPAR
Rule 111   coleccion -> SETOF IPAR listElementos DPAR
Rule 112   coleccion -> MAPOF IPAR mapsElemento DPAR
Rule 113   expresion -> valor
Rule 114   expresion -> ID
Rule 115   expresion -> valor operadorMat expresion
Rule 116   expresion -> ID operadorMat expresion
Rule 117   expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional
Rule 118   elementoRelacional -> ENTERO
Rule 119   elementoRelacional -> DOUBLE
Rule 120   elementoRelacional -> ID
Rule 121   elementoRelacional -> valorBoolean
Rule 122   operadorMat -> PLUS
Rule 123   operadorMat -> MINUS
Rule 124   operadorMat -> TIMES
Rule 125   operadorMat -> DIVIDE
Rule 126   valor -> ENTERO
Rule 127   valor -> DECIMAL
Rule 128   valor -> CADENA_DE_CARACTERES
Rule 129   expLogicas -> boolID opLogico boolID
Rule 130   expLogicas -> NEGATION boolID
Rule 131   boolID -> ID
Rule 132   boolID -> valorBoolean
Rule 133   opLogico -> AND
Rule 134   opLogico -> OR
Rule 135   valorBoolean -> TRUE
Rule 136   valorBoolean -> FALSE
Rule 137   operadorRelacional -> EQUAL
Rule 138   operadorRelacional -> NOTEQ
Rule 139   operadorRelacional -> LARGE
Rule 140   operadorRelacional -> SMALL
Rule 141   operadorRelacional -> LRGEQ
Rule 142   operadorRelacional -> SMLEQ

Terminals, with rules where they appear

AND                  : 133
BOOLEAN              : 44 107 108 109
CADENA_DE_CARACTERES : 72 73 78 79 106 128
CAPITALIZE           : 103
COMA                 : 41 79 80 80 93 94 95
DCOR                 : 65 66
DECIMAL              : 105 127
DIVIDE               : 125
DLLAVE               : 18 19 20 21 23 27 29 31
DOSPUNTOS            : 20 21 40 41 104 105 106 107 108 109
DOUBLE               : 43 105 119
DPAR                 : 18 19 20 21 22 24 25 26 27 28 29 30 51 52 67 70 71 72 73 73 76 77 80 80 84 85 86 87 96 97 100 101 102 103 110 111 112
ELSE                 : 31 32
ENTERO               : 25 25 26 26 26 65 67 67 104 118 126
EQUAL                : 137
EQUALS               : 22 47 48 49 50 77 80 86 87 101 104 105 106 107 108 109
FALSE                : 136
FIRST                : 102
FOR                  : 23
FUN                  : 18 19 20 21 22
GET                  : 72 73
ICOR                 : 65 66
ID                   : 18 19 20 21 22 24 24 25 26 40 41 46 47 48 49 50 65 66 66 67 68 70 72 74 75 77 80 80 82 86 87 89 95 101 102 103 114 116 120 131
IF                   : 27 28 29 30
ILLAVE               : 18 19 20 21 23 27 29 31
IN                   : 24 25 26
INT                  : 42 104
IPAR                 : 18 19 20 21 22 24 25 26 27 28 29 30 51 52 67 70 71 72 73 73 76 77 80 80 84 85 86 87 96 97 100 101 102 103 110 111 112
ISEMPTY              : 70 71
KEYS                 : 74
LARGE                : 139
LISTOF               : 84 87 96 110
LRGEQ                : 141
MAPOF                : 73 76 77 112
MINUS                : 123
NEGATION             : 130
NOT                  : 
NOTEQ                : 138
OR                   : 134
PAIR                 : 80
PLUS                 : 122
PRINT                : 51
PRINTLN              : 52
PUNTO                : 25 25 26 26 67 67 67 68 69 70 71 72 73 74 75 76 102 103
PUNTOS               : 
READLINE             : 100 101
RETURN               : 20 21
SETOF                : 85 86 97 111
SIZE                 : 68 69
SLICE                : 67
SMALL                : 140
SMLEQ                : 142
STEP                 : 26
STRING               : 45 106
TIMES                : 124
TO                   : 78 79
TRUE                 : 135
VAL                  : 99
VALUES               : 75 76
VAR                  : 98
WHILE                : 
error                : 

Nonterminals, with rules where they appear

algoritmo            : 2 18 19 20 21 23 27 29 31 0
boolID               : 129 129 130
coleccion            : 54 69 71
condicionFor         : 23
conjuntos            : 10
cuerpo               : 1 2
elementoRelacional   : 117 117
elementosPrint       : 51 52
else                 : 29 30
entradaIf            : 27 28 29 30
entrada_fun          : 19 21 22 41
expLogicas           : 14 34 36 49 57 92 108
expresion            : 4 37 55 115 116
expresionRelacional  : 5 35 39 50 58 91 109
firstAndCap          : 8
for                  : 17
fun                  : 15
funColecciones       : 13 53
funMap               : 63
getMap               : 64
if                   : 16
imprimir             : 6
indexCol             : 59
iniVariable          : 3
isEmpty              : 62
list                 : 9
listElementos        : 84 85 86 87 93 94 95 96 97 110 111
maps                 : 12
mapsElemento         : 73 76 77 79 112
opLogico             : 129
operadorMat          : 115 116
operadorRelacional   : 117
readline             : 7
return               : 20 21 22 28 30 32
size                 : 61
slice                : 60
tipoDeDato           : 46
tipos                : 20 21 40 41
tupla                : 11
tuplaElemento        : 78 79 80 80
valor                : 47 81 88 94 113 115
valorBoolean         : 33 38 48 56 83 90 93 107 121 132
variable             : 46 47 48 49 50 77 80 86 87 101

Parsing method: LALR

state 0

    (0) S' -> . algoritmo
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (46) iniVariable -> . variable ID tipoDeDato
    (47) iniVariable -> . variable ID EQUALS valor
    (48) iniVariable -> . variable ID EQUALS valorBoolean
    (49) iniVariable -> . variable ID EQUALS expLogicas
    (50) iniVariable -> . variable ID EQUALS expresionRelacional
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (51) imprimir -> . PRINT IPAR elementosPrint DPAR
    (52) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (100) readline -> . READLINE IPAR DPAR
    (101) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (102) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (103) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (87) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (80) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (18) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (27) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> . IF IPAR entradaIf DPAR return
    (29) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> . IF IPAR entradaIf DPAR return else
    (23) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (98) variable -> . VAR
    (99) variable -> . VAL
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 19
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 36
    FUN             shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    VAR             shift and go to state 40
    VAL             shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45
    MAPOF           shift and go to state 28
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27

    algoritmo                      shift and go to state 1
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    variable                       shift and go to state 18
    valor                          shift and go to state 20
    valorBoolean                   shift and go to state 21
    elementoRelacional             shift and go to state 22
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    boolID                         shift and go to state 35
    coleccion                      shift and go to state 46

state 1

    (0) S' -> algoritmo .



state 2

    (1) algoritmo -> cuerpo .
    (2) algoritmo -> cuerpo . algoritmo
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (46) iniVariable -> . variable ID tipoDeDato
    (47) iniVariable -> . variable ID EQUALS valor
    (48) iniVariable -> . variable ID EQUALS valorBoolean
    (49) iniVariable -> . variable ID EQUALS expLogicas
    (50) iniVariable -> . variable ID EQUALS expresionRelacional
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (51) imprimir -> . PRINT IPAR elementosPrint DPAR
    (52) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (100) readline -> . READLINE IPAR DPAR
    (101) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (102) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (103) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (87) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (80) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (18) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (27) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> . IF IPAR entradaIf DPAR return
    (29) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> . IF IPAR entradaIf DPAR return else
    (23) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (98) variable -> . VAR
    (99) variable -> . VAL
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR

    $end            reduce using rule 1 (algoritmo -> cuerpo .)
    DLLAVE          reduce using rule 1 (algoritmo -> cuerpo .)
    RETURN          reduce using rule 1 (algoritmo -> cuerpo .)
    ID              shift and go to state 19
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 36
    FUN             shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    VAR             shift and go to state 40
    VAL             shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45
    MAPOF           shift and go to state 28
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27

    cuerpo                         shift and go to state 2
    algoritmo                      shift and go to state 49
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    variable                       shift and go to state 18
    valor                          shift and go to state 20
    valorBoolean                   shift and go to state 21
    elementoRelacional             shift and go to state 22
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    boolID                         shift and go to state 35
    coleccion                      shift and go to state 46

state 3

    (3) cuerpo -> iniVariable .

    ID              reduce using rule 3 (cuerpo -> iniVariable .)
    PRINT           reduce using rule 3 (cuerpo -> iniVariable .)
    PRINTLN         reduce using rule 3 (cuerpo -> iniVariable .)
    READLINE        reduce using rule 3 (cuerpo -> iniVariable .)
    NEGATION        reduce using rule 3 (cuerpo -> iniVariable .)
    FUN             reduce using rule 3 (cuerpo -> iniVariable .)
    IF              reduce using rule 3 (cuerpo -> iniVariable .)
    FOR             reduce using rule 3 (cuerpo -> iniVariable .)
    VAR             reduce using rule 3 (cuerpo -> iniVariable .)
    VAL             reduce using rule 3 (cuerpo -> iniVariable .)
    ENTERO          reduce using rule 3 (cuerpo -> iniVariable .)
    DECIMAL         reduce using rule 3 (cuerpo -> iniVariable .)
    CADENA_DE_CARACTERES reduce using rule 3 (cuerpo -> iniVariable .)
    DOUBLE          reduce using rule 3 (cuerpo -> iniVariable .)
    MAPOF           reduce using rule 3 (cuerpo -> iniVariable .)
    TRUE            reduce using rule 3 (cuerpo -> iniVariable .)
    FALSE           reduce using rule 3 (cuerpo -> iniVariable .)
    LISTOF          reduce using rule 3 (cuerpo -> iniVariable .)
    SETOF           reduce using rule 3 (cuerpo -> iniVariable .)
    $end            reduce using rule 3 (cuerpo -> iniVariable .)
    DLLAVE          reduce using rule 3 (cuerpo -> iniVariable .)
    RETURN          reduce using rule 3 (cuerpo -> iniVariable .)


state 4

    (4) cuerpo -> expresion .

    ID              reduce using rule 4 (cuerpo -> expresion .)
    PRINT           reduce using rule 4 (cuerpo -> expresion .)
    PRINTLN         reduce using rule 4 (cuerpo -> expresion .)
    READLINE        reduce using rule 4 (cuerpo -> expresion .)
    NEGATION        reduce using rule 4 (cuerpo -> expresion .)
    FUN             reduce using rule 4 (cuerpo -> expresion .)
    IF              reduce using rule 4 (cuerpo -> expresion .)
    FOR             reduce using rule 4 (cuerpo -> expresion .)
    VAR             reduce using rule 4 (cuerpo -> expresion .)
    VAL             reduce using rule 4 (cuerpo -> expresion .)
    ENTERO          reduce using rule 4 (cuerpo -> expresion .)
    DECIMAL         reduce using rule 4 (cuerpo -> expresion .)
    CADENA_DE_CARACTERES reduce using rule 4 (cuerpo -> expresion .)
    DOUBLE          reduce using rule 4 (cuerpo -> expresion .)
    MAPOF           reduce using rule 4 (cuerpo -> expresion .)
    TRUE            reduce using rule 4 (cuerpo -> expresion .)
    FALSE           reduce using rule 4 (cuerpo -> expresion .)
    LISTOF          reduce using rule 4 (cuerpo -> expresion .)
    SETOF           reduce using rule 4 (cuerpo -> expresion .)
    $end            reduce using rule 4 (cuerpo -> expresion .)
    DLLAVE          reduce using rule 4 (cuerpo -> expresion .)
    RETURN          reduce using rule 4 (cuerpo -> expresion .)


state 5

    (5) cuerpo -> expresionRelacional .

    ID              reduce using rule 5 (cuerpo -> expresionRelacional .)
    PRINT           reduce using rule 5 (cuerpo -> expresionRelacional .)
    PRINTLN         reduce using rule 5 (cuerpo -> expresionRelacional .)
    READLINE        reduce using rule 5 (cuerpo -> expresionRelacional .)
    NEGATION        reduce using rule 5 (cuerpo -> expresionRelacional .)
    FUN             reduce using rule 5 (cuerpo -> expresionRelacional .)
    IF              reduce using rule 5 (cuerpo -> expresionRelacional .)
    FOR             reduce using rule 5 (cuerpo -> expresionRelacional .)
    VAR             reduce using rule 5 (cuerpo -> expresionRelacional .)
    VAL             reduce using rule 5 (cuerpo -> expresionRelacional .)
    ENTERO          reduce using rule 5 (cuerpo -> expresionRelacional .)
    DECIMAL         reduce using rule 5 (cuerpo -> expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 5 (cuerpo -> expresionRelacional .)
    DOUBLE          reduce using rule 5 (cuerpo -> expresionRelacional .)
    MAPOF           reduce using rule 5 (cuerpo -> expresionRelacional .)
    TRUE            reduce using rule 5 (cuerpo -> expresionRelacional .)
    FALSE           reduce using rule 5 (cuerpo -> expresionRelacional .)
    LISTOF          reduce using rule 5 (cuerpo -> expresionRelacional .)
    SETOF           reduce using rule 5 (cuerpo -> expresionRelacional .)
    $end            reduce using rule 5 (cuerpo -> expresionRelacional .)
    DLLAVE          reduce using rule 5 (cuerpo -> expresionRelacional .)
    RETURN          reduce using rule 5 (cuerpo -> expresionRelacional .)


state 6

    (6) cuerpo -> imprimir .

    ID              reduce using rule 6 (cuerpo -> imprimir .)
    PRINT           reduce using rule 6 (cuerpo -> imprimir .)
    PRINTLN         reduce using rule 6 (cuerpo -> imprimir .)
    READLINE        reduce using rule 6 (cuerpo -> imprimir .)
    NEGATION        reduce using rule 6 (cuerpo -> imprimir .)
    FUN             reduce using rule 6 (cuerpo -> imprimir .)
    IF              reduce using rule 6 (cuerpo -> imprimir .)
    FOR             reduce using rule 6 (cuerpo -> imprimir .)
    VAR             reduce using rule 6 (cuerpo -> imprimir .)
    VAL             reduce using rule 6 (cuerpo -> imprimir .)
    ENTERO          reduce using rule 6 (cuerpo -> imprimir .)
    DECIMAL         reduce using rule 6 (cuerpo -> imprimir .)
    CADENA_DE_CARACTERES reduce using rule 6 (cuerpo -> imprimir .)
    DOUBLE          reduce using rule 6 (cuerpo -> imprimir .)
    MAPOF           reduce using rule 6 (cuerpo -> imprimir .)
    TRUE            reduce using rule 6 (cuerpo -> imprimir .)
    FALSE           reduce using rule 6 (cuerpo -> imprimir .)
    LISTOF          reduce using rule 6 (cuerpo -> imprimir .)
    SETOF           reduce using rule 6 (cuerpo -> imprimir .)
    $end            reduce using rule 6 (cuerpo -> imprimir .)
    DLLAVE          reduce using rule 6 (cuerpo -> imprimir .)
    RETURN          reduce using rule 6 (cuerpo -> imprimir .)


state 7

    (7) cuerpo -> readline .

    ID              reduce using rule 7 (cuerpo -> readline .)
    PRINT           reduce using rule 7 (cuerpo -> readline .)
    PRINTLN         reduce using rule 7 (cuerpo -> readline .)
    READLINE        reduce using rule 7 (cuerpo -> readline .)
    NEGATION        reduce using rule 7 (cuerpo -> readline .)
    FUN             reduce using rule 7 (cuerpo -> readline .)
    IF              reduce using rule 7 (cuerpo -> readline .)
    FOR             reduce using rule 7 (cuerpo -> readline .)
    VAR             reduce using rule 7 (cuerpo -> readline .)
    VAL             reduce using rule 7 (cuerpo -> readline .)
    ENTERO          reduce using rule 7 (cuerpo -> readline .)
    DECIMAL         reduce using rule 7 (cuerpo -> readline .)
    CADENA_DE_CARACTERES reduce using rule 7 (cuerpo -> readline .)
    DOUBLE          reduce using rule 7 (cuerpo -> readline .)
    MAPOF           reduce using rule 7 (cuerpo -> readline .)
    TRUE            reduce using rule 7 (cuerpo -> readline .)
    FALSE           reduce using rule 7 (cuerpo -> readline .)
    LISTOF          reduce using rule 7 (cuerpo -> readline .)
    SETOF           reduce using rule 7 (cuerpo -> readline .)
    $end            reduce using rule 7 (cuerpo -> readline .)
    DLLAVE          reduce using rule 7 (cuerpo -> readline .)
    RETURN          reduce using rule 7 (cuerpo -> readline .)


state 8

    (8) cuerpo -> firstAndCap .

    ID              reduce using rule 8 (cuerpo -> firstAndCap .)
    PRINT           reduce using rule 8 (cuerpo -> firstAndCap .)
    PRINTLN         reduce using rule 8 (cuerpo -> firstAndCap .)
    READLINE        reduce using rule 8 (cuerpo -> firstAndCap .)
    NEGATION        reduce using rule 8 (cuerpo -> firstAndCap .)
    FUN             reduce using rule 8 (cuerpo -> firstAndCap .)
    IF              reduce using rule 8 (cuerpo -> firstAndCap .)
    FOR             reduce using rule 8 (cuerpo -> firstAndCap .)
    VAR             reduce using rule 8 (cuerpo -> firstAndCap .)
    VAL             reduce using rule 8 (cuerpo -> firstAndCap .)
    ENTERO          reduce using rule 8 (cuerpo -> firstAndCap .)
    DECIMAL         reduce using rule 8 (cuerpo -> firstAndCap .)
    CADENA_DE_CARACTERES reduce using rule 8 (cuerpo -> firstAndCap .)
    DOUBLE          reduce using rule 8 (cuerpo -> firstAndCap .)
    MAPOF           reduce using rule 8 (cuerpo -> firstAndCap .)
    TRUE            reduce using rule 8 (cuerpo -> firstAndCap .)
    FALSE           reduce using rule 8 (cuerpo -> firstAndCap .)
    LISTOF          reduce using rule 8 (cuerpo -> firstAndCap .)
    SETOF           reduce using rule 8 (cuerpo -> firstAndCap .)
    $end            reduce using rule 8 (cuerpo -> firstAndCap .)
    DLLAVE          reduce using rule 8 (cuerpo -> firstAndCap .)
    RETURN          reduce using rule 8 (cuerpo -> firstAndCap .)


state 9

    (9) cuerpo -> list .

    ID              reduce using rule 9 (cuerpo -> list .)
    PRINT           reduce using rule 9 (cuerpo -> list .)
    PRINTLN         reduce using rule 9 (cuerpo -> list .)
    READLINE        reduce using rule 9 (cuerpo -> list .)
    NEGATION        reduce using rule 9 (cuerpo -> list .)
    FUN             reduce using rule 9 (cuerpo -> list .)
    IF              reduce using rule 9 (cuerpo -> list .)
    FOR             reduce using rule 9 (cuerpo -> list .)
    VAR             reduce using rule 9 (cuerpo -> list .)
    VAL             reduce using rule 9 (cuerpo -> list .)
    ENTERO          reduce using rule 9 (cuerpo -> list .)
    DECIMAL         reduce using rule 9 (cuerpo -> list .)
    CADENA_DE_CARACTERES reduce using rule 9 (cuerpo -> list .)
    DOUBLE          reduce using rule 9 (cuerpo -> list .)
    MAPOF           reduce using rule 9 (cuerpo -> list .)
    TRUE            reduce using rule 9 (cuerpo -> list .)
    FALSE           reduce using rule 9 (cuerpo -> list .)
    LISTOF          reduce using rule 9 (cuerpo -> list .)
    SETOF           reduce using rule 9 (cuerpo -> list .)
    $end            reduce using rule 9 (cuerpo -> list .)
    DLLAVE          reduce using rule 9 (cuerpo -> list .)
    RETURN          reduce using rule 9 (cuerpo -> list .)


state 10

    (10) cuerpo -> conjuntos .

    ID              reduce using rule 10 (cuerpo -> conjuntos .)
    PRINT           reduce using rule 10 (cuerpo -> conjuntos .)
    PRINTLN         reduce using rule 10 (cuerpo -> conjuntos .)
    READLINE        reduce using rule 10 (cuerpo -> conjuntos .)
    NEGATION        reduce using rule 10 (cuerpo -> conjuntos .)
    FUN             reduce using rule 10 (cuerpo -> conjuntos .)
    IF              reduce using rule 10 (cuerpo -> conjuntos .)
    FOR             reduce using rule 10 (cuerpo -> conjuntos .)
    VAR             reduce using rule 10 (cuerpo -> conjuntos .)
    VAL             reduce using rule 10 (cuerpo -> conjuntos .)
    ENTERO          reduce using rule 10 (cuerpo -> conjuntos .)
    DECIMAL         reduce using rule 10 (cuerpo -> conjuntos .)
    CADENA_DE_CARACTERES reduce using rule 10 (cuerpo -> conjuntos .)
    DOUBLE          reduce using rule 10 (cuerpo -> conjuntos .)
    MAPOF           reduce using rule 10 (cuerpo -> conjuntos .)
    TRUE            reduce using rule 10 (cuerpo -> conjuntos .)
    FALSE           reduce using rule 10 (cuerpo -> conjuntos .)
    LISTOF          reduce using rule 10 (cuerpo -> conjuntos .)
    SETOF           reduce using rule 10 (cuerpo -> conjuntos .)
    $end            reduce using rule 10 (cuerpo -> conjuntos .)
    DLLAVE          reduce using rule 10 (cuerpo -> conjuntos .)
    RETURN          reduce using rule 10 (cuerpo -> conjuntos .)


state 11

    (11) cuerpo -> tupla .

    ID              reduce using rule 11 (cuerpo -> tupla .)
    PRINT           reduce using rule 11 (cuerpo -> tupla .)
    PRINTLN         reduce using rule 11 (cuerpo -> tupla .)
    READLINE        reduce using rule 11 (cuerpo -> tupla .)
    NEGATION        reduce using rule 11 (cuerpo -> tupla .)
    FUN             reduce using rule 11 (cuerpo -> tupla .)
    IF              reduce using rule 11 (cuerpo -> tupla .)
    FOR             reduce using rule 11 (cuerpo -> tupla .)
    VAR             reduce using rule 11 (cuerpo -> tupla .)
    VAL             reduce using rule 11 (cuerpo -> tupla .)
    ENTERO          reduce using rule 11 (cuerpo -> tupla .)
    DECIMAL         reduce using rule 11 (cuerpo -> tupla .)
    CADENA_DE_CARACTERES reduce using rule 11 (cuerpo -> tupla .)
    DOUBLE          reduce using rule 11 (cuerpo -> tupla .)
    MAPOF           reduce using rule 11 (cuerpo -> tupla .)
    TRUE            reduce using rule 11 (cuerpo -> tupla .)
    FALSE           reduce using rule 11 (cuerpo -> tupla .)
    LISTOF          reduce using rule 11 (cuerpo -> tupla .)
    SETOF           reduce using rule 11 (cuerpo -> tupla .)
    $end            reduce using rule 11 (cuerpo -> tupla .)
    DLLAVE          reduce using rule 11 (cuerpo -> tupla .)
    RETURN          reduce using rule 11 (cuerpo -> tupla .)


state 12

    (12) cuerpo -> maps .

    ID              reduce using rule 12 (cuerpo -> maps .)
    PRINT           reduce using rule 12 (cuerpo -> maps .)
    PRINTLN         reduce using rule 12 (cuerpo -> maps .)
    READLINE        reduce using rule 12 (cuerpo -> maps .)
    NEGATION        reduce using rule 12 (cuerpo -> maps .)
    FUN             reduce using rule 12 (cuerpo -> maps .)
    IF              reduce using rule 12 (cuerpo -> maps .)
    FOR             reduce using rule 12 (cuerpo -> maps .)
    VAR             reduce using rule 12 (cuerpo -> maps .)
    VAL             reduce using rule 12 (cuerpo -> maps .)
    ENTERO          reduce using rule 12 (cuerpo -> maps .)
    DECIMAL         reduce using rule 12 (cuerpo -> maps .)
    CADENA_DE_CARACTERES reduce using rule 12 (cuerpo -> maps .)
    DOUBLE          reduce using rule 12 (cuerpo -> maps .)
    MAPOF           reduce using rule 12 (cuerpo -> maps .)
    TRUE            reduce using rule 12 (cuerpo -> maps .)
    FALSE           reduce using rule 12 (cuerpo -> maps .)
    LISTOF          reduce using rule 12 (cuerpo -> maps .)
    SETOF           reduce using rule 12 (cuerpo -> maps .)
    $end            reduce using rule 12 (cuerpo -> maps .)
    DLLAVE          reduce using rule 12 (cuerpo -> maps .)
    RETURN          reduce using rule 12 (cuerpo -> maps .)


state 13

    (13) cuerpo -> funColecciones .

    ID              reduce using rule 13 (cuerpo -> funColecciones .)
    PRINT           reduce using rule 13 (cuerpo -> funColecciones .)
    PRINTLN         reduce using rule 13 (cuerpo -> funColecciones .)
    READLINE        reduce using rule 13 (cuerpo -> funColecciones .)
    NEGATION        reduce using rule 13 (cuerpo -> funColecciones .)
    FUN             reduce using rule 13 (cuerpo -> funColecciones .)
    IF              reduce using rule 13 (cuerpo -> funColecciones .)
    FOR             reduce using rule 13 (cuerpo -> funColecciones .)
    VAR             reduce using rule 13 (cuerpo -> funColecciones .)
    VAL             reduce using rule 13 (cuerpo -> funColecciones .)
    ENTERO          reduce using rule 13 (cuerpo -> funColecciones .)
    DECIMAL         reduce using rule 13 (cuerpo -> funColecciones .)
    CADENA_DE_CARACTERES reduce using rule 13 (cuerpo -> funColecciones .)
    DOUBLE          reduce using rule 13 (cuerpo -> funColecciones .)
    MAPOF           reduce using rule 13 (cuerpo -> funColecciones .)
    TRUE            reduce using rule 13 (cuerpo -> funColecciones .)
    FALSE           reduce using rule 13 (cuerpo -> funColecciones .)
    LISTOF          reduce using rule 13 (cuerpo -> funColecciones .)
    SETOF           reduce using rule 13 (cuerpo -> funColecciones .)
    $end            reduce using rule 13 (cuerpo -> funColecciones .)
    DLLAVE          reduce using rule 13 (cuerpo -> funColecciones .)
    RETURN          reduce using rule 13 (cuerpo -> funColecciones .)


state 14

    (14) cuerpo -> expLogicas .

    ID              reduce using rule 14 (cuerpo -> expLogicas .)
    PRINT           reduce using rule 14 (cuerpo -> expLogicas .)
    PRINTLN         reduce using rule 14 (cuerpo -> expLogicas .)
    READLINE        reduce using rule 14 (cuerpo -> expLogicas .)
    NEGATION        reduce using rule 14 (cuerpo -> expLogicas .)
    FUN             reduce using rule 14 (cuerpo -> expLogicas .)
    IF              reduce using rule 14 (cuerpo -> expLogicas .)
    FOR             reduce using rule 14 (cuerpo -> expLogicas .)
    VAR             reduce using rule 14 (cuerpo -> expLogicas .)
    VAL             reduce using rule 14 (cuerpo -> expLogicas .)
    ENTERO          reduce using rule 14 (cuerpo -> expLogicas .)
    DECIMAL         reduce using rule 14 (cuerpo -> expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 14 (cuerpo -> expLogicas .)
    DOUBLE          reduce using rule 14 (cuerpo -> expLogicas .)
    MAPOF           reduce using rule 14 (cuerpo -> expLogicas .)
    TRUE            reduce using rule 14 (cuerpo -> expLogicas .)
    FALSE           reduce using rule 14 (cuerpo -> expLogicas .)
    LISTOF          reduce using rule 14 (cuerpo -> expLogicas .)
    SETOF           reduce using rule 14 (cuerpo -> expLogicas .)
    $end            reduce using rule 14 (cuerpo -> expLogicas .)
    DLLAVE          reduce using rule 14 (cuerpo -> expLogicas .)
    RETURN          reduce using rule 14 (cuerpo -> expLogicas .)


state 15

    (15) cuerpo -> fun .

    ID              reduce using rule 15 (cuerpo -> fun .)
    PRINT           reduce using rule 15 (cuerpo -> fun .)
    PRINTLN         reduce using rule 15 (cuerpo -> fun .)
    READLINE        reduce using rule 15 (cuerpo -> fun .)
    NEGATION        reduce using rule 15 (cuerpo -> fun .)
    FUN             reduce using rule 15 (cuerpo -> fun .)
    IF              reduce using rule 15 (cuerpo -> fun .)
    FOR             reduce using rule 15 (cuerpo -> fun .)
    VAR             reduce using rule 15 (cuerpo -> fun .)
    VAL             reduce using rule 15 (cuerpo -> fun .)
    ENTERO          reduce using rule 15 (cuerpo -> fun .)
    DECIMAL         reduce using rule 15 (cuerpo -> fun .)
    CADENA_DE_CARACTERES reduce using rule 15 (cuerpo -> fun .)
    DOUBLE          reduce using rule 15 (cuerpo -> fun .)
    MAPOF           reduce using rule 15 (cuerpo -> fun .)
    TRUE            reduce using rule 15 (cuerpo -> fun .)
    FALSE           reduce using rule 15 (cuerpo -> fun .)
    LISTOF          reduce using rule 15 (cuerpo -> fun .)
    SETOF           reduce using rule 15 (cuerpo -> fun .)
    $end            reduce using rule 15 (cuerpo -> fun .)
    DLLAVE          reduce using rule 15 (cuerpo -> fun .)
    RETURN          reduce using rule 15 (cuerpo -> fun .)


state 16

    (16) cuerpo -> if .

    ID              reduce using rule 16 (cuerpo -> if .)
    PRINT           reduce using rule 16 (cuerpo -> if .)
    PRINTLN         reduce using rule 16 (cuerpo -> if .)
    READLINE        reduce using rule 16 (cuerpo -> if .)
    NEGATION        reduce using rule 16 (cuerpo -> if .)
    FUN             reduce using rule 16 (cuerpo -> if .)
    IF              reduce using rule 16 (cuerpo -> if .)
    FOR             reduce using rule 16 (cuerpo -> if .)
    VAR             reduce using rule 16 (cuerpo -> if .)
    VAL             reduce using rule 16 (cuerpo -> if .)
    ENTERO          reduce using rule 16 (cuerpo -> if .)
    DECIMAL         reduce using rule 16 (cuerpo -> if .)
    CADENA_DE_CARACTERES reduce using rule 16 (cuerpo -> if .)
    DOUBLE          reduce using rule 16 (cuerpo -> if .)
    MAPOF           reduce using rule 16 (cuerpo -> if .)
    TRUE            reduce using rule 16 (cuerpo -> if .)
    FALSE           reduce using rule 16 (cuerpo -> if .)
    LISTOF          reduce using rule 16 (cuerpo -> if .)
    SETOF           reduce using rule 16 (cuerpo -> if .)
    $end            reduce using rule 16 (cuerpo -> if .)
    DLLAVE          reduce using rule 16 (cuerpo -> if .)
    RETURN          reduce using rule 16 (cuerpo -> if .)


state 17

    (17) cuerpo -> for .

    ID              reduce using rule 17 (cuerpo -> for .)
    PRINT           reduce using rule 17 (cuerpo -> for .)
    PRINTLN         reduce using rule 17 (cuerpo -> for .)
    READLINE        reduce using rule 17 (cuerpo -> for .)
    NEGATION        reduce using rule 17 (cuerpo -> for .)
    FUN             reduce using rule 17 (cuerpo -> for .)
    IF              reduce using rule 17 (cuerpo -> for .)
    FOR             reduce using rule 17 (cuerpo -> for .)
    VAR             reduce using rule 17 (cuerpo -> for .)
    VAL             reduce using rule 17 (cuerpo -> for .)
    ENTERO          reduce using rule 17 (cuerpo -> for .)
    DECIMAL         reduce using rule 17 (cuerpo -> for .)
    CADENA_DE_CARACTERES reduce using rule 17 (cuerpo -> for .)
    DOUBLE          reduce using rule 17 (cuerpo -> for .)
    MAPOF           reduce using rule 17 (cuerpo -> for .)
    TRUE            reduce using rule 17 (cuerpo -> for .)
    FALSE           reduce using rule 17 (cuerpo -> for .)
    LISTOF          reduce using rule 17 (cuerpo -> for .)
    SETOF           reduce using rule 17 (cuerpo -> for .)
    $end            reduce using rule 17 (cuerpo -> for .)
    DLLAVE          reduce using rule 17 (cuerpo -> for .)
    RETURN          reduce using rule 17 (cuerpo -> for .)


state 18

    (46) iniVariable -> variable . ID tipoDeDato
    (47) iniVariable -> variable . ID EQUALS valor
    (48) iniVariable -> variable . ID EQUALS valorBoolean
    (49) iniVariable -> variable . ID EQUALS expLogicas
    (50) iniVariable -> variable . ID EQUALS expresionRelacional
    (101) readline -> variable . ID EQUALS READLINE IPAR DPAR
    (87) list -> variable . ID EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> variable . ID EQUALS SETOF IPAR listElementos DPAR
    (80) tupla -> variable . IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) maps -> variable . ID EQUALS MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 50
    IPAR            shift and go to state 51


state 19

    (114) expresion -> ID .
    (116) expresion -> ID . operadorMat expresion
    (102) firstAndCap -> ID . PUNTO FIRST IPAR DPAR
    (103) firstAndCap -> ID . PUNTO CAPITALIZE IPAR DPAR
    (120) elementoRelacional -> ID .
    (65) indexCol -> ID . ICOR ENTERO DCOR
    (66) indexCol -> ID . ICOR ID DCOR
    (67) slice -> ID . PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> ID . PUNTO SIZE
    (70) isEmpty -> ID . PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> ID . PUNTO KEYS
    (75) funMap -> ID . PUNTO VALUES
    (72) getMap -> ID . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> ID .
    (122) operadorMat -> . PLUS
    (123) operadorMat -> . MINUS
    (124) operadorMat -> . TIMES
    (125) operadorMat -> . DIVIDE

    ID              reduce using rule 114 (expresion -> ID .)
    PRINT           reduce using rule 114 (expresion -> ID .)
    PRINTLN         reduce using rule 114 (expresion -> ID .)
    READLINE        reduce using rule 114 (expresion -> ID .)
    NEGATION        reduce using rule 114 (expresion -> ID .)
    FUN             reduce using rule 114 (expresion -> ID .)
    IF              reduce using rule 114 (expresion -> ID .)
    FOR             reduce using rule 114 (expresion -> ID .)
    VAR             reduce using rule 114 (expresion -> ID .)
    VAL             reduce using rule 114 (expresion -> ID .)
    ENTERO          reduce using rule 114 (expresion -> ID .)
    DECIMAL         reduce using rule 114 (expresion -> ID .)
    CADENA_DE_CARACTERES reduce using rule 114 (expresion -> ID .)
    DOUBLE          reduce using rule 114 (expresion -> ID .)
    MAPOF           reduce using rule 114 (expresion -> ID .)
    TRUE            reduce using rule 114 (expresion -> ID .)
    FALSE           reduce using rule 114 (expresion -> ID .)
    LISTOF          reduce using rule 114 (expresion -> ID .)
    SETOF           reduce using rule 114 (expresion -> ID .)
    $end            reduce using rule 114 (expresion -> ID .)
    DLLAVE          reduce using rule 114 (expresion -> ID .)
    RETURN          reduce using rule 114 (expresion -> ID .)
    PUNTO           shift and go to state 53
    EQUAL           reduce using rule 120 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 120 (elementoRelacional -> ID .)
    LARGE           reduce using rule 120 (elementoRelacional -> ID .)
    SMALL           reduce using rule 120 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 120 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 120 (elementoRelacional -> ID .)
    ICOR            shift and go to state 54
    AND             reduce using rule 131 (boolID -> ID .)
    OR              reduce using rule 131 (boolID -> ID .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadorMat                    shift and go to state 52

state 20

    (113) expresion -> valor .
    (115) expresion -> valor . operadorMat expresion
    (122) operadorMat -> . PLUS
    (123) operadorMat -> . MINUS
    (124) operadorMat -> . TIMES
    (125) operadorMat -> . DIVIDE

    ID              reduce using rule 113 (expresion -> valor .)
    PRINT           reduce using rule 113 (expresion -> valor .)
    PRINTLN         reduce using rule 113 (expresion -> valor .)
    READLINE        reduce using rule 113 (expresion -> valor .)
    NEGATION        reduce using rule 113 (expresion -> valor .)
    FUN             reduce using rule 113 (expresion -> valor .)
    IF              reduce using rule 113 (expresion -> valor .)
    FOR             reduce using rule 113 (expresion -> valor .)
    VAR             reduce using rule 113 (expresion -> valor .)
    VAL             reduce using rule 113 (expresion -> valor .)
    ENTERO          reduce using rule 113 (expresion -> valor .)
    DECIMAL         reduce using rule 113 (expresion -> valor .)
    CADENA_DE_CARACTERES reduce using rule 113 (expresion -> valor .)
    DOUBLE          reduce using rule 113 (expresion -> valor .)
    MAPOF           reduce using rule 113 (expresion -> valor .)
    TRUE            reduce using rule 113 (expresion -> valor .)
    FALSE           reduce using rule 113 (expresion -> valor .)
    LISTOF          reduce using rule 113 (expresion -> valor .)
    SETOF           reduce using rule 113 (expresion -> valor .)
    $end            reduce using rule 113 (expresion -> valor .)
    DLLAVE          reduce using rule 113 (expresion -> valor .)
    RETURN          reduce using rule 113 (expresion -> valor .)
    DPAR            reduce using rule 113 (expresion -> valor .)
    ELSE            reduce using rule 113 (expresion -> valor .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadorMat                    shift and go to state 59

state 21

    (121) elementoRelacional -> valorBoolean .
    (132) boolID -> valorBoolean .

    EQUAL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    AND             reduce using rule 132 (boolID -> valorBoolean .)
    OR              reduce using rule 132 (boolID -> valorBoolean .)


state 22

    (117) expresionRelacional -> elementoRelacional . operadorRelacional elementoRelacional
    (137) operadorRelacional -> . EQUAL
    (138) operadorRelacional -> . NOTEQ
    (139) operadorRelacional -> . LARGE
    (140) operadorRelacional -> . SMALL
    (141) operadorRelacional -> . LRGEQ
    (142) operadorRelacional -> . SMLEQ

    EQUAL           shift and go to state 61
    NOTEQ           shift and go to state 62
    LARGE           shift and go to state 63
    SMALL           shift and go to state 64
    LRGEQ           shift and go to state 65
    SMLEQ           shift and go to state 66

    operadorRelacional             shift and go to state 60

state 23

    (51) imprimir -> PRINT . IPAR elementosPrint DPAR

    IPAR            shift and go to state 67


state 24

    (52) imprimir -> PRINTLN . IPAR elementosPrint DPAR

    IPAR            shift and go to state 68


state 25

    (100) readline -> READLINE . IPAR DPAR

    IPAR            shift and go to state 69


state 26

    (110) coleccion -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 70


state 27

    (111) coleccion -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 71


state 28

    (76) funMap -> MAPOF . IPAR mapsElemento DPAR PUNTO VALUES
    (73) getMap -> MAPOF . IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (112) coleccion -> MAPOF . IPAR mapsElemento DPAR

    IPAR            shift and go to state 72


state 29

    (59) funColecciones -> indexCol .

    ID              reduce using rule 59 (funColecciones -> indexCol .)
    PRINT           reduce using rule 59 (funColecciones -> indexCol .)
    PRINTLN         reduce using rule 59 (funColecciones -> indexCol .)
    READLINE        reduce using rule 59 (funColecciones -> indexCol .)
    NEGATION        reduce using rule 59 (funColecciones -> indexCol .)
    FUN             reduce using rule 59 (funColecciones -> indexCol .)
    IF              reduce using rule 59 (funColecciones -> indexCol .)
    FOR             reduce using rule 59 (funColecciones -> indexCol .)
    VAR             reduce using rule 59 (funColecciones -> indexCol .)
    VAL             reduce using rule 59 (funColecciones -> indexCol .)
    ENTERO          reduce using rule 59 (funColecciones -> indexCol .)
    DECIMAL         reduce using rule 59 (funColecciones -> indexCol .)
    CADENA_DE_CARACTERES reduce using rule 59 (funColecciones -> indexCol .)
    DOUBLE          reduce using rule 59 (funColecciones -> indexCol .)
    MAPOF           reduce using rule 59 (funColecciones -> indexCol .)
    TRUE            reduce using rule 59 (funColecciones -> indexCol .)
    FALSE           reduce using rule 59 (funColecciones -> indexCol .)
    LISTOF          reduce using rule 59 (funColecciones -> indexCol .)
    SETOF           reduce using rule 59 (funColecciones -> indexCol .)
    $end            reduce using rule 59 (funColecciones -> indexCol .)
    DLLAVE          reduce using rule 59 (funColecciones -> indexCol .)
    RETURN          reduce using rule 59 (funColecciones -> indexCol .)
    DPAR            reduce using rule 59 (funColecciones -> indexCol .)


state 30

    (60) funColecciones -> slice .

    ID              reduce using rule 60 (funColecciones -> slice .)
    PRINT           reduce using rule 60 (funColecciones -> slice .)
    PRINTLN         reduce using rule 60 (funColecciones -> slice .)
    READLINE        reduce using rule 60 (funColecciones -> slice .)
    NEGATION        reduce using rule 60 (funColecciones -> slice .)
    FUN             reduce using rule 60 (funColecciones -> slice .)
    IF              reduce using rule 60 (funColecciones -> slice .)
    FOR             reduce using rule 60 (funColecciones -> slice .)
    VAR             reduce using rule 60 (funColecciones -> slice .)
    VAL             reduce using rule 60 (funColecciones -> slice .)
    ENTERO          reduce using rule 60 (funColecciones -> slice .)
    DECIMAL         reduce using rule 60 (funColecciones -> slice .)
    CADENA_DE_CARACTERES reduce using rule 60 (funColecciones -> slice .)
    DOUBLE          reduce using rule 60 (funColecciones -> slice .)
    MAPOF           reduce using rule 60 (funColecciones -> slice .)
    TRUE            reduce using rule 60 (funColecciones -> slice .)
    FALSE           reduce using rule 60 (funColecciones -> slice .)
    LISTOF          reduce using rule 60 (funColecciones -> slice .)
    SETOF           reduce using rule 60 (funColecciones -> slice .)
    $end            reduce using rule 60 (funColecciones -> slice .)
    DLLAVE          reduce using rule 60 (funColecciones -> slice .)
    RETURN          reduce using rule 60 (funColecciones -> slice .)
    DPAR            reduce using rule 60 (funColecciones -> slice .)


state 31

    (61) funColecciones -> size .

    ID              reduce using rule 61 (funColecciones -> size .)
    PRINT           reduce using rule 61 (funColecciones -> size .)
    PRINTLN         reduce using rule 61 (funColecciones -> size .)
    READLINE        reduce using rule 61 (funColecciones -> size .)
    NEGATION        reduce using rule 61 (funColecciones -> size .)
    FUN             reduce using rule 61 (funColecciones -> size .)
    IF              reduce using rule 61 (funColecciones -> size .)
    FOR             reduce using rule 61 (funColecciones -> size .)
    VAR             reduce using rule 61 (funColecciones -> size .)
    VAL             reduce using rule 61 (funColecciones -> size .)
    ENTERO          reduce using rule 61 (funColecciones -> size .)
    DECIMAL         reduce using rule 61 (funColecciones -> size .)
    CADENA_DE_CARACTERES reduce using rule 61 (funColecciones -> size .)
    DOUBLE          reduce using rule 61 (funColecciones -> size .)
    MAPOF           reduce using rule 61 (funColecciones -> size .)
    TRUE            reduce using rule 61 (funColecciones -> size .)
    FALSE           reduce using rule 61 (funColecciones -> size .)
    LISTOF          reduce using rule 61 (funColecciones -> size .)
    SETOF           reduce using rule 61 (funColecciones -> size .)
    $end            reduce using rule 61 (funColecciones -> size .)
    DLLAVE          reduce using rule 61 (funColecciones -> size .)
    RETURN          reduce using rule 61 (funColecciones -> size .)
    DPAR            reduce using rule 61 (funColecciones -> size .)


state 32

    (62) funColecciones -> isEmpty .

    ID              reduce using rule 62 (funColecciones -> isEmpty .)
    PRINT           reduce using rule 62 (funColecciones -> isEmpty .)
    PRINTLN         reduce using rule 62 (funColecciones -> isEmpty .)
    READLINE        reduce using rule 62 (funColecciones -> isEmpty .)
    NEGATION        reduce using rule 62 (funColecciones -> isEmpty .)
    FUN             reduce using rule 62 (funColecciones -> isEmpty .)
    IF              reduce using rule 62 (funColecciones -> isEmpty .)
    FOR             reduce using rule 62 (funColecciones -> isEmpty .)
    VAR             reduce using rule 62 (funColecciones -> isEmpty .)
    VAL             reduce using rule 62 (funColecciones -> isEmpty .)
    ENTERO          reduce using rule 62 (funColecciones -> isEmpty .)
    DECIMAL         reduce using rule 62 (funColecciones -> isEmpty .)
    CADENA_DE_CARACTERES reduce using rule 62 (funColecciones -> isEmpty .)
    DOUBLE          reduce using rule 62 (funColecciones -> isEmpty .)
    MAPOF           reduce using rule 62 (funColecciones -> isEmpty .)
    TRUE            reduce using rule 62 (funColecciones -> isEmpty .)
    FALSE           reduce using rule 62 (funColecciones -> isEmpty .)
    LISTOF          reduce using rule 62 (funColecciones -> isEmpty .)
    SETOF           reduce using rule 62 (funColecciones -> isEmpty .)
    $end            reduce using rule 62 (funColecciones -> isEmpty .)
    DLLAVE          reduce using rule 62 (funColecciones -> isEmpty .)
    RETURN          reduce using rule 62 (funColecciones -> isEmpty .)
    DPAR            reduce using rule 62 (funColecciones -> isEmpty .)


state 33

    (63) funColecciones -> funMap .

    ID              reduce using rule 63 (funColecciones -> funMap .)
    PRINT           reduce using rule 63 (funColecciones -> funMap .)
    PRINTLN         reduce using rule 63 (funColecciones -> funMap .)
    READLINE        reduce using rule 63 (funColecciones -> funMap .)
    NEGATION        reduce using rule 63 (funColecciones -> funMap .)
    FUN             reduce using rule 63 (funColecciones -> funMap .)
    IF              reduce using rule 63 (funColecciones -> funMap .)
    FOR             reduce using rule 63 (funColecciones -> funMap .)
    VAR             reduce using rule 63 (funColecciones -> funMap .)
    VAL             reduce using rule 63 (funColecciones -> funMap .)
    ENTERO          reduce using rule 63 (funColecciones -> funMap .)
    DECIMAL         reduce using rule 63 (funColecciones -> funMap .)
    CADENA_DE_CARACTERES reduce using rule 63 (funColecciones -> funMap .)
    DOUBLE          reduce using rule 63 (funColecciones -> funMap .)
    MAPOF           reduce using rule 63 (funColecciones -> funMap .)
    TRUE            reduce using rule 63 (funColecciones -> funMap .)
    FALSE           reduce using rule 63 (funColecciones -> funMap .)
    LISTOF          reduce using rule 63 (funColecciones -> funMap .)
    SETOF           reduce using rule 63 (funColecciones -> funMap .)
    $end            reduce using rule 63 (funColecciones -> funMap .)
    DLLAVE          reduce using rule 63 (funColecciones -> funMap .)
    RETURN          reduce using rule 63 (funColecciones -> funMap .)
    DPAR            reduce using rule 63 (funColecciones -> funMap .)


state 34

    (64) funColecciones -> getMap .

    ID              reduce using rule 64 (funColecciones -> getMap .)
    PRINT           reduce using rule 64 (funColecciones -> getMap .)
    PRINTLN         reduce using rule 64 (funColecciones -> getMap .)
    READLINE        reduce using rule 64 (funColecciones -> getMap .)
    NEGATION        reduce using rule 64 (funColecciones -> getMap .)
    FUN             reduce using rule 64 (funColecciones -> getMap .)
    IF              reduce using rule 64 (funColecciones -> getMap .)
    FOR             reduce using rule 64 (funColecciones -> getMap .)
    VAR             reduce using rule 64 (funColecciones -> getMap .)
    VAL             reduce using rule 64 (funColecciones -> getMap .)
    ENTERO          reduce using rule 64 (funColecciones -> getMap .)
    DECIMAL         reduce using rule 64 (funColecciones -> getMap .)
    CADENA_DE_CARACTERES reduce using rule 64 (funColecciones -> getMap .)
    DOUBLE          reduce using rule 64 (funColecciones -> getMap .)
    MAPOF           reduce using rule 64 (funColecciones -> getMap .)
    TRUE            reduce using rule 64 (funColecciones -> getMap .)
    FALSE           reduce using rule 64 (funColecciones -> getMap .)
    LISTOF          reduce using rule 64 (funColecciones -> getMap .)
    SETOF           reduce using rule 64 (funColecciones -> getMap .)
    $end            reduce using rule 64 (funColecciones -> getMap .)
    DLLAVE          reduce using rule 64 (funColecciones -> getMap .)
    RETURN          reduce using rule 64 (funColecciones -> getMap .)
    DPAR            reduce using rule 64 (funColecciones -> getMap .)


state 35

    (129) expLogicas -> boolID . opLogico boolID
    (133) opLogico -> . AND
    (134) opLogico -> . OR

    AND             shift and go to state 74
    OR              shift and go to state 75

    opLogico                       shift and go to state 73

state 36

    (130) expLogicas -> NEGATION . boolID
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE

    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    boolID                         shift and go to state 76
    valorBoolean                   shift and go to state 78

state 37

    (18) fun -> FUN . ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> FUN . ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> FUN . ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> FUN . ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> FUN . ID IPAR entrada_fun DPAR EQUALS return

    ID              shift and go to state 79


state 38

    (27) if -> IF . IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> IF . IPAR entradaIf DPAR return
    (29) if -> IF . IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> IF . IPAR entradaIf DPAR return else

    IPAR            shift and go to state 80


state 39

    (23) for -> FOR . condicionFor ILLAVE algoritmo DLLAVE
    (24) condicionFor -> . IPAR ID IN ID DPAR
    (25) condicionFor -> . IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR
    (26) condicionFor -> . IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    IPAR            shift and go to state 82

    condicionFor                   shift and go to state 81

state 40

    (98) variable -> VAR .

    ID              reduce using rule 98 (variable -> VAR .)
    IPAR            reduce using rule 98 (variable -> VAR .)


state 41

    (99) variable -> VAL .

    ID              reduce using rule 99 (variable -> VAL .)
    IPAR            reduce using rule 99 (variable -> VAL .)


state 42

    (126) valor -> ENTERO .
    (118) elementoRelacional -> ENTERO .

    PLUS            reduce using rule 126 (valor -> ENTERO .)
    MINUS           reduce using rule 126 (valor -> ENTERO .)
    TIMES           reduce using rule 126 (valor -> ENTERO .)
    DIVIDE          reduce using rule 126 (valor -> ENTERO .)
    ID              reduce using rule 126 (valor -> ENTERO .)
    PRINT           reduce using rule 126 (valor -> ENTERO .)
    PRINTLN         reduce using rule 126 (valor -> ENTERO .)
    READLINE        reduce using rule 126 (valor -> ENTERO .)
    NEGATION        reduce using rule 126 (valor -> ENTERO .)
    FUN             reduce using rule 126 (valor -> ENTERO .)
    IF              reduce using rule 126 (valor -> ENTERO .)
    FOR             reduce using rule 126 (valor -> ENTERO .)
    VAR             reduce using rule 126 (valor -> ENTERO .)
    VAL             reduce using rule 126 (valor -> ENTERO .)
    ENTERO          reduce using rule 126 (valor -> ENTERO .)
    DECIMAL         reduce using rule 126 (valor -> ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 126 (valor -> ENTERO .)
    DOUBLE          reduce using rule 126 (valor -> ENTERO .)
    MAPOF           reduce using rule 126 (valor -> ENTERO .)
    TRUE            reduce using rule 126 (valor -> ENTERO .)
    FALSE           reduce using rule 126 (valor -> ENTERO .)
    LISTOF          reduce using rule 126 (valor -> ENTERO .)
    SETOF           reduce using rule 126 (valor -> ENTERO .)
    $end            reduce using rule 126 (valor -> ENTERO .)
    DLLAVE          reduce using rule 126 (valor -> ENTERO .)
    RETURN          reduce using rule 126 (valor -> ENTERO .)
    DPAR            reduce using rule 126 (valor -> ENTERO .)
    COMA            reduce using rule 126 (valor -> ENTERO .)
    ELSE            reduce using rule 126 (valor -> ENTERO .)
    EQUAL           reduce using rule 118 (elementoRelacional -> ENTERO .)
    NOTEQ           reduce using rule 118 (elementoRelacional -> ENTERO .)
    LARGE           reduce using rule 118 (elementoRelacional -> ENTERO .)
    SMALL           reduce using rule 118 (elementoRelacional -> ENTERO .)
    LRGEQ           reduce using rule 118 (elementoRelacional -> ENTERO .)
    SMLEQ           reduce using rule 118 (elementoRelacional -> ENTERO .)


state 43

    (127) valor -> DECIMAL .

    PLUS            reduce using rule 127 (valor -> DECIMAL .)
    MINUS           reduce using rule 127 (valor -> DECIMAL .)
    TIMES           reduce using rule 127 (valor -> DECIMAL .)
    DIVIDE          reduce using rule 127 (valor -> DECIMAL .)
    ID              reduce using rule 127 (valor -> DECIMAL .)
    PRINT           reduce using rule 127 (valor -> DECIMAL .)
    PRINTLN         reduce using rule 127 (valor -> DECIMAL .)
    READLINE        reduce using rule 127 (valor -> DECIMAL .)
    NEGATION        reduce using rule 127 (valor -> DECIMAL .)
    FUN             reduce using rule 127 (valor -> DECIMAL .)
    IF              reduce using rule 127 (valor -> DECIMAL .)
    FOR             reduce using rule 127 (valor -> DECIMAL .)
    VAR             reduce using rule 127 (valor -> DECIMAL .)
    VAL             reduce using rule 127 (valor -> DECIMAL .)
    ENTERO          reduce using rule 127 (valor -> DECIMAL .)
    DECIMAL         reduce using rule 127 (valor -> DECIMAL .)
    CADENA_DE_CARACTERES reduce using rule 127 (valor -> DECIMAL .)
    DOUBLE          reduce using rule 127 (valor -> DECIMAL .)
    MAPOF           reduce using rule 127 (valor -> DECIMAL .)
    TRUE            reduce using rule 127 (valor -> DECIMAL .)
    FALSE           reduce using rule 127 (valor -> DECIMAL .)
    LISTOF          reduce using rule 127 (valor -> DECIMAL .)
    SETOF           reduce using rule 127 (valor -> DECIMAL .)
    $end            reduce using rule 127 (valor -> DECIMAL .)
    DLLAVE          reduce using rule 127 (valor -> DECIMAL .)
    RETURN          reduce using rule 127 (valor -> DECIMAL .)
    DPAR            reduce using rule 127 (valor -> DECIMAL .)
    ELSE            reduce using rule 127 (valor -> DECIMAL .)
    COMA            reduce using rule 127 (valor -> DECIMAL .)


state 44

    (128) valor -> CADENA_DE_CARACTERES .

    PLUS            reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    MINUS           reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    TIMES           reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    DIVIDE          reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    ID              reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    PRINT           reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    PRINTLN         reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    READLINE        reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    NEGATION        reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    FUN             reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    IF              reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    FOR             reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    VAR             reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    VAL             reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    ENTERO          reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    DECIMAL         reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    CADENA_DE_CARACTERES reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    DOUBLE          reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    MAPOF           reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    TRUE            reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    FALSE           reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    LISTOF          reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    SETOF           reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    $end            reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    DLLAVE          reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    RETURN          reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    DPAR            reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    ELSE            reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)
    COMA            reduce using rule 128 (valor -> CADENA_DE_CARACTERES .)


state 45

    (119) elementoRelacional -> DOUBLE .

    EQUAL           reduce using rule 119 (elementoRelacional -> DOUBLE .)
    NOTEQ           reduce using rule 119 (elementoRelacional -> DOUBLE .)
    LARGE           reduce using rule 119 (elementoRelacional -> DOUBLE .)
    SMALL           reduce using rule 119 (elementoRelacional -> DOUBLE .)
    LRGEQ           reduce using rule 119 (elementoRelacional -> DOUBLE .)
    SMLEQ           reduce using rule 119 (elementoRelacional -> DOUBLE .)
    ID              reduce using rule 119 (elementoRelacional -> DOUBLE .)
    PRINT           reduce using rule 119 (elementoRelacional -> DOUBLE .)
    PRINTLN         reduce using rule 119 (elementoRelacional -> DOUBLE .)
    READLINE        reduce using rule 119 (elementoRelacional -> DOUBLE .)
    NEGATION        reduce using rule 119 (elementoRelacional -> DOUBLE .)
    FUN             reduce using rule 119 (elementoRelacional -> DOUBLE .)
    IF              reduce using rule 119 (elementoRelacional -> DOUBLE .)
    FOR             reduce using rule 119 (elementoRelacional -> DOUBLE .)
    VAR             reduce using rule 119 (elementoRelacional -> DOUBLE .)
    VAL             reduce using rule 119 (elementoRelacional -> DOUBLE .)
    ENTERO          reduce using rule 119 (elementoRelacional -> DOUBLE .)
    DECIMAL         reduce using rule 119 (elementoRelacional -> DOUBLE .)
    CADENA_DE_CARACTERES reduce using rule 119 (elementoRelacional -> DOUBLE .)
    DOUBLE          reduce using rule 119 (elementoRelacional -> DOUBLE .)
    MAPOF           reduce using rule 119 (elementoRelacional -> DOUBLE .)
    TRUE            reduce using rule 119 (elementoRelacional -> DOUBLE .)
    FALSE           reduce using rule 119 (elementoRelacional -> DOUBLE .)
    LISTOF          reduce using rule 119 (elementoRelacional -> DOUBLE .)
    SETOF           reduce using rule 119 (elementoRelacional -> DOUBLE .)
    $end            reduce using rule 119 (elementoRelacional -> DOUBLE .)
    DLLAVE          reduce using rule 119 (elementoRelacional -> DOUBLE .)
    RETURN          reduce using rule 119 (elementoRelacional -> DOUBLE .)
    DPAR            reduce using rule 119 (elementoRelacional -> DOUBLE .)
    ELSE            reduce using rule 119 (elementoRelacional -> DOUBLE .)


state 46

    (69) size -> coleccion . PUNTO SIZE
    (71) isEmpty -> coleccion . PUNTO ISEMPTY IPAR DPAR

    PUNTO           shift and go to state 83


state 47

    (135) valorBoolean -> TRUE .

    EQUAL           reduce using rule 135 (valorBoolean -> TRUE .)
    NOTEQ           reduce using rule 135 (valorBoolean -> TRUE .)
    LARGE           reduce using rule 135 (valorBoolean -> TRUE .)
    SMALL           reduce using rule 135 (valorBoolean -> TRUE .)
    LRGEQ           reduce using rule 135 (valorBoolean -> TRUE .)
    SMLEQ           reduce using rule 135 (valorBoolean -> TRUE .)
    AND             reduce using rule 135 (valorBoolean -> TRUE .)
    OR              reduce using rule 135 (valorBoolean -> TRUE .)
    ID              reduce using rule 135 (valorBoolean -> TRUE .)
    PRINT           reduce using rule 135 (valorBoolean -> TRUE .)
    PRINTLN         reduce using rule 135 (valorBoolean -> TRUE .)
    READLINE        reduce using rule 135 (valorBoolean -> TRUE .)
    NEGATION        reduce using rule 135 (valorBoolean -> TRUE .)
    FUN             reduce using rule 135 (valorBoolean -> TRUE .)
    IF              reduce using rule 135 (valorBoolean -> TRUE .)
    FOR             reduce using rule 135 (valorBoolean -> TRUE .)
    VAR             reduce using rule 135 (valorBoolean -> TRUE .)
    VAL             reduce using rule 135 (valorBoolean -> TRUE .)
    ENTERO          reduce using rule 135 (valorBoolean -> TRUE .)
    DECIMAL         reduce using rule 135 (valorBoolean -> TRUE .)
    CADENA_DE_CARACTERES reduce using rule 135 (valorBoolean -> TRUE .)
    DOUBLE          reduce using rule 135 (valorBoolean -> TRUE .)
    MAPOF           reduce using rule 135 (valorBoolean -> TRUE .)
    TRUE            reduce using rule 135 (valorBoolean -> TRUE .)
    FALSE           reduce using rule 135 (valorBoolean -> TRUE .)
    LISTOF          reduce using rule 135 (valorBoolean -> TRUE .)
    SETOF           reduce using rule 135 (valorBoolean -> TRUE .)
    $end            reduce using rule 135 (valorBoolean -> TRUE .)
    DLLAVE          reduce using rule 135 (valorBoolean -> TRUE .)
    RETURN          reduce using rule 135 (valorBoolean -> TRUE .)
    DPAR            reduce using rule 135 (valorBoolean -> TRUE .)
    ELSE            reduce using rule 135 (valorBoolean -> TRUE .)
    COMA            reduce using rule 135 (valorBoolean -> TRUE .)


state 48

    (136) valorBoolean -> FALSE .

    EQUAL           reduce using rule 136 (valorBoolean -> FALSE .)
    NOTEQ           reduce using rule 136 (valorBoolean -> FALSE .)
    LARGE           reduce using rule 136 (valorBoolean -> FALSE .)
    SMALL           reduce using rule 136 (valorBoolean -> FALSE .)
    LRGEQ           reduce using rule 136 (valorBoolean -> FALSE .)
    SMLEQ           reduce using rule 136 (valorBoolean -> FALSE .)
    AND             reduce using rule 136 (valorBoolean -> FALSE .)
    OR              reduce using rule 136 (valorBoolean -> FALSE .)
    ID              reduce using rule 136 (valorBoolean -> FALSE .)
    PRINT           reduce using rule 136 (valorBoolean -> FALSE .)
    PRINTLN         reduce using rule 136 (valorBoolean -> FALSE .)
    READLINE        reduce using rule 136 (valorBoolean -> FALSE .)
    NEGATION        reduce using rule 136 (valorBoolean -> FALSE .)
    FUN             reduce using rule 136 (valorBoolean -> FALSE .)
    IF              reduce using rule 136 (valorBoolean -> FALSE .)
    FOR             reduce using rule 136 (valorBoolean -> FALSE .)
    VAR             reduce using rule 136 (valorBoolean -> FALSE .)
    VAL             reduce using rule 136 (valorBoolean -> FALSE .)
    ENTERO          reduce using rule 136 (valorBoolean -> FALSE .)
    DECIMAL         reduce using rule 136 (valorBoolean -> FALSE .)
    CADENA_DE_CARACTERES reduce using rule 136 (valorBoolean -> FALSE .)
    DOUBLE          reduce using rule 136 (valorBoolean -> FALSE .)
    MAPOF           reduce using rule 136 (valorBoolean -> FALSE .)
    TRUE            reduce using rule 136 (valorBoolean -> FALSE .)
    FALSE           reduce using rule 136 (valorBoolean -> FALSE .)
    LISTOF          reduce using rule 136 (valorBoolean -> FALSE .)
    SETOF           reduce using rule 136 (valorBoolean -> FALSE .)
    $end            reduce using rule 136 (valorBoolean -> FALSE .)
    DLLAVE          reduce using rule 136 (valorBoolean -> FALSE .)
    RETURN          reduce using rule 136 (valorBoolean -> FALSE .)
    DPAR            reduce using rule 136 (valorBoolean -> FALSE .)
    ELSE            reduce using rule 136 (valorBoolean -> FALSE .)
    COMA            reduce using rule 136 (valorBoolean -> FALSE .)


state 49

    (2) algoritmo -> cuerpo algoritmo .

    $end            reduce using rule 2 (algoritmo -> cuerpo algoritmo .)
    DLLAVE          reduce using rule 2 (algoritmo -> cuerpo algoritmo .)
    RETURN          reduce using rule 2 (algoritmo -> cuerpo algoritmo .)


state 50

    (46) iniVariable -> variable ID . tipoDeDato
    (47) iniVariable -> variable ID . EQUALS valor
    (48) iniVariable -> variable ID . EQUALS valorBoolean
    (49) iniVariable -> variable ID . EQUALS expLogicas
    (50) iniVariable -> variable ID . EQUALS expresionRelacional
    (101) readline -> variable ID . EQUALS READLINE IPAR DPAR
    (87) list -> variable ID . EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> variable ID . EQUALS SETOF IPAR listElementos DPAR
    (77) maps -> variable ID . EQUALS MAPOF IPAR mapsElemento DPAR
    (104) tipoDeDato -> . DOSPUNTOS INT EQUALS ENTERO
    (105) tipoDeDato -> . DOSPUNTOS DOUBLE EQUALS DECIMAL
    (106) tipoDeDato -> . DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES
    (107) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS valorBoolean
    (108) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS expLogicas
    (109) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS expresionRelacional

    EQUALS          shift and go to state 85
    DOSPUNTOS       shift and go to state 86

    tipoDeDato                     shift and go to state 84

state 51

    (80) tupla -> variable IPAR . ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    ID              shift and go to state 87


state 52

    (116) expresion -> ID operadorMat . expresion
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 88
    ENTERO          shift and go to state 90
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44

    expresion                      shift and go to state 89
    valor                          shift and go to state 20

state 53

    (102) firstAndCap -> ID PUNTO . FIRST IPAR DPAR
    (103) firstAndCap -> ID PUNTO . CAPITALIZE IPAR DPAR
    (67) slice -> ID PUNTO . SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> ID PUNTO . SIZE
    (70) isEmpty -> ID PUNTO . ISEMPTY IPAR DPAR
    (74) funMap -> ID PUNTO . KEYS
    (75) funMap -> ID PUNTO . VALUES
    (72) getMap -> ID PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    FIRST           shift and go to state 91
    CAPITALIZE      shift and go to state 92
    SLICE           shift and go to state 93
    SIZE            shift and go to state 94
    ISEMPTY         shift and go to state 95
    KEYS            shift and go to state 96
    VALUES          shift and go to state 97
    GET             shift and go to state 98


state 54

    (65) indexCol -> ID ICOR . ENTERO DCOR
    (66) indexCol -> ID ICOR . ID DCOR

    ENTERO          shift and go to state 100
    ID              shift and go to state 99


state 55

    (122) operadorMat -> PLUS .

    ID              reduce using rule 122 (operadorMat -> PLUS .)
    ENTERO          reduce using rule 122 (operadorMat -> PLUS .)
    DECIMAL         reduce using rule 122 (operadorMat -> PLUS .)
    CADENA_DE_CARACTERES reduce using rule 122 (operadorMat -> PLUS .)


state 56

    (123) operadorMat -> MINUS .

    ID              reduce using rule 123 (operadorMat -> MINUS .)
    ENTERO          reduce using rule 123 (operadorMat -> MINUS .)
    DECIMAL         reduce using rule 123 (operadorMat -> MINUS .)
    CADENA_DE_CARACTERES reduce using rule 123 (operadorMat -> MINUS .)


state 57

    (124) operadorMat -> TIMES .

    ID              reduce using rule 124 (operadorMat -> TIMES .)
    ENTERO          reduce using rule 124 (operadorMat -> TIMES .)
    DECIMAL         reduce using rule 124 (operadorMat -> TIMES .)
    CADENA_DE_CARACTERES reduce using rule 124 (operadorMat -> TIMES .)


state 58

    (125) operadorMat -> DIVIDE .

    ID              reduce using rule 125 (operadorMat -> DIVIDE .)
    ENTERO          reduce using rule 125 (operadorMat -> DIVIDE .)
    DECIMAL         reduce using rule 125 (operadorMat -> DIVIDE .)
    CADENA_DE_CARACTERES reduce using rule 125 (operadorMat -> DIVIDE .)


state 59

    (115) expresion -> valor operadorMat . expresion
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 88
    ENTERO          shift and go to state 90
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44

    valor                          shift and go to state 20
    expresion                      shift and go to state 101

state 60

    (117) expresionRelacional -> elementoRelacional operadorRelacional . elementoRelacional
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE

    ENTERO          shift and go to state 103
    DOUBLE          shift and go to state 45
    ID              shift and go to state 104
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    elementoRelacional             shift and go to state 102
    valorBoolean                   shift and go to state 105

state 61

    (137) operadorRelacional -> EQUAL .

    ENTERO          reduce using rule 137 (operadorRelacional -> EQUAL .)
    DOUBLE          reduce using rule 137 (operadorRelacional -> EQUAL .)
    ID              reduce using rule 137 (operadorRelacional -> EQUAL .)
    TRUE            reduce using rule 137 (operadorRelacional -> EQUAL .)
    FALSE           reduce using rule 137 (operadorRelacional -> EQUAL .)


state 62

    (138) operadorRelacional -> NOTEQ .

    ENTERO          reduce using rule 138 (operadorRelacional -> NOTEQ .)
    DOUBLE          reduce using rule 138 (operadorRelacional -> NOTEQ .)
    ID              reduce using rule 138 (operadorRelacional -> NOTEQ .)
    TRUE            reduce using rule 138 (operadorRelacional -> NOTEQ .)
    FALSE           reduce using rule 138 (operadorRelacional -> NOTEQ .)


state 63

    (139) operadorRelacional -> LARGE .

    ENTERO          reduce using rule 139 (operadorRelacional -> LARGE .)
    DOUBLE          reduce using rule 139 (operadorRelacional -> LARGE .)
    ID              reduce using rule 139 (operadorRelacional -> LARGE .)
    TRUE            reduce using rule 139 (operadorRelacional -> LARGE .)
    FALSE           reduce using rule 139 (operadorRelacional -> LARGE .)


state 64

    (140) operadorRelacional -> SMALL .

    ENTERO          reduce using rule 140 (operadorRelacional -> SMALL .)
    DOUBLE          reduce using rule 140 (operadorRelacional -> SMALL .)
    ID              reduce using rule 140 (operadorRelacional -> SMALL .)
    TRUE            reduce using rule 140 (operadorRelacional -> SMALL .)
    FALSE           reduce using rule 140 (operadorRelacional -> SMALL .)


state 65

    (141) operadorRelacional -> LRGEQ .

    ENTERO          reduce using rule 141 (operadorRelacional -> LRGEQ .)
    DOUBLE          reduce using rule 141 (operadorRelacional -> LRGEQ .)
    ID              reduce using rule 141 (operadorRelacional -> LRGEQ .)
    TRUE            reduce using rule 141 (operadorRelacional -> LRGEQ .)
    FALSE           reduce using rule 141 (operadorRelacional -> LRGEQ .)


state 66

    (142) operadorRelacional -> SMLEQ .

    ENTERO          reduce using rule 142 (operadorRelacional -> SMLEQ .)
    DOUBLE          reduce using rule 142 (operadorRelacional -> SMLEQ .)
    ID              reduce using rule 142 (operadorRelacional -> SMLEQ .)
    TRUE            reduce using rule 142 (operadorRelacional -> SMLEQ .)
    FALSE           reduce using rule 142 (operadorRelacional -> SMLEQ .)


state 67

    (51) imprimir -> PRINT IPAR . elementosPrint DPAR
    (53) elementosPrint -> . funColecciones
    (54) elementosPrint -> . coleccion
    (55) elementosPrint -> . expresion
    (56) elementosPrint -> . valorBoolean
    (57) elementosPrint -> . expLogicas
    (58) elementosPrint -> . expresionRelacional
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean

    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27
    MAPOF           shift and go to state 113
    ID              shift and go to state 114
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45

    elementosPrint                 shift and go to state 106
    funColecciones                 shift and go to state 107
    coleccion                      shift and go to state 108
    expresion                      shift and go to state 109
    valorBoolean                   shift and go to state 110
    expLogicas                     shift and go to state 111
    expresionRelacional            shift and go to state 112
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    valor                          shift and go to state 20
    boolID                         shift and go to state 35
    elementoRelacional             shift and go to state 22

state 68

    (52) imprimir -> PRINTLN IPAR . elementosPrint DPAR
    (53) elementosPrint -> . funColecciones
    (54) elementosPrint -> . coleccion
    (55) elementosPrint -> . expresion
    (56) elementosPrint -> . valorBoolean
    (57) elementosPrint -> . expLogicas
    (58) elementosPrint -> . expresionRelacional
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean

    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27
    MAPOF           shift and go to state 113
    ID              shift and go to state 114
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45

    elementosPrint                 shift and go to state 115
    funColecciones                 shift and go to state 107
    coleccion                      shift and go to state 108
    expresion                      shift and go to state 109
    valorBoolean                   shift and go to state 110
    expLogicas                     shift and go to state 111
    expresionRelacional            shift and go to state 112
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    valor                          shift and go to state 20
    boolID                         shift and go to state 35
    elementoRelacional             shift and go to state 22

state 69

    (100) readline -> READLINE IPAR . DPAR

    DPAR            shift and go to state 116


state 70

    (110) coleccion -> LISTOF IPAR . listElementos DPAR
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    listElementos                  shift and go to state 118
    valor                          shift and go to state 119
    valorBoolean                   shift and go to state 121
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 71

    (111) coleccion -> SETOF IPAR . listElementos DPAR
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    listElementos                  shift and go to state 125
    valor                          shift and go to state 119
    valorBoolean                   shift and go to state 121
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 72

    (76) funMap -> MAPOF IPAR . mapsElemento DPAR PUNTO VALUES
    (73) getMap -> MAPOF IPAR . mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (112) coleccion -> MAPOF IPAR . mapsElemento DPAR
    (78) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (79) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 127

    mapsElemento                   shift and go to state 126

state 73

    (129) expLogicas -> boolID opLogico . boolID
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE

    ID              shift and go to state 77
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    boolID                         shift and go to state 128
    valorBoolean                   shift and go to state 78

state 74

    (133) opLogico -> AND .

    ID              reduce using rule 133 (opLogico -> AND .)
    TRUE            reduce using rule 133 (opLogico -> AND .)
    FALSE           reduce using rule 133 (opLogico -> AND .)


state 75

    (134) opLogico -> OR .

    ID              reduce using rule 134 (opLogico -> OR .)
    TRUE            reduce using rule 134 (opLogico -> OR .)
    FALSE           reduce using rule 134 (opLogico -> OR .)


state 76

    (130) expLogicas -> NEGATION boolID .

    ID              reduce using rule 130 (expLogicas -> NEGATION boolID .)
    PRINT           reduce using rule 130 (expLogicas -> NEGATION boolID .)
    PRINTLN         reduce using rule 130 (expLogicas -> NEGATION boolID .)
    READLINE        reduce using rule 130 (expLogicas -> NEGATION boolID .)
    NEGATION        reduce using rule 130 (expLogicas -> NEGATION boolID .)
    FUN             reduce using rule 130 (expLogicas -> NEGATION boolID .)
    IF              reduce using rule 130 (expLogicas -> NEGATION boolID .)
    FOR             reduce using rule 130 (expLogicas -> NEGATION boolID .)
    VAR             reduce using rule 130 (expLogicas -> NEGATION boolID .)
    VAL             reduce using rule 130 (expLogicas -> NEGATION boolID .)
    ENTERO          reduce using rule 130 (expLogicas -> NEGATION boolID .)
    DECIMAL         reduce using rule 130 (expLogicas -> NEGATION boolID .)
    CADENA_DE_CARACTERES reduce using rule 130 (expLogicas -> NEGATION boolID .)
    DOUBLE          reduce using rule 130 (expLogicas -> NEGATION boolID .)
    MAPOF           reduce using rule 130 (expLogicas -> NEGATION boolID .)
    TRUE            reduce using rule 130 (expLogicas -> NEGATION boolID .)
    FALSE           reduce using rule 130 (expLogicas -> NEGATION boolID .)
    LISTOF          reduce using rule 130 (expLogicas -> NEGATION boolID .)
    SETOF           reduce using rule 130 (expLogicas -> NEGATION boolID .)
    $end            reduce using rule 130 (expLogicas -> NEGATION boolID .)
    DLLAVE          reduce using rule 130 (expLogicas -> NEGATION boolID .)
    RETURN          reduce using rule 130 (expLogicas -> NEGATION boolID .)
    DPAR            reduce using rule 130 (expLogicas -> NEGATION boolID .)
    ELSE            reduce using rule 130 (expLogicas -> NEGATION boolID .)


state 77

    (131) boolID -> ID .

    ID              reduce using rule 131 (boolID -> ID .)
    PRINT           reduce using rule 131 (boolID -> ID .)
    PRINTLN         reduce using rule 131 (boolID -> ID .)
    READLINE        reduce using rule 131 (boolID -> ID .)
    NEGATION        reduce using rule 131 (boolID -> ID .)
    FUN             reduce using rule 131 (boolID -> ID .)
    IF              reduce using rule 131 (boolID -> ID .)
    FOR             reduce using rule 131 (boolID -> ID .)
    VAR             reduce using rule 131 (boolID -> ID .)
    VAL             reduce using rule 131 (boolID -> ID .)
    ENTERO          reduce using rule 131 (boolID -> ID .)
    DECIMAL         reduce using rule 131 (boolID -> ID .)
    CADENA_DE_CARACTERES reduce using rule 131 (boolID -> ID .)
    DOUBLE          reduce using rule 131 (boolID -> ID .)
    MAPOF           reduce using rule 131 (boolID -> ID .)
    TRUE            reduce using rule 131 (boolID -> ID .)
    FALSE           reduce using rule 131 (boolID -> ID .)
    LISTOF          reduce using rule 131 (boolID -> ID .)
    SETOF           reduce using rule 131 (boolID -> ID .)
    $end            reduce using rule 131 (boolID -> ID .)
    DLLAVE          reduce using rule 131 (boolID -> ID .)
    RETURN          reduce using rule 131 (boolID -> ID .)
    DPAR            reduce using rule 131 (boolID -> ID .)
    ELSE            reduce using rule 131 (boolID -> ID .)


state 78

    (132) boolID -> valorBoolean .

    ID              reduce using rule 132 (boolID -> valorBoolean .)
    PRINT           reduce using rule 132 (boolID -> valorBoolean .)
    PRINTLN         reduce using rule 132 (boolID -> valorBoolean .)
    READLINE        reduce using rule 132 (boolID -> valorBoolean .)
    NEGATION        reduce using rule 132 (boolID -> valorBoolean .)
    FUN             reduce using rule 132 (boolID -> valorBoolean .)
    IF              reduce using rule 132 (boolID -> valorBoolean .)
    FOR             reduce using rule 132 (boolID -> valorBoolean .)
    VAR             reduce using rule 132 (boolID -> valorBoolean .)
    VAL             reduce using rule 132 (boolID -> valorBoolean .)
    ENTERO          reduce using rule 132 (boolID -> valorBoolean .)
    DECIMAL         reduce using rule 132 (boolID -> valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 132 (boolID -> valorBoolean .)
    DOUBLE          reduce using rule 132 (boolID -> valorBoolean .)
    MAPOF           reduce using rule 132 (boolID -> valorBoolean .)
    TRUE            reduce using rule 132 (boolID -> valorBoolean .)
    FALSE           reduce using rule 132 (boolID -> valorBoolean .)
    LISTOF          reduce using rule 132 (boolID -> valorBoolean .)
    SETOF           reduce using rule 132 (boolID -> valorBoolean .)
    $end            reduce using rule 132 (boolID -> valorBoolean .)
    DLLAVE          reduce using rule 132 (boolID -> valorBoolean .)
    RETURN          reduce using rule 132 (boolID -> valorBoolean .)
    DPAR            reduce using rule 132 (boolID -> valorBoolean .)
    ELSE            reduce using rule 132 (boolID -> valorBoolean .)


state 79

    (18) fun -> FUN ID . IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> FUN ID . IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> FUN ID . IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> FUN ID . IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> FUN ID . IPAR entrada_fun DPAR EQUALS return

    IPAR            shift and go to state 129


state 80

    (27) if -> IF IPAR . entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> IF IPAR . entradaIf DPAR return
    (29) if -> IF IPAR . entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> IF IPAR . entradaIf DPAR return else
    (33) entradaIf -> . valorBoolean
    (34) entradaIf -> . expLogicas
    (35) entradaIf -> . expresionRelacional
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean

    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    ID              shift and go to state 134
    ENTERO          shift and go to state 103
    DOUBLE          shift and go to state 45

    entradaIf                      shift and go to state 130
    valorBoolean                   shift and go to state 131
    expLogicas                     shift and go to state 132
    expresionRelacional            shift and go to state 133
    boolID                         shift and go to state 35
    elementoRelacional             shift and go to state 22

state 81

    (23) for -> FOR condicionFor . ILLAVE algoritmo DLLAVE

    ILLAVE          shift and go to state 135


state 82

    (24) condicionFor -> IPAR . ID IN ID DPAR
    (25) condicionFor -> IPAR . ID IN ENTERO PUNTO PUNTO ENTERO DPAR
    (26) condicionFor -> IPAR . ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    ID              shift and go to state 136


state 83

    (69) size -> coleccion PUNTO . SIZE
    (71) isEmpty -> coleccion PUNTO . ISEMPTY IPAR DPAR

    SIZE            shift and go to state 137
    ISEMPTY         shift and go to state 138


state 84

    (46) iniVariable -> variable ID tipoDeDato .

    ID              reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    PRINT           reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    PRINTLN         reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    READLINE        reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    NEGATION        reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    FUN             reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    IF              reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    FOR             reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    VAR             reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    VAL             reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    ENTERO          reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    DECIMAL         reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    CADENA_DE_CARACTERES reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    DOUBLE          reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    MAPOF           reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    TRUE            reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    FALSE           reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    LISTOF          reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    SETOF           reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    $end            reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    DLLAVE          reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)
    RETURN          reduce using rule 46 (iniVariable -> variable ID tipoDeDato .)


state 85

    (47) iniVariable -> variable ID EQUALS . valor
    (48) iniVariable -> variable ID EQUALS . valorBoolean
    (49) iniVariable -> variable ID EQUALS . expLogicas
    (50) iniVariable -> variable ID EQUALS . expresionRelacional
    (101) readline -> variable ID EQUALS . READLINE IPAR DPAR
    (87) list -> variable ID EQUALS . LISTOF IPAR listElementos DPAR
    (86) conjuntos -> variable ID EQUALS . SETOF IPAR listElementos DPAR
    (77) maps -> variable ID EQUALS . MAPOF IPAR mapsElemento DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean

    READLINE        shift and go to state 143
    LISTOF          shift and go to state 144
    SETOF           shift and go to state 145
    MAPOF           shift and go to state 146
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    ID              shift and go to state 134
    DOUBLE          shift and go to state 45

    valor                          shift and go to state 139
    valorBoolean                   shift and go to state 140
    expLogicas                     shift and go to state 141
    expresionRelacional            shift and go to state 142
    boolID                         shift and go to state 35
    elementoRelacional             shift and go to state 22

state 86

    (104) tipoDeDato -> DOSPUNTOS . INT EQUALS ENTERO
    (105) tipoDeDato -> DOSPUNTOS . DOUBLE EQUALS DECIMAL
    (106) tipoDeDato -> DOSPUNTOS . STRING EQUALS CADENA_DE_CARACTERES
    (107) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS valorBoolean
    (108) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS expLogicas
    (109) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS expresionRelacional

    INT             shift and go to state 147
    DOUBLE          shift and go to state 148
    STRING          shift and go to state 149
    BOOLEAN         shift and go to state 150


state 87

    (80) tupla -> variable IPAR ID . COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    COMA            shift and go to state 151


state 88

    (114) expresion -> ID .
    (116) expresion -> ID . operadorMat expresion
    (122) operadorMat -> . PLUS
    (123) operadorMat -> . MINUS
    (124) operadorMat -> . TIMES
    (125) operadorMat -> . DIVIDE

    ID              reduce using rule 114 (expresion -> ID .)
    PRINT           reduce using rule 114 (expresion -> ID .)
    PRINTLN         reduce using rule 114 (expresion -> ID .)
    READLINE        reduce using rule 114 (expresion -> ID .)
    NEGATION        reduce using rule 114 (expresion -> ID .)
    FUN             reduce using rule 114 (expresion -> ID .)
    IF              reduce using rule 114 (expresion -> ID .)
    FOR             reduce using rule 114 (expresion -> ID .)
    VAR             reduce using rule 114 (expresion -> ID .)
    VAL             reduce using rule 114 (expresion -> ID .)
    ENTERO          reduce using rule 114 (expresion -> ID .)
    DECIMAL         reduce using rule 114 (expresion -> ID .)
    CADENA_DE_CARACTERES reduce using rule 114 (expresion -> ID .)
    DOUBLE          reduce using rule 114 (expresion -> ID .)
    MAPOF           reduce using rule 114 (expresion -> ID .)
    TRUE            reduce using rule 114 (expresion -> ID .)
    FALSE           reduce using rule 114 (expresion -> ID .)
    LISTOF          reduce using rule 114 (expresion -> ID .)
    SETOF           reduce using rule 114 (expresion -> ID .)
    $end            reduce using rule 114 (expresion -> ID .)
    DLLAVE          reduce using rule 114 (expresion -> ID .)
    RETURN          reduce using rule 114 (expresion -> ID .)
    DPAR            reduce using rule 114 (expresion -> ID .)
    ELSE            reduce using rule 114 (expresion -> ID .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadorMat                    shift and go to state 52

state 89

    (116) expresion -> ID operadorMat expresion .

    ID              reduce using rule 116 (expresion -> ID operadorMat expresion .)
    PRINT           reduce using rule 116 (expresion -> ID operadorMat expresion .)
    PRINTLN         reduce using rule 116 (expresion -> ID operadorMat expresion .)
    READLINE        reduce using rule 116 (expresion -> ID operadorMat expresion .)
    NEGATION        reduce using rule 116 (expresion -> ID operadorMat expresion .)
    FUN             reduce using rule 116 (expresion -> ID operadorMat expresion .)
    IF              reduce using rule 116 (expresion -> ID operadorMat expresion .)
    FOR             reduce using rule 116 (expresion -> ID operadorMat expresion .)
    VAR             reduce using rule 116 (expresion -> ID operadorMat expresion .)
    VAL             reduce using rule 116 (expresion -> ID operadorMat expresion .)
    ENTERO          reduce using rule 116 (expresion -> ID operadorMat expresion .)
    DECIMAL         reduce using rule 116 (expresion -> ID operadorMat expresion .)
    CADENA_DE_CARACTERES reduce using rule 116 (expresion -> ID operadorMat expresion .)
    DOUBLE          reduce using rule 116 (expresion -> ID operadorMat expresion .)
    MAPOF           reduce using rule 116 (expresion -> ID operadorMat expresion .)
    TRUE            reduce using rule 116 (expresion -> ID operadorMat expresion .)
    FALSE           reduce using rule 116 (expresion -> ID operadorMat expresion .)
    LISTOF          reduce using rule 116 (expresion -> ID operadorMat expresion .)
    SETOF           reduce using rule 116 (expresion -> ID operadorMat expresion .)
    $end            reduce using rule 116 (expresion -> ID operadorMat expresion .)
    DLLAVE          reduce using rule 116 (expresion -> ID operadorMat expresion .)
    RETURN          reduce using rule 116 (expresion -> ID operadorMat expresion .)
    DPAR            reduce using rule 116 (expresion -> ID operadorMat expresion .)
    ELSE            reduce using rule 116 (expresion -> ID operadorMat expresion .)


state 90

    (126) valor -> ENTERO .

    PLUS            reduce using rule 126 (valor -> ENTERO .)
    MINUS           reduce using rule 126 (valor -> ENTERO .)
    TIMES           reduce using rule 126 (valor -> ENTERO .)
    DIVIDE          reduce using rule 126 (valor -> ENTERO .)
    ID              reduce using rule 126 (valor -> ENTERO .)
    PRINT           reduce using rule 126 (valor -> ENTERO .)
    PRINTLN         reduce using rule 126 (valor -> ENTERO .)
    READLINE        reduce using rule 126 (valor -> ENTERO .)
    NEGATION        reduce using rule 126 (valor -> ENTERO .)
    FUN             reduce using rule 126 (valor -> ENTERO .)
    IF              reduce using rule 126 (valor -> ENTERO .)
    FOR             reduce using rule 126 (valor -> ENTERO .)
    VAR             reduce using rule 126 (valor -> ENTERO .)
    VAL             reduce using rule 126 (valor -> ENTERO .)
    ENTERO          reduce using rule 126 (valor -> ENTERO .)
    DECIMAL         reduce using rule 126 (valor -> ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 126 (valor -> ENTERO .)
    DOUBLE          reduce using rule 126 (valor -> ENTERO .)
    MAPOF           reduce using rule 126 (valor -> ENTERO .)
    TRUE            reduce using rule 126 (valor -> ENTERO .)
    FALSE           reduce using rule 126 (valor -> ENTERO .)
    LISTOF          reduce using rule 126 (valor -> ENTERO .)
    SETOF           reduce using rule 126 (valor -> ENTERO .)
    $end            reduce using rule 126 (valor -> ENTERO .)
    DLLAVE          reduce using rule 126 (valor -> ENTERO .)
    RETURN          reduce using rule 126 (valor -> ENTERO .)
    DPAR            reduce using rule 126 (valor -> ENTERO .)
    ELSE            reduce using rule 126 (valor -> ENTERO .)
    COMA            reduce using rule 126 (valor -> ENTERO .)


state 91

    (102) firstAndCap -> ID PUNTO FIRST . IPAR DPAR

    IPAR            shift and go to state 152


state 92

    (103) firstAndCap -> ID PUNTO CAPITALIZE . IPAR DPAR

    IPAR            shift and go to state 153


state 93

    (67) slice -> ID PUNTO SLICE . IPAR ENTERO PUNTO PUNTO ENTERO DPAR

    IPAR            shift and go to state 154


state 94

    (68) size -> ID PUNTO SIZE .

    ID              reduce using rule 68 (size -> ID PUNTO SIZE .)
    PRINT           reduce using rule 68 (size -> ID PUNTO SIZE .)
    PRINTLN         reduce using rule 68 (size -> ID PUNTO SIZE .)
    READLINE        reduce using rule 68 (size -> ID PUNTO SIZE .)
    NEGATION        reduce using rule 68 (size -> ID PUNTO SIZE .)
    FUN             reduce using rule 68 (size -> ID PUNTO SIZE .)
    IF              reduce using rule 68 (size -> ID PUNTO SIZE .)
    FOR             reduce using rule 68 (size -> ID PUNTO SIZE .)
    VAR             reduce using rule 68 (size -> ID PUNTO SIZE .)
    VAL             reduce using rule 68 (size -> ID PUNTO SIZE .)
    ENTERO          reduce using rule 68 (size -> ID PUNTO SIZE .)
    DECIMAL         reduce using rule 68 (size -> ID PUNTO SIZE .)
    CADENA_DE_CARACTERES reduce using rule 68 (size -> ID PUNTO SIZE .)
    DOUBLE          reduce using rule 68 (size -> ID PUNTO SIZE .)
    MAPOF           reduce using rule 68 (size -> ID PUNTO SIZE .)
    TRUE            reduce using rule 68 (size -> ID PUNTO SIZE .)
    FALSE           reduce using rule 68 (size -> ID PUNTO SIZE .)
    LISTOF          reduce using rule 68 (size -> ID PUNTO SIZE .)
    SETOF           reduce using rule 68 (size -> ID PUNTO SIZE .)
    $end            reduce using rule 68 (size -> ID PUNTO SIZE .)
    DLLAVE          reduce using rule 68 (size -> ID PUNTO SIZE .)
    RETURN          reduce using rule 68 (size -> ID PUNTO SIZE .)
    DPAR            reduce using rule 68 (size -> ID PUNTO SIZE .)


state 95

    (70) isEmpty -> ID PUNTO ISEMPTY . IPAR DPAR

    IPAR            shift and go to state 155


state 96

    (74) funMap -> ID PUNTO KEYS .

    ID              reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    PRINT           reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    PRINTLN         reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    READLINE        reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    NEGATION        reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    FUN             reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    IF              reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    FOR             reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    VAR             reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    VAL             reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    ENTERO          reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    DECIMAL         reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    CADENA_DE_CARACTERES reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    DOUBLE          reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    MAPOF           reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    TRUE            reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    FALSE           reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    LISTOF          reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    SETOF           reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    $end            reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    DLLAVE          reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    RETURN          reduce using rule 74 (funMap -> ID PUNTO KEYS .)
    DPAR            reduce using rule 74 (funMap -> ID PUNTO KEYS .)


state 97

    (75) funMap -> ID PUNTO VALUES .

    ID              reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    PRINT           reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    PRINTLN         reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    READLINE        reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    NEGATION        reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    FUN             reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    IF              reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    FOR             reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    VAR             reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    VAL             reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    ENTERO          reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    DECIMAL         reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    CADENA_DE_CARACTERES reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    DOUBLE          reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    MAPOF           reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    TRUE            reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    FALSE           reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    LISTOF          reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    SETOF           reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    $end            reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    DLLAVE          reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    RETURN          reduce using rule 75 (funMap -> ID PUNTO VALUES .)
    DPAR            reduce using rule 75 (funMap -> ID PUNTO VALUES .)


state 98

    (72) getMap -> ID PUNTO GET . IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 156


state 99

    (66) indexCol -> ID ICOR ID . DCOR

    DCOR            shift and go to state 157


state 100

    (65) indexCol -> ID ICOR ENTERO . DCOR

    DCOR            shift and go to state 158


state 101

    (115) expresion -> valor operadorMat expresion .

    ID              reduce using rule 115 (expresion -> valor operadorMat expresion .)
    PRINT           reduce using rule 115 (expresion -> valor operadorMat expresion .)
    PRINTLN         reduce using rule 115 (expresion -> valor operadorMat expresion .)
    READLINE        reduce using rule 115 (expresion -> valor operadorMat expresion .)
    NEGATION        reduce using rule 115 (expresion -> valor operadorMat expresion .)
    FUN             reduce using rule 115 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 115 (expresion -> valor operadorMat expresion .)
    FOR             reduce using rule 115 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 115 (expresion -> valor operadorMat expresion .)
    VAL             reduce using rule 115 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 115 (expresion -> valor operadorMat expresion .)
    DECIMAL         reduce using rule 115 (expresion -> valor operadorMat expresion .)
    CADENA_DE_CARACTERES reduce using rule 115 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 115 (expresion -> valor operadorMat expresion .)
    MAPOF           reduce using rule 115 (expresion -> valor operadorMat expresion .)
    TRUE            reduce using rule 115 (expresion -> valor operadorMat expresion .)
    FALSE           reduce using rule 115 (expresion -> valor operadorMat expresion .)
    LISTOF          reduce using rule 115 (expresion -> valor operadorMat expresion .)
    SETOF           reduce using rule 115 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 115 (expresion -> valor operadorMat expresion .)
    DLLAVE          reduce using rule 115 (expresion -> valor operadorMat expresion .)
    RETURN          reduce using rule 115 (expresion -> valor operadorMat expresion .)
    DPAR            reduce using rule 115 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 115 (expresion -> valor operadorMat expresion .)


state 102

    (117) expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .

    ID              reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    PRINT           reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    PRINTLN         reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    READLINE        reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    NEGATION        reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    FUN             reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    IF              reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    FOR             reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    VAR             reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    VAL             reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    ENTERO          reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DECIMAL         reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    CADENA_DE_CARACTERES reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DOUBLE          reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    MAPOF           reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    TRUE            reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    FALSE           reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    LISTOF          reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    SETOF           reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    $end            reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DLLAVE          reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    RETURN          reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DPAR            reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    ELSE            reduce using rule 117 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)


state 103

    (118) elementoRelacional -> ENTERO .

    ID              reduce using rule 118 (elementoRelacional -> ENTERO .)
    PRINT           reduce using rule 118 (elementoRelacional -> ENTERO .)
    PRINTLN         reduce using rule 118 (elementoRelacional -> ENTERO .)
    READLINE        reduce using rule 118 (elementoRelacional -> ENTERO .)
    NEGATION        reduce using rule 118 (elementoRelacional -> ENTERO .)
    FUN             reduce using rule 118 (elementoRelacional -> ENTERO .)
    IF              reduce using rule 118 (elementoRelacional -> ENTERO .)
    FOR             reduce using rule 118 (elementoRelacional -> ENTERO .)
    VAR             reduce using rule 118 (elementoRelacional -> ENTERO .)
    VAL             reduce using rule 118 (elementoRelacional -> ENTERO .)
    ENTERO          reduce using rule 118 (elementoRelacional -> ENTERO .)
    DECIMAL         reduce using rule 118 (elementoRelacional -> ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 118 (elementoRelacional -> ENTERO .)
    DOUBLE          reduce using rule 118 (elementoRelacional -> ENTERO .)
    MAPOF           reduce using rule 118 (elementoRelacional -> ENTERO .)
    TRUE            reduce using rule 118 (elementoRelacional -> ENTERO .)
    FALSE           reduce using rule 118 (elementoRelacional -> ENTERO .)
    LISTOF          reduce using rule 118 (elementoRelacional -> ENTERO .)
    SETOF           reduce using rule 118 (elementoRelacional -> ENTERO .)
    $end            reduce using rule 118 (elementoRelacional -> ENTERO .)
    DLLAVE          reduce using rule 118 (elementoRelacional -> ENTERO .)
    RETURN          reduce using rule 118 (elementoRelacional -> ENTERO .)
    DPAR            reduce using rule 118 (elementoRelacional -> ENTERO .)
    ELSE            reduce using rule 118 (elementoRelacional -> ENTERO .)
    EQUAL           reduce using rule 118 (elementoRelacional -> ENTERO .)
    NOTEQ           reduce using rule 118 (elementoRelacional -> ENTERO .)
    LARGE           reduce using rule 118 (elementoRelacional -> ENTERO .)
    SMALL           reduce using rule 118 (elementoRelacional -> ENTERO .)
    LRGEQ           reduce using rule 118 (elementoRelacional -> ENTERO .)
    SMLEQ           reduce using rule 118 (elementoRelacional -> ENTERO .)


state 104

    (120) elementoRelacional -> ID .

    ID              reduce using rule 120 (elementoRelacional -> ID .)
    PRINT           reduce using rule 120 (elementoRelacional -> ID .)
    PRINTLN         reduce using rule 120 (elementoRelacional -> ID .)
    READLINE        reduce using rule 120 (elementoRelacional -> ID .)
    NEGATION        reduce using rule 120 (elementoRelacional -> ID .)
    FUN             reduce using rule 120 (elementoRelacional -> ID .)
    IF              reduce using rule 120 (elementoRelacional -> ID .)
    FOR             reduce using rule 120 (elementoRelacional -> ID .)
    VAR             reduce using rule 120 (elementoRelacional -> ID .)
    VAL             reduce using rule 120 (elementoRelacional -> ID .)
    ENTERO          reduce using rule 120 (elementoRelacional -> ID .)
    DECIMAL         reduce using rule 120 (elementoRelacional -> ID .)
    CADENA_DE_CARACTERES reduce using rule 120 (elementoRelacional -> ID .)
    DOUBLE          reduce using rule 120 (elementoRelacional -> ID .)
    MAPOF           reduce using rule 120 (elementoRelacional -> ID .)
    TRUE            reduce using rule 120 (elementoRelacional -> ID .)
    FALSE           reduce using rule 120 (elementoRelacional -> ID .)
    LISTOF          reduce using rule 120 (elementoRelacional -> ID .)
    SETOF           reduce using rule 120 (elementoRelacional -> ID .)
    $end            reduce using rule 120 (elementoRelacional -> ID .)
    DLLAVE          reduce using rule 120 (elementoRelacional -> ID .)
    RETURN          reduce using rule 120 (elementoRelacional -> ID .)
    DPAR            reduce using rule 120 (elementoRelacional -> ID .)
    ELSE            reduce using rule 120 (elementoRelacional -> ID .)


state 105

    (121) elementoRelacional -> valorBoolean .

    ID              reduce using rule 121 (elementoRelacional -> valorBoolean .)
    PRINT           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    PRINTLN         reduce using rule 121 (elementoRelacional -> valorBoolean .)
    READLINE        reduce using rule 121 (elementoRelacional -> valorBoolean .)
    NEGATION        reduce using rule 121 (elementoRelacional -> valorBoolean .)
    FUN             reduce using rule 121 (elementoRelacional -> valorBoolean .)
    IF              reduce using rule 121 (elementoRelacional -> valorBoolean .)
    FOR             reduce using rule 121 (elementoRelacional -> valorBoolean .)
    VAR             reduce using rule 121 (elementoRelacional -> valorBoolean .)
    VAL             reduce using rule 121 (elementoRelacional -> valorBoolean .)
    ENTERO          reduce using rule 121 (elementoRelacional -> valorBoolean .)
    DECIMAL         reduce using rule 121 (elementoRelacional -> valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 121 (elementoRelacional -> valorBoolean .)
    DOUBLE          reduce using rule 121 (elementoRelacional -> valorBoolean .)
    MAPOF           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    TRUE            reduce using rule 121 (elementoRelacional -> valorBoolean .)
    FALSE           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LISTOF          reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SETOF           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    $end            reduce using rule 121 (elementoRelacional -> valorBoolean .)
    DLLAVE          reduce using rule 121 (elementoRelacional -> valorBoolean .)
    RETURN          reduce using rule 121 (elementoRelacional -> valorBoolean .)
    DPAR            reduce using rule 121 (elementoRelacional -> valorBoolean .)
    ELSE            reduce using rule 121 (elementoRelacional -> valorBoolean .)


state 106

    (51) imprimir -> PRINT IPAR elementosPrint . DPAR

    DPAR            shift and go to state 159


state 107

    (53) elementosPrint -> funColecciones .

    DPAR            reduce using rule 53 (elementosPrint -> funColecciones .)


state 108

    (54) elementosPrint -> coleccion .
    (69) size -> coleccion . PUNTO SIZE
    (71) isEmpty -> coleccion . PUNTO ISEMPTY IPAR DPAR

    DPAR            reduce using rule 54 (elementosPrint -> coleccion .)
    PUNTO           shift and go to state 83


state 109

    (55) elementosPrint -> expresion .

    DPAR            reduce using rule 55 (elementosPrint -> expresion .)


state 110

    (56) elementosPrint -> valorBoolean .
    (132) boolID -> valorBoolean .
    (121) elementoRelacional -> valorBoolean .

    DPAR            reduce using rule 56 (elementosPrint -> valorBoolean .)
    AND             reduce using rule 132 (boolID -> valorBoolean .)
    OR              reduce using rule 132 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)


state 111

    (57) elementosPrint -> expLogicas .

    DPAR            reduce using rule 57 (elementosPrint -> expLogicas .)


state 112

    (58) elementosPrint -> expresionRelacional .

    DPAR            reduce using rule 58 (elementosPrint -> expresionRelacional .)


state 113

    (112) coleccion -> MAPOF . IPAR mapsElemento DPAR
    (76) funMap -> MAPOF . IPAR mapsElemento DPAR PUNTO VALUES
    (73) getMap -> MAPOF . IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 160


state 114

    (114) expresion -> ID .
    (116) expresion -> ID . operadorMat expresion
    (65) indexCol -> ID . ICOR ENTERO DCOR
    (66) indexCol -> ID . ICOR ID DCOR
    (67) slice -> ID . PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> ID . PUNTO SIZE
    (70) isEmpty -> ID . PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> ID . PUNTO KEYS
    (75) funMap -> ID . PUNTO VALUES
    (72) getMap -> ID . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> ID .
    (120) elementoRelacional -> ID .
    (122) operadorMat -> . PLUS
    (123) operadorMat -> . MINUS
    (124) operadorMat -> . TIMES
    (125) operadorMat -> . DIVIDE

    DPAR            reduce using rule 114 (expresion -> ID .)
    ICOR            shift and go to state 54
    PUNTO           shift and go to state 161
    AND             reduce using rule 131 (boolID -> ID .)
    OR              reduce using rule 131 (boolID -> ID .)
    EQUAL           reduce using rule 120 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 120 (elementoRelacional -> ID .)
    LARGE           reduce using rule 120 (elementoRelacional -> ID .)
    SMALL           reduce using rule 120 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 120 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 120 (elementoRelacional -> ID .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadorMat                    shift and go to state 52

state 115

    (52) imprimir -> PRINTLN IPAR elementosPrint . DPAR

    DPAR            shift and go to state 162


state 116

    (100) readline -> READLINE IPAR DPAR .

    ID              reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    PRINT           reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    PRINTLN         reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    READLINE        reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    NEGATION        reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    FUN             reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    IF              reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    FOR             reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    VAR             reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    VAL             reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    ENTERO          reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    DECIMAL         reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    DOUBLE          reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    MAPOF           reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    TRUE            reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    FALSE           reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    LISTOF          reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    SETOF           reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    $end            reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    DLLAVE          reduce using rule 100 (readline -> READLINE IPAR DPAR .)
    RETURN          reduce using rule 100 (readline -> READLINE IPAR DPAR .)


state 117

    (96) listElementos -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 163


state 118

    (110) coleccion -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 164


state 119

    (88) listElementos -> valor .
    (94) listElementos -> valor . COMA listElementos

    DPAR            reduce using rule 88 (listElementos -> valor .)
    COMA            shift and go to state 165


state 120

    (89) listElementos -> ID .
    (95) listElementos -> ID . COMA listElementos
    (120) elementoRelacional -> ID .
    (131) boolID -> ID .

    DPAR            reduce using rule 89 (listElementos -> ID .)
    COMA            shift and go to state 166
    EQUAL           reduce using rule 120 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 120 (elementoRelacional -> ID .)
    LARGE           reduce using rule 120 (elementoRelacional -> ID .)
    SMALL           reduce using rule 120 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 120 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 120 (elementoRelacional -> ID .)
    AND             reduce using rule 131 (boolID -> ID .)
    OR              reduce using rule 131 (boolID -> ID .)


state 121

    (90) listElementos -> valorBoolean .
    (93) listElementos -> valorBoolean . COMA listElementos
    (121) elementoRelacional -> valorBoolean .
    (132) boolID -> valorBoolean .

    DPAR            reduce using rule 90 (listElementos -> valorBoolean .)
    COMA            shift and go to state 167
    EQUAL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    AND             reduce using rule 132 (boolID -> valorBoolean .)
    OR              reduce using rule 132 (boolID -> valorBoolean .)


state 122

    (91) listElementos -> expresionRelacional .

    DPAR            reduce using rule 91 (listElementos -> expresionRelacional .)


state 123

    (92) listElementos -> expLogicas .

    DPAR            reduce using rule 92 (listElementos -> expLogicas .)


state 124

    (97) listElementos -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 168


state 125

    (111) coleccion -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 169


state 126

    (76) funMap -> MAPOF IPAR mapsElemento . DPAR PUNTO VALUES
    (73) getMap -> MAPOF IPAR mapsElemento . DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (112) coleccion -> MAPOF IPAR mapsElemento . DPAR

    DPAR            shift and go to state 170


state 127

    (78) mapsElemento -> CADENA_DE_CARACTERES . TO tuplaElemento
    (79) mapsElemento -> CADENA_DE_CARACTERES . TO tuplaElemento COMA mapsElemento

    TO              shift and go to state 171


state 128

    (129) expLogicas -> boolID opLogico boolID .

    ID              reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    PRINT           reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    PRINTLN         reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    READLINE        reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    NEGATION        reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    FUN             reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    IF              reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    FOR             reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    VAR             reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    VAL             reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    ENTERO          reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    DECIMAL         reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    CADENA_DE_CARACTERES reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    DOUBLE          reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    MAPOF           reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    TRUE            reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    FALSE           reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    LISTOF          reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    SETOF           reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    $end            reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    DLLAVE          reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    RETURN          reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    DPAR            reduce using rule 129 (expLogicas -> boolID opLogico boolID .)
    ELSE            reduce using rule 129 (expLogicas -> boolID opLogico boolID .)


state 129

    (18) fun -> FUN ID IPAR . DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> FUN ID IPAR . entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> FUN ID IPAR . DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> FUN ID IPAR . entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> FUN ID IPAR . entrada_fun DPAR EQUALS return
    (40) entrada_fun -> . ID DOSPUNTOS tipos
    (41) entrada_fun -> . ID DOSPUNTOS tipos COMA entrada_fun

    DPAR            shift and go to state 173
    ID              shift and go to state 172

    entrada_fun                    shift and go to state 174

state 130

    (27) if -> IF IPAR entradaIf . DPAR ILLAVE algoritmo DLLAVE
    (28) if -> IF IPAR entradaIf . DPAR return
    (29) if -> IF IPAR entradaIf . DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> IF IPAR entradaIf . DPAR return else

    DPAR            shift and go to state 175


state 131

    (33) entradaIf -> valorBoolean .
    (132) boolID -> valorBoolean .
    (121) elementoRelacional -> valorBoolean .

    DPAR            reduce using rule 33 (entradaIf -> valorBoolean .)
    AND             reduce using rule 132 (boolID -> valorBoolean .)
    OR              reduce using rule 132 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)


state 132

    (34) entradaIf -> expLogicas .

    DPAR            reduce using rule 34 (entradaIf -> expLogicas .)


state 133

    (35) entradaIf -> expresionRelacional .

    DPAR            reduce using rule 35 (entradaIf -> expresionRelacional .)


state 134

    (131) boolID -> ID .
    (120) elementoRelacional -> ID .

    AND             reduce using rule 131 (boolID -> ID .)
    OR              reduce using rule 131 (boolID -> ID .)
    EQUAL           reduce using rule 120 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 120 (elementoRelacional -> ID .)
    LARGE           reduce using rule 120 (elementoRelacional -> ID .)
    SMALL           reduce using rule 120 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 120 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 120 (elementoRelacional -> ID .)


state 135

    (23) for -> FOR condicionFor ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (46) iniVariable -> . variable ID tipoDeDato
    (47) iniVariable -> . variable ID EQUALS valor
    (48) iniVariable -> . variable ID EQUALS valorBoolean
    (49) iniVariable -> . variable ID EQUALS expLogicas
    (50) iniVariable -> . variable ID EQUALS expresionRelacional
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (51) imprimir -> . PRINT IPAR elementosPrint DPAR
    (52) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (100) readline -> . READLINE IPAR DPAR
    (101) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (102) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (103) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (87) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (80) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (18) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (27) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> . IF IPAR entradaIf DPAR return
    (29) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> . IF IPAR entradaIf DPAR return else
    (23) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (98) variable -> . VAR
    (99) variable -> . VAL
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 19
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 36
    FUN             shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    VAR             shift and go to state 40
    VAL             shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45
    MAPOF           shift and go to state 28
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27

    algoritmo                      shift and go to state 176
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    variable                       shift and go to state 18
    valor                          shift and go to state 20
    valorBoolean                   shift and go to state 21
    elementoRelacional             shift and go to state 22
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    boolID                         shift and go to state 35
    coleccion                      shift and go to state 46

state 136

    (24) condicionFor -> IPAR ID . IN ID DPAR
    (25) condicionFor -> IPAR ID . IN ENTERO PUNTO PUNTO ENTERO DPAR
    (26) condicionFor -> IPAR ID . IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    IN              shift and go to state 177


state 137

    (69) size -> coleccion PUNTO SIZE .

    ID              reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    PRINT           reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    PRINTLN         reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    READLINE        reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    NEGATION        reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    FUN             reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    IF              reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    FOR             reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    VAR             reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    VAL             reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    ENTERO          reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    DECIMAL         reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    CADENA_DE_CARACTERES reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    DOUBLE          reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    MAPOF           reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    TRUE            reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    FALSE           reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    LISTOF          reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    SETOF           reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    $end            reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    DLLAVE          reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    RETURN          reduce using rule 69 (size -> coleccion PUNTO SIZE .)
    DPAR            reduce using rule 69 (size -> coleccion PUNTO SIZE .)


state 138

    (71) isEmpty -> coleccion PUNTO ISEMPTY . IPAR DPAR

    IPAR            shift and go to state 178


state 139

    (47) iniVariable -> variable ID EQUALS valor .

    ID              reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    PRINT           reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    PRINTLN         reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    READLINE        reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    NEGATION        reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    FUN             reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    IF              reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    FOR             reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    VAR             reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    VAL             reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    ENTERO          reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    DECIMAL         reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    CADENA_DE_CARACTERES reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    DOUBLE          reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    MAPOF           reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    TRUE            reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    FALSE           reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    LISTOF          reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    SETOF           reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    $end            reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    DLLAVE          reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)
    RETURN          reduce using rule 47 (iniVariable -> variable ID EQUALS valor .)


state 140

    (48) iniVariable -> variable ID EQUALS valorBoolean .
    (132) boolID -> valorBoolean .
    (121) elementoRelacional -> valorBoolean .

    ID              reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    PRINT           reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    PRINTLN         reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    READLINE        reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    NEGATION        reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    FUN             reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    IF              reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    FOR             reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    VAR             reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    VAL             reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    ENTERO          reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    DECIMAL         reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    DOUBLE          reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    MAPOF           reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    TRUE            reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    FALSE           reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    LISTOF          reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    SETOF           reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    $end            reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    DLLAVE          reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    RETURN          reduce using rule 48 (iniVariable -> variable ID EQUALS valorBoolean .)
    AND             reduce using rule 132 (boolID -> valorBoolean .)
    OR              reduce using rule 132 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)


state 141

    (49) iniVariable -> variable ID EQUALS expLogicas .

    ID              reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    PRINT           reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    PRINTLN         reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    READLINE        reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    NEGATION        reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    FUN             reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    IF              reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    FOR             reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    VAR             reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    VAL             reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    ENTERO          reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    DECIMAL         reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    DOUBLE          reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    MAPOF           reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    TRUE            reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    FALSE           reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    LISTOF          reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    SETOF           reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    $end            reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    DLLAVE          reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)
    RETURN          reduce using rule 49 (iniVariable -> variable ID EQUALS expLogicas .)


state 142

    (50) iniVariable -> variable ID EQUALS expresionRelacional .

    ID              reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    PRINT           reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    PRINTLN         reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    READLINE        reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    NEGATION        reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    FUN             reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    IF              reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    FOR             reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    VAR             reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    VAL             reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    ENTERO          reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    DECIMAL         reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    DOUBLE          reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    MAPOF           reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    TRUE            reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    FALSE           reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    LISTOF          reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    SETOF           reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    $end            reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    DLLAVE          reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)
    RETURN          reduce using rule 50 (iniVariable -> variable ID EQUALS expresionRelacional .)


state 143

    (101) readline -> variable ID EQUALS READLINE . IPAR DPAR

    IPAR            shift and go to state 179


state 144

    (87) list -> variable ID EQUALS LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 180


state 145

    (86) conjuntos -> variable ID EQUALS SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 181


state 146

    (77) maps -> variable ID EQUALS MAPOF . IPAR mapsElemento DPAR

    IPAR            shift and go to state 182


state 147

    (104) tipoDeDato -> DOSPUNTOS INT . EQUALS ENTERO

    EQUALS          shift and go to state 183


state 148

    (105) tipoDeDato -> DOSPUNTOS DOUBLE . EQUALS DECIMAL

    EQUALS          shift and go to state 184


state 149

    (106) tipoDeDato -> DOSPUNTOS STRING . EQUALS CADENA_DE_CARACTERES

    EQUALS          shift and go to state 185


state 150

    (107) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS valorBoolean
    (108) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS expLogicas
    (109) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS expresionRelacional

    EQUALS          shift and go to state 186


state 151

    (80) tupla -> variable IPAR ID COMA . ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    ID              shift and go to state 187


state 152

    (102) firstAndCap -> ID PUNTO FIRST IPAR . DPAR

    DPAR            shift and go to state 188


state 153

    (103) firstAndCap -> ID PUNTO CAPITALIZE IPAR . DPAR

    DPAR            shift and go to state 189


state 154

    (67) slice -> ID PUNTO SLICE IPAR . ENTERO PUNTO PUNTO ENTERO DPAR

    ENTERO          shift and go to state 190


state 155

    (70) isEmpty -> ID PUNTO ISEMPTY IPAR . DPAR

    DPAR            shift and go to state 191


state 156

    (72) getMap -> ID PUNTO GET IPAR . CADENA_DE_CARACTERES DPAR

    CADENA_DE_CARACTERES shift and go to state 192


state 157

    (66) indexCol -> ID ICOR ID DCOR .

    ID              reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    PRINT           reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    PRINTLN         reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    READLINE        reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    NEGATION        reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    FUN             reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    IF              reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    FOR             reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    VAR             reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    VAL             reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    ENTERO          reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    DECIMAL         reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    CADENA_DE_CARACTERES reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    DOUBLE          reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    MAPOF           reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    TRUE            reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    FALSE           reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    LISTOF          reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    SETOF           reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    $end            reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    DLLAVE          reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    RETURN          reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)
    DPAR            reduce using rule 66 (indexCol -> ID ICOR ID DCOR .)


state 158

    (65) indexCol -> ID ICOR ENTERO DCOR .

    ID              reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    PRINT           reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    PRINTLN         reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    READLINE        reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    NEGATION        reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    FUN             reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    IF              reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    FOR             reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    VAR             reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    VAL             reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    ENTERO          reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    DECIMAL         reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    CADENA_DE_CARACTERES reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    DOUBLE          reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    MAPOF           reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    TRUE            reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    FALSE           reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    LISTOF          reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    SETOF           reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    $end            reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    DLLAVE          reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    RETURN          reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)
    DPAR            reduce using rule 65 (indexCol -> ID ICOR ENTERO DCOR .)


state 159

    (51) imprimir -> PRINT IPAR elementosPrint DPAR .

    ID              reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    PRINT           reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    PRINTLN         reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    READLINE        reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    NEGATION        reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    FUN             reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    IF              reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    FOR             reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    VAR             reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    VAL             reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    ENTERO          reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    DECIMAL         reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    CADENA_DE_CARACTERES reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    DOUBLE          reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    MAPOF           reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    TRUE            reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    FALSE           reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    LISTOF          reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    SETOF           reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    $end            reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    DLLAVE          reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    RETURN          reduce using rule 51 (imprimir -> PRINT IPAR elementosPrint DPAR .)


state 160

    (112) coleccion -> MAPOF IPAR . mapsElemento DPAR
    (76) funMap -> MAPOF IPAR . mapsElemento DPAR PUNTO VALUES
    (73) getMap -> MAPOF IPAR . mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (78) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (79) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 127

    mapsElemento                   shift and go to state 193

state 161

    (67) slice -> ID PUNTO . SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> ID PUNTO . SIZE
    (70) isEmpty -> ID PUNTO . ISEMPTY IPAR DPAR
    (74) funMap -> ID PUNTO . KEYS
    (75) funMap -> ID PUNTO . VALUES
    (72) getMap -> ID PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    SLICE           shift and go to state 93
    SIZE            shift and go to state 94
    ISEMPTY         shift and go to state 95
    KEYS            shift and go to state 96
    VALUES          shift and go to state 97
    GET             shift and go to state 98


state 162

    (52) imprimir -> PRINTLN IPAR elementosPrint DPAR .

    ID              reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    PRINT           reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    PRINTLN         reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    READLINE        reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    NEGATION        reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    FUN             reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    IF              reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    FOR             reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    VAR             reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    VAL             reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    ENTERO          reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    DECIMAL         reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    CADENA_DE_CARACTERES reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    DOUBLE          reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    MAPOF           reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    TRUE            reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    FALSE           reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    LISTOF          reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    SETOF           reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    $end            reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    DLLAVE          reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    RETURN          reduce using rule 52 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)


state 163

    (96) listElementos -> LISTOF IPAR . listElementos DPAR
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    listElementos                  shift and go to state 194
    valor                          shift and go to state 119
    valorBoolean                   shift and go to state 121
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 164

    (110) coleccion -> LISTOF IPAR listElementos DPAR .

    PUNTO           reduce using rule 110 (coleccion -> LISTOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 110 (coleccion -> LISTOF IPAR listElementos DPAR .)


state 165

    (94) listElementos -> valor COMA . listElementos
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    valor                          shift and go to state 119
    listElementos                  shift and go to state 195
    valorBoolean                   shift and go to state 121
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 166

    (95) listElementos -> ID COMA . listElementos
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    listElementos                  shift and go to state 196
    valor                          shift and go to state 119
    valorBoolean                   shift and go to state 121
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 167

    (93) listElementos -> valorBoolean COMA . listElementos
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    valorBoolean                   shift and go to state 121
    listElementos                  shift and go to state 197
    valor                          shift and go to state 119
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 168

    (97) listElementos -> SETOF IPAR . listElementos DPAR
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    listElementos                  shift and go to state 198
    valor                          shift and go to state 119
    valorBoolean                   shift and go to state 121
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 169

    (111) coleccion -> SETOF IPAR listElementos DPAR .

    PUNTO           reduce using rule 111 (coleccion -> SETOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 111 (coleccion -> SETOF IPAR listElementos DPAR .)


state 170

    (76) funMap -> MAPOF IPAR mapsElemento DPAR . PUNTO VALUES
    (73) getMap -> MAPOF IPAR mapsElemento DPAR . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (112) coleccion -> MAPOF IPAR mapsElemento DPAR .

  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO           shift and go to state 199

  ! PUNTO           [ reduce using rule 112 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]


state 171

    (78) mapsElemento -> CADENA_DE_CARACTERES TO . tuplaElemento
    (79) mapsElemento -> CADENA_DE_CARACTERES TO . tuplaElemento COMA mapsElemento
    (81) tuplaElemento -> . valor
    (82) tuplaElemento -> . ID
    (83) tuplaElemento -> . valorBoolean
    (84) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (85) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE

    ID              shift and go to state 202
    LISTOF          shift and go to state 204
    SETOF           shift and go to state 205
    ENTERO          shift and go to state 90
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    tuplaElemento                  shift and go to state 200
    valor                          shift and go to state 201
    valorBoolean                   shift and go to state 203

state 172

    (40) entrada_fun -> ID . DOSPUNTOS tipos
    (41) entrada_fun -> ID . DOSPUNTOS tipos COMA entrada_fun

    DOSPUNTOS       shift and go to state 206


state 173

    (18) fun -> FUN ID IPAR DPAR . ILLAVE algoritmo DLLAVE
    (20) fun -> FUN ID IPAR DPAR . DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE

    ILLAVE          shift and go to state 207
    DOSPUNTOS       shift and go to state 208


state 174

    (19) fun -> FUN ID IPAR entrada_fun . DPAR ILLAVE algoritmo DLLAVE
    (21) fun -> FUN ID IPAR entrada_fun . DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> FUN ID IPAR entrada_fun . DPAR EQUALS return

    DPAR            shift and go to state 209


state 175

    (27) if -> IF IPAR entradaIf DPAR . ILLAVE algoritmo DLLAVE
    (28) if -> IF IPAR entradaIf DPAR . return
    (29) if -> IF IPAR entradaIf DPAR . ILLAVE algoritmo DLLAVE else
    (30) if -> IF IPAR entradaIf DPAR . return else
    (36) return -> . expLogicas
    (37) return -> . expresion
    (38) return -> . valorBoolean
    (39) return -> . expresionRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean

    ILLAVE          shift and go to state 210
    NEGATION        shift and go to state 36
    ID              shift and go to state 216
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45

    return                         shift and go to state 211
    expLogicas                     shift and go to state 212
    expresion                      shift and go to state 213
    valorBoolean                   shift and go to state 214
    expresionRelacional            shift and go to state 215
    boolID                         shift and go to state 35
    valor                          shift and go to state 20
    elementoRelacional             shift and go to state 22

state 176

    (23) for -> FOR condicionFor ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 217


state 177

    (24) condicionFor -> IPAR ID IN . ID DPAR
    (25) condicionFor -> IPAR ID IN . ENTERO PUNTO PUNTO ENTERO DPAR
    (26) condicionFor -> IPAR ID IN . ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    ID              shift and go to state 218
    ENTERO          shift and go to state 219


state 178

    (71) isEmpty -> coleccion PUNTO ISEMPTY IPAR . DPAR

    DPAR            shift and go to state 220


state 179

    (101) readline -> variable ID EQUALS READLINE IPAR . DPAR

    DPAR            shift and go to state 221


state 180

    (87) list -> variable ID EQUALS LISTOF IPAR . listElementos DPAR
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    listElementos                  shift and go to state 222
    valor                          shift and go to state 119
    valorBoolean                   shift and go to state 121
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 181

    (86) conjuntos -> variable ID EQUALS SETOF IPAR . listElementos DPAR
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    listElementos                  shift and go to state 223
    valor                          shift and go to state 119
    valorBoolean                   shift and go to state 121
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 182

    (77) maps -> variable ID EQUALS MAPOF IPAR . mapsElemento DPAR
    (78) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (79) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 127

    mapsElemento                   shift and go to state 224

state 183

    (104) tipoDeDato -> DOSPUNTOS INT EQUALS . ENTERO

    ENTERO          shift and go to state 225


state 184

    (105) tipoDeDato -> DOSPUNTOS DOUBLE EQUALS . DECIMAL

    DECIMAL         shift and go to state 226


state 185

    (106) tipoDeDato -> DOSPUNTOS STRING EQUALS . CADENA_DE_CARACTERES

    CADENA_DE_CARACTERES shift and go to state 227


state 186

    (107) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . valorBoolean
    (108) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . expLogicas
    (109) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . expresionRelacional
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean

    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    ID              shift and go to state 134
    ENTERO          shift and go to state 103
    DOUBLE          shift and go to state 45

    valorBoolean                   shift and go to state 228
    expLogicas                     shift and go to state 229
    expresionRelacional            shift and go to state 230
    boolID                         shift and go to state 35
    elementoRelacional             shift and go to state 22

state 187

    (80) tupla -> variable IPAR ID COMA ID . DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    DPAR            shift and go to state 231


state 188

    (102) firstAndCap -> ID PUNTO FIRST IPAR DPAR .

    ID              reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    PRINT           reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    PRINTLN         reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    READLINE        reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    NEGATION        reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    FUN             reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    IF              reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    FOR             reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    VAR             reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    VAL             reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    ENTERO          reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    DECIMAL         reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    DOUBLE          reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    MAPOF           reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    TRUE            reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    FALSE           reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    LISTOF          reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    SETOF           reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    $end            reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    DLLAVE          reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    RETURN          reduce using rule 102 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)


state 189

    (103) firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .

    ID              reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    PRINT           reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    PRINTLN         reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    READLINE        reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    NEGATION        reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    FUN             reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    IF              reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    FOR             reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    VAR             reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    VAL             reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    ENTERO          reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    DECIMAL         reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    DOUBLE          reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    MAPOF           reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    TRUE            reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    FALSE           reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    LISTOF          reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    SETOF           reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    $end            reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    DLLAVE          reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    RETURN          reduce using rule 103 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)


state 190

    (67) slice -> ID PUNTO SLICE IPAR ENTERO . PUNTO PUNTO ENTERO DPAR

    PUNTO           shift and go to state 232


state 191

    (70) isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .

    ID              reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    PRINT           reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    PRINTLN         reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    READLINE        reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    NEGATION        reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    FUN             reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    IF              reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    FOR             reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    VAR             reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    VAL             reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    ENTERO          reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DECIMAL         reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DOUBLE          reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    MAPOF           reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    TRUE            reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    FALSE           reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    LISTOF          reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    SETOF           reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    $end            reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DLLAVE          reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    RETURN          reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DPAR            reduce using rule 70 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)


state 192

    (72) getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES . DPAR

    DPAR            shift and go to state 233


state 193

    (112) coleccion -> MAPOF IPAR mapsElemento . DPAR
    (76) funMap -> MAPOF IPAR mapsElemento . DPAR PUNTO VALUES
    (73) getMap -> MAPOF IPAR mapsElemento . DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR

    DPAR            shift and go to state 234


state 194

    (96) listElementos -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 235


state 195

    (94) listElementos -> valor COMA listElementos .

    DPAR            reduce using rule 94 (listElementos -> valor COMA listElementos .)


state 196

    (95) listElementos -> ID COMA listElementos .

    DPAR            reduce using rule 95 (listElementos -> ID COMA listElementos .)


state 197

    (93) listElementos -> valorBoolean COMA listElementos .

    DPAR            reduce using rule 93 (listElementos -> valorBoolean COMA listElementos .)


state 198

    (97) listElementos -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 236


state 199

    (76) funMap -> MAPOF IPAR mapsElemento DPAR PUNTO . VALUES
    (73) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    VALUES          shift and go to state 237
    GET             shift and go to state 238


state 200

    (78) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento .
    (79) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento . COMA mapsElemento

    DPAR            reduce using rule 78 (mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento .)
    COMA            shift and go to state 239


state 201

    (81) tuplaElemento -> valor .

    COMA            reduce using rule 81 (tuplaElemento -> valor .)
    DPAR            reduce using rule 81 (tuplaElemento -> valor .)


state 202

    (82) tuplaElemento -> ID .

    COMA            reduce using rule 82 (tuplaElemento -> ID .)
    DPAR            reduce using rule 82 (tuplaElemento -> ID .)


state 203

    (83) tuplaElemento -> valorBoolean .

    COMA            reduce using rule 83 (tuplaElemento -> valorBoolean .)
    DPAR            reduce using rule 83 (tuplaElemento -> valorBoolean .)


state 204

    (84) tuplaElemento -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 240


state 205

    (85) tuplaElemento -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 241


state 206

    (40) entrada_fun -> ID DOSPUNTOS . tipos
    (41) entrada_fun -> ID DOSPUNTOS . tipos COMA entrada_fun
    (42) tipos -> . INT
    (43) tipos -> . DOUBLE
    (44) tipos -> . BOOLEAN
    (45) tipos -> . STRING

    INT             shift and go to state 243
    DOUBLE          shift and go to state 244
    BOOLEAN         shift and go to state 245
    STRING          shift and go to state 246

    tipos                          shift and go to state 242

state 207

    (18) fun -> FUN ID IPAR DPAR ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (46) iniVariable -> . variable ID tipoDeDato
    (47) iniVariable -> . variable ID EQUALS valor
    (48) iniVariable -> . variable ID EQUALS valorBoolean
    (49) iniVariable -> . variable ID EQUALS expLogicas
    (50) iniVariable -> . variable ID EQUALS expresionRelacional
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (51) imprimir -> . PRINT IPAR elementosPrint DPAR
    (52) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (100) readline -> . READLINE IPAR DPAR
    (101) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (102) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (103) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (87) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (80) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (18) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (27) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> . IF IPAR entradaIf DPAR return
    (29) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> . IF IPAR entradaIf DPAR return else
    (23) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (98) variable -> . VAR
    (99) variable -> . VAL
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 19
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 36
    FUN             shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    VAR             shift and go to state 40
    VAL             shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45
    MAPOF           shift and go to state 28
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27

    algoritmo                      shift and go to state 247
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    variable                       shift and go to state 18
    valor                          shift and go to state 20
    valorBoolean                   shift and go to state 21
    elementoRelacional             shift and go to state 22
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    boolID                         shift and go to state 35
    coleccion                      shift and go to state 46

state 208

    (20) fun -> FUN ID IPAR DPAR DOSPUNTOS . tipos ILLAVE algoritmo RETURN return DLLAVE
    (42) tipos -> . INT
    (43) tipos -> . DOUBLE
    (44) tipos -> . BOOLEAN
    (45) tipos -> . STRING

    INT             shift and go to state 243
    DOUBLE          shift and go to state 244
    BOOLEAN         shift and go to state 245
    STRING          shift and go to state 246

    tipos                          shift and go to state 248

state 209

    (19) fun -> FUN ID IPAR entrada_fun DPAR . ILLAVE algoritmo DLLAVE
    (21) fun -> FUN ID IPAR entrada_fun DPAR . DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> FUN ID IPAR entrada_fun DPAR . EQUALS return

    ILLAVE          shift and go to state 249
    DOSPUNTOS       shift and go to state 250
    EQUALS          shift and go to state 251


state 210

    (27) if -> IF IPAR entradaIf DPAR ILLAVE . algoritmo DLLAVE
    (29) if -> IF IPAR entradaIf DPAR ILLAVE . algoritmo DLLAVE else
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (46) iniVariable -> . variable ID tipoDeDato
    (47) iniVariable -> . variable ID EQUALS valor
    (48) iniVariable -> . variable ID EQUALS valorBoolean
    (49) iniVariable -> . variable ID EQUALS expLogicas
    (50) iniVariable -> . variable ID EQUALS expresionRelacional
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (51) imprimir -> . PRINT IPAR elementosPrint DPAR
    (52) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (100) readline -> . READLINE IPAR DPAR
    (101) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (102) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (103) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (87) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (80) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (18) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (27) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> . IF IPAR entradaIf DPAR return
    (29) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> . IF IPAR entradaIf DPAR return else
    (23) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (98) variable -> . VAR
    (99) variable -> . VAL
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 19
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 36
    FUN             shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    VAR             shift and go to state 40
    VAL             shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45
    MAPOF           shift and go to state 28
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27

    algoritmo                      shift and go to state 252
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    variable                       shift and go to state 18
    valor                          shift and go to state 20
    valorBoolean                   shift and go to state 21
    elementoRelacional             shift and go to state 22
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    boolID                         shift and go to state 35
    coleccion                      shift and go to state 46

state 211

    (28) if -> IF IPAR entradaIf DPAR return .
    (30) if -> IF IPAR entradaIf DPAR return . else
    (31) else -> . ELSE ILLAVE algoritmo DLLAVE
    (32) else -> . ELSE return

    ID              reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    PRINT           reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    PRINTLN         reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    READLINE        reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    NEGATION        reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    FUN             reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    IF              reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    FOR             reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    VAR             reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    VAL             reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    ENTERO          reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    DECIMAL         reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    CADENA_DE_CARACTERES reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    DOUBLE          reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    MAPOF           reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    TRUE            reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    FALSE           reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    LISTOF          reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    SETOF           reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    $end            reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    DLLAVE          reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    RETURN          reduce using rule 28 (if -> IF IPAR entradaIf DPAR return .)
    ELSE            shift and go to state 254

    else                           shift and go to state 253

state 212

    (36) return -> expLogicas .

    ELSE            reduce using rule 36 (return -> expLogicas .)
    ID              reduce using rule 36 (return -> expLogicas .)
    PRINT           reduce using rule 36 (return -> expLogicas .)
    PRINTLN         reduce using rule 36 (return -> expLogicas .)
    READLINE        reduce using rule 36 (return -> expLogicas .)
    NEGATION        reduce using rule 36 (return -> expLogicas .)
    FUN             reduce using rule 36 (return -> expLogicas .)
    IF              reduce using rule 36 (return -> expLogicas .)
    FOR             reduce using rule 36 (return -> expLogicas .)
    VAR             reduce using rule 36 (return -> expLogicas .)
    VAL             reduce using rule 36 (return -> expLogicas .)
    ENTERO          reduce using rule 36 (return -> expLogicas .)
    DECIMAL         reduce using rule 36 (return -> expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 36 (return -> expLogicas .)
    DOUBLE          reduce using rule 36 (return -> expLogicas .)
    MAPOF           reduce using rule 36 (return -> expLogicas .)
    TRUE            reduce using rule 36 (return -> expLogicas .)
    FALSE           reduce using rule 36 (return -> expLogicas .)
    LISTOF          reduce using rule 36 (return -> expLogicas .)
    SETOF           reduce using rule 36 (return -> expLogicas .)
    $end            reduce using rule 36 (return -> expLogicas .)
    DLLAVE          reduce using rule 36 (return -> expLogicas .)
    RETURN          reduce using rule 36 (return -> expLogicas .)


state 213

    (37) return -> expresion .

    ELSE            reduce using rule 37 (return -> expresion .)
    ID              reduce using rule 37 (return -> expresion .)
    PRINT           reduce using rule 37 (return -> expresion .)
    PRINTLN         reduce using rule 37 (return -> expresion .)
    READLINE        reduce using rule 37 (return -> expresion .)
    NEGATION        reduce using rule 37 (return -> expresion .)
    FUN             reduce using rule 37 (return -> expresion .)
    IF              reduce using rule 37 (return -> expresion .)
    FOR             reduce using rule 37 (return -> expresion .)
    VAR             reduce using rule 37 (return -> expresion .)
    VAL             reduce using rule 37 (return -> expresion .)
    ENTERO          reduce using rule 37 (return -> expresion .)
    DECIMAL         reduce using rule 37 (return -> expresion .)
    CADENA_DE_CARACTERES reduce using rule 37 (return -> expresion .)
    DOUBLE          reduce using rule 37 (return -> expresion .)
    MAPOF           reduce using rule 37 (return -> expresion .)
    TRUE            reduce using rule 37 (return -> expresion .)
    FALSE           reduce using rule 37 (return -> expresion .)
    LISTOF          reduce using rule 37 (return -> expresion .)
    SETOF           reduce using rule 37 (return -> expresion .)
    $end            reduce using rule 37 (return -> expresion .)
    DLLAVE          reduce using rule 37 (return -> expresion .)
    RETURN          reduce using rule 37 (return -> expresion .)


state 214

    (38) return -> valorBoolean .
    (132) boolID -> valorBoolean .
    (121) elementoRelacional -> valorBoolean .

    ELSE            reduce using rule 38 (return -> valorBoolean .)
    ID              reduce using rule 38 (return -> valorBoolean .)
    PRINT           reduce using rule 38 (return -> valorBoolean .)
    PRINTLN         reduce using rule 38 (return -> valorBoolean .)
    READLINE        reduce using rule 38 (return -> valorBoolean .)
    NEGATION        reduce using rule 38 (return -> valorBoolean .)
    FUN             reduce using rule 38 (return -> valorBoolean .)
    IF              reduce using rule 38 (return -> valorBoolean .)
    FOR             reduce using rule 38 (return -> valorBoolean .)
    VAR             reduce using rule 38 (return -> valorBoolean .)
    VAL             reduce using rule 38 (return -> valorBoolean .)
    ENTERO          reduce using rule 38 (return -> valorBoolean .)
    DECIMAL         reduce using rule 38 (return -> valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 38 (return -> valorBoolean .)
    DOUBLE          reduce using rule 38 (return -> valorBoolean .)
    MAPOF           reduce using rule 38 (return -> valorBoolean .)
    TRUE            reduce using rule 38 (return -> valorBoolean .)
    FALSE           reduce using rule 38 (return -> valorBoolean .)
    LISTOF          reduce using rule 38 (return -> valorBoolean .)
    SETOF           reduce using rule 38 (return -> valorBoolean .)
    $end            reduce using rule 38 (return -> valorBoolean .)
    DLLAVE          reduce using rule 38 (return -> valorBoolean .)
    RETURN          reduce using rule 38 (return -> valorBoolean .)
    AND             reduce using rule 132 (boolID -> valorBoolean .)
    OR              reduce using rule 132 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)


state 215

    (39) return -> expresionRelacional .

    ELSE            reduce using rule 39 (return -> expresionRelacional .)
    ID              reduce using rule 39 (return -> expresionRelacional .)
    PRINT           reduce using rule 39 (return -> expresionRelacional .)
    PRINTLN         reduce using rule 39 (return -> expresionRelacional .)
    READLINE        reduce using rule 39 (return -> expresionRelacional .)
    NEGATION        reduce using rule 39 (return -> expresionRelacional .)
    FUN             reduce using rule 39 (return -> expresionRelacional .)
    IF              reduce using rule 39 (return -> expresionRelacional .)
    FOR             reduce using rule 39 (return -> expresionRelacional .)
    VAR             reduce using rule 39 (return -> expresionRelacional .)
    VAL             reduce using rule 39 (return -> expresionRelacional .)
    ENTERO          reduce using rule 39 (return -> expresionRelacional .)
    DECIMAL         reduce using rule 39 (return -> expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 39 (return -> expresionRelacional .)
    DOUBLE          reduce using rule 39 (return -> expresionRelacional .)
    MAPOF           reduce using rule 39 (return -> expresionRelacional .)
    TRUE            reduce using rule 39 (return -> expresionRelacional .)
    FALSE           reduce using rule 39 (return -> expresionRelacional .)
    LISTOF          reduce using rule 39 (return -> expresionRelacional .)
    SETOF           reduce using rule 39 (return -> expresionRelacional .)
    $end            reduce using rule 39 (return -> expresionRelacional .)
    DLLAVE          reduce using rule 39 (return -> expresionRelacional .)
    RETURN          reduce using rule 39 (return -> expresionRelacional .)


state 216

    (114) expresion -> ID .
    (116) expresion -> ID . operadorMat expresion
    (131) boolID -> ID .
    (120) elementoRelacional -> ID .
    (122) operadorMat -> . PLUS
    (123) operadorMat -> . MINUS
    (124) operadorMat -> . TIMES
    (125) operadorMat -> . DIVIDE

    ELSE            reduce using rule 114 (expresion -> ID .)
    ID              reduce using rule 114 (expresion -> ID .)
    PRINT           reduce using rule 114 (expresion -> ID .)
    PRINTLN         reduce using rule 114 (expresion -> ID .)
    READLINE        reduce using rule 114 (expresion -> ID .)
    NEGATION        reduce using rule 114 (expresion -> ID .)
    FUN             reduce using rule 114 (expresion -> ID .)
    IF              reduce using rule 114 (expresion -> ID .)
    FOR             reduce using rule 114 (expresion -> ID .)
    VAR             reduce using rule 114 (expresion -> ID .)
    VAL             reduce using rule 114 (expresion -> ID .)
    ENTERO          reduce using rule 114 (expresion -> ID .)
    DECIMAL         reduce using rule 114 (expresion -> ID .)
    CADENA_DE_CARACTERES reduce using rule 114 (expresion -> ID .)
    DOUBLE          reduce using rule 114 (expresion -> ID .)
    MAPOF           reduce using rule 114 (expresion -> ID .)
    TRUE            reduce using rule 114 (expresion -> ID .)
    FALSE           reduce using rule 114 (expresion -> ID .)
    LISTOF          reduce using rule 114 (expresion -> ID .)
    SETOF           reduce using rule 114 (expresion -> ID .)
    $end            reduce using rule 114 (expresion -> ID .)
    DLLAVE          reduce using rule 114 (expresion -> ID .)
    RETURN          reduce using rule 114 (expresion -> ID .)
    AND             reduce using rule 131 (boolID -> ID .)
    OR              reduce using rule 131 (boolID -> ID .)
    EQUAL           reduce using rule 120 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 120 (elementoRelacional -> ID .)
    LARGE           reduce using rule 120 (elementoRelacional -> ID .)
    SMALL           reduce using rule 120 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 120 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 120 (elementoRelacional -> ID .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadorMat                    shift and go to state 52

state 217

    (23) for -> FOR condicionFor ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 23 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)


state 218

    (24) condicionFor -> IPAR ID IN ID . DPAR

    DPAR            shift and go to state 255


state 219

    (25) condicionFor -> IPAR ID IN ENTERO . PUNTO PUNTO ENTERO DPAR
    (26) condicionFor -> IPAR ID IN ENTERO . PUNTO PUNTO ENTERO STEP ENTERO DPAR

    PUNTO           shift and go to state 256


state 220

    (71) isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .

    ID              reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    PRINT           reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    PRINTLN         reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    READLINE        reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    NEGATION        reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    FUN             reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    IF              reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    FOR             reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    VAR             reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    VAL             reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    ENTERO          reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DECIMAL         reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DOUBLE          reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    MAPOF           reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    TRUE            reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    FALSE           reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    LISTOF          reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    SETOF           reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    $end            reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DLLAVE          reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    RETURN          reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DPAR            reduce using rule 71 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)


state 221

    (101) readline -> variable ID EQUALS READLINE IPAR DPAR .

    ID              reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    PRINT           reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    PRINTLN         reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    READLINE        reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    NEGATION        reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    FUN             reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    IF              reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    FOR             reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    VAR             reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    VAL             reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    ENTERO          reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    DECIMAL         reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    DOUBLE          reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    MAPOF           reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    TRUE            reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    FALSE           reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    LISTOF          reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    SETOF           reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    $end            reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    DLLAVE          reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    RETURN          reduce using rule 101 (readline -> variable ID EQUALS READLINE IPAR DPAR .)


state 222

    (87) list -> variable ID EQUALS LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 257


state 223

    (86) conjuntos -> variable ID EQUALS SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 258


state 224

    (77) maps -> variable ID EQUALS MAPOF IPAR mapsElemento . DPAR

    DPAR            shift and go to state 259


state 225

    (104) tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .

    ID              reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    PRINT           reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    PRINTLN         reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    READLINE        reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    NEGATION        reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    FUN             reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    IF              reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    FOR             reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    VAR             reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    VAL             reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    ENTERO          reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    DECIMAL         reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    DOUBLE          reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    MAPOF           reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    TRUE            reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    FALSE           reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    LISTOF          reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    SETOF           reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    $end            reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    DLLAVE          reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    RETURN          reduce using rule 104 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)


state 226

    (105) tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .

    ID              reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    PRINT           reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    PRINTLN         reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    READLINE        reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    NEGATION        reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    FUN             reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    IF              reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    FOR             reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    VAR             reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    VAL             reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    ENTERO          reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    DECIMAL         reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    CADENA_DE_CARACTERES reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    DOUBLE          reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    MAPOF           reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    TRUE            reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    FALSE           reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    LISTOF          reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    SETOF           reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    $end            reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    DLLAVE          reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    RETURN          reduce using rule 105 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)


state 227

    (106) tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .

    ID              reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    PRINT           reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    PRINTLN         reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    READLINE        reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    NEGATION        reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    FUN             reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    IF              reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    FOR             reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    VAR             reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    VAL             reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    ENTERO          reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    DECIMAL         reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    CADENA_DE_CARACTERES reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    DOUBLE          reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    MAPOF           reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    TRUE            reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    FALSE           reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    LISTOF          reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    SETOF           reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    $end            reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    DLLAVE          reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    RETURN          reduce using rule 106 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)


state 228

    (107) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .
    (132) boolID -> valorBoolean .
    (121) elementoRelacional -> valorBoolean .

    ID              reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    PRINT           reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    PRINTLN         reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    READLINE        reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    NEGATION        reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    FUN             reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    IF              reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    FOR             reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    VAR             reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    VAL             reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    ENTERO          reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    DECIMAL         reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    DOUBLE          reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    MAPOF           reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    TRUE            reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    FALSE           reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    LISTOF          reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    SETOF           reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    $end            reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    DLLAVE          reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    RETURN          reduce using rule 107 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    AND             reduce using rule 132 (boolID -> valorBoolean .)
    OR              reduce using rule 132 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 121 (elementoRelacional -> valorBoolean .)


state 229

    (108) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .

    ID              reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    PRINT           reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    PRINTLN         reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    READLINE        reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    NEGATION        reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    FUN             reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    IF              reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    FOR             reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    VAR             reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    VAL             reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    ENTERO          reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    DECIMAL         reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    DOUBLE          reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    MAPOF           reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    TRUE            reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    FALSE           reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    LISTOF          reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    SETOF           reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    $end            reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    DLLAVE          reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    RETURN          reduce using rule 108 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)


state 230

    (109) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .

    ID              reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    PRINT           reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    PRINTLN         reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    READLINE        reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    NEGATION        reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    FUN             reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    IF              reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    FOR             reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    VAR             reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    VAL             reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    ENTERO          reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    DECIMAL         reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    DOUBLE          reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    MAPOF           reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    TRUE            reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    FALSE           reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    LISTOF          reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    SETOF           reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    $end            reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    DLLAVE          reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    RETURN          reduce using rule 109 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)


state 231

    (80) tupla -> variable IPAR ID COMA ID DPAR . EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    EQUALS          shift and go to state 260


state 232

    (67) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO . PUNTO ENTERO DPAR

    PUNTO           shift and go to state 261


state 233

    (72) getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .

    ID              reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINT           reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINTLN         reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    READLINE        reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    NEGATION        reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FUN             reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    IF              reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FOR             reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAR             reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAL             reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    ENTERO          reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DECIMAL         reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    CADENA_DE_CARACTERES reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DOUBLE          reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    MAPOF           reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    TRUE            reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FALSE           reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    LISTOF          reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    SETOF           reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    $end            reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DLLAVE          reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    RETURN          reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DPAR            reduce using rule 72 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)


state 234

    (112) coleccion -> MAPOF IPAR mapsElemento DPAR .
    (76) funMap -> MAPOF IPAR mapsElemento DPAR . PUNTO VALUES
    (73) getMap -> MAPOF IPAR mapsElemento DPAR . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR

  ! shift/reduce conflict for PUNTO resolved as shift
    DPAR            reduce using rule 112 (coleccion -> MAPOF IPAR mapsElemento DPAR .)
    PUNTO           shift and go to state 199

  ! PUNTO           [ reduce using rule 112 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]


state 235

    (96) listElementos -> LISTOF IPAR listElementos DPAR .

    DPAR            reduce using rule 96 (listElementos -> LISTOF IPAR listElementos DPAR .)


state 236

    (97) listElementos -> SETOF IPAR listElementos DPAR .

    DPAR            reduce using rule 97 (listElementos -> SETOF IPAR listElementos DPAR .)


state 237

    (76) funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .

    ID              reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    PRINT           reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    PRINTLN         reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    READLINE        reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    NEGATION        reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    FUN             reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    IF              reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    FOR             reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    VAR             reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    VAL             reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    ENTERO          reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DECIMAL         reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    CADENA_DE_CARACTERES reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DOUBLE          reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    MAPOF           reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    TRUE            reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    FALSE           reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    LISTOF          reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    SETOF           reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    $end            reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DLLAVE          reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    RETURN          reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DPAR            reduce using rule 76 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)


state 238

    (73) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET . IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 262


state 239

    (79) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA . mapsElemento
    (78) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (79) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 127

    mapsElemento                   shift and go to state 263

state 240

    (84) tuplaElemento -> LISTOF IPAR . listElementos DPAR
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    listElementos                  shift and go to state 264
    valor                          shift and go to state 119
    valorBoolean                   shift and go to state 121
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 241

    (85) tuplaElemento -> SETOF IPAR . listElementos DPAR
    (88) listElementos -> . valor
    (89) listElementos -> . ID
    (90) listElementos -> . valorBoolean
    (91) listElementos -> . expresionRelacional
    (92) listElementos -> . expLogicas
    (93) listElementos -> . valorBoolean COMA listElementos
    (94) listElementos -> . valor COMA listElementos
    (95) listElementos -> . ID COMA listElementos
    (96) listElementos -> . LISTOF IPAR listElementos DPAR
    (97) listElementos -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean

    ID              shift and go to state 120
    LISTOF          shift and go to state 117
    SETOF           shift and go to state 124
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    NEGATION        shift and go to state 36
    DOUBLE          shift and go to state 45

    listElementos                  shift and go to state 265
    valor                          shift and go to state 119
    valorBoolean                   shift and go to state 121
    expresionRelacional            shift and go to state 122
    expLogicas                     shift and go to state 123
    elementoRelacional             shift and go to state 22
    boolID                         shift and go to state 35

state 242

    (40) entrada_fun -> ID DOSPUNTOS tipos .
    (41) entrada_fun -> ID DOSPUNTOS tipos . COMA entrada_fun

    DPAR            reduce using rule 40 (entrada_fun -> ID DOSPUNTOS tipos .)
    COMA            shift and go to state 266


state 243

    (42) tipos -> INT .

    COMA            reduce using rule 42 (tipos -> INT .)
    DPAR            reduce using rule 42 (tipos -> INT .)
    ILLAVE          reduce using rule 42 (tipos -> INT .)


state 244

    (43) tipos -> DOUBLE .

    COMA            reduce using rule 43 (tipos -> DOUBLE .)
    DPAR            reduce using rule 43 (tipos -> DOUBLE .)
    ILLAVE          reduce using rule 43 (tipos -> DOUBLE .)


state 245

    (44) tipos -> BOOLEAN .

    COMA            reduce using rule 44 (tipos -> BOOLEAN .)
    DPAR            reduce using rule 44 (tipos -> BOOLEAN .)
    ILLAVE          reduce using rule 44 (tipos -> BOOLEAN .)


state 246

    (45) tipos -> STRING .

    COMA            reduce using rule 45 (tipos -> STRING .)
    DPAR            reduce using rule 45 (tipos -> STRING .)
    ILLAVE          reduce using rule 45 (tipos -> STRING .)


state 247

    (18) fun -> FUN ID IPAR DPAR ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 267


state 248

    (20) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos . ILLAVE algoritmo RETURN return DLLAVE

    ILLAVE          shift and go to state 268


state 249

    (19) fun -> FUN ID IPAR entrada_fun DPAR ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (46) iniVariable -> . variable ID tipoDeDato
    (47) iniVariable -> . variable ID EQUALS valor
    (48) iniVariable -> . variable ID EQUALS valorBoolean
    (49) iniVariable -> . variable ID EQUALS expLogicas
    (50) iniVariable -> . variable ID EQUALS expresionRelacional
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (51) imprimir -> . PRINT IPAR elementosPrint DPAR
    (52) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (100) readline -> . READLINE IPAR DPAR
    (101) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (102) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (103) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (87) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (80) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (18) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (27) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> . IF IPAR entradaIf DPAR return
    (29) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> . IF IPAR entradaIf DPAR return else
    (23) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (98) variable -> . VAR
    (99) variable -> . VAL
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 19
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 36
    FUN             shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    VAR             shift and go to state 40
    VAL             shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45
    MAPOF           shift and go to state 28
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27

    algoritmo                      shift and go to state 269
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    variable                       shift and go to state 18
    valor                          shift and go to state 20
    valorBoolean                   shift and go to state 21
    elementoRelacional             shift and go to state 22
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    boolID                         shift and go to state 35
    coleccion                      shift and go to state 46

state 250

    (21) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS . tipos ILLAVE algoritmo RETURN return DLLAVE
    (42) tipos -> . INT
    (43) tipos -> . DOUBLE
    (44) tipos -> . BOOLEAN
    (45) tipos -> . STRING

    INT             shift and go to state 243
    DOUBLE          shift and go to state 244
    BOOLEAN         shift and go to state 245
    STRING          shift and go to state 246

    tipos                          shift and go to state 270

state 251

    (22) fun -> FUN ID IPAR entrada_fun DPAR EQUALS . return
    (36) return -> . expLogicas
    (37) return -> . expresion
    (38) return -> . valorBoolean
    (39) return -> . expresionRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean

    NEGATION        shift and go to state 36
    ID              shift and go to state 216
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45

    return                         shift and go to state 271
    expLogicas                     shift and go to state 212
    expresion                      shift and go to state 213
    valorBoolean                   shift and go to state 214
    expresionRelacional            shift and go to state 215
    boolID                         shift and go to state 35
    valor                          shift and go to state 20
    elementoRelacional             shift and go to state 22

state 252

    (27) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo . DLLAVE
    (29) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo . DLLAVE else

    DLLAVE          shift and go to state 272


state 253

    (30) if -> IF IPAR entradaIf DPAR return else .

    ID              reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    PRINT           reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    PRINTLN         reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    READLINE        reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    NEGATION        reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    FUN             reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    IF              reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    FOR             reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    VAR             reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    VAL             reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    ENTERO          reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    DECIMAL         reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    CADENA_DE_CARACTERES reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    DOUBLE          reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    MAPOF           reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    TRUE            reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    FALSE           reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    LISTOF          reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    SETOF           reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    $end            reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    DLLAVE          reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)
    RETURN          reduce using rule 30 (if -> IF IPAR entradaIf DPAR return else .)


state 254

    (31) else -> ELSE . ILLAVE algoritmo DLLAVE
    (32) else -> ELSE . return
    (36) return -> . expLogicas
    (37) return -> . expresion
    (38) return -> . valorBoolean
    (39) return -> . expresionRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean

    ILLAVE          shift and go to state 273
    NEGATION        shift and go to state 36
    ID              shift and go to state 216
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45

    return                         shift and go to state 274
    expLogicas                     shift and go to state 212
    expresion                      shift and go to state 213
    valorBoolean                   shift and go to state 214
    expresionRelacional            shift and go to state 215
    boolID                         shift and go to state 35
    valor                          shift and go to state 20
    elementoRelacional             shift and go to state 22

state 255

    (24) condicionFor -> IPAR ID IN ID DPAR .

    ILLAVE          reduce using rule 24 (condicionFor -> IPAR ID IN ID DPAR .)


state 256

    (25) condicionFor -> IPAR ID IN ENTERO PUNTO . PUNTO ENTERO DPAR
    (26) condicionFor -> IPAR ID IN ENTERO PUNTO . PUNTO ENTERO STEP ENTERO DPAR

    PUNTO           shift and go to state 275


state 257

    (87) list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .

    ID              reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    PRINT           reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    PRINTLN         reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    READLINE        reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    NEGATION        reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    FUN             reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    IF              reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    FOR             reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    VAR             reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    VAL             reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    ENTERO          reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    DECIMAL         reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    CADENA_DE_CARACTERES reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    DOUBLE          reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    MAPOF           reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    TRUE            reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    FALSE           reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    LISTOF          reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    SETOF           reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    $end            reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    DLLAVE          reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    RETURN          reduce using rule 87 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)


state 258

    (86) conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .

    ID              reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    PRINT           reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    PRINTLN         reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    READLINE        reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    NEGATION        reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    FUN             reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    IF              reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    FOR             reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    VAR             reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    VAL             reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    ENTERO          reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    DECIMAL         reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    CADENA_DE_CARACTERES reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    DOUBLE          reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    MAPOF           reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    TRUE            reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    FALSE           reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    LISTOF          reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    SETOF           reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    $end            reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    DLLAVE          reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    RETURN          reduce using rule 86 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)


state 259

    (77) maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .

    ID              reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    PRINT           reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    PRINTLN         reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    READLINE        reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    NEGATION        reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    FUN             reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    IF              reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    FOR             reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    VAR             reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    VAL             reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    ENTERO          reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    DECIMAL         reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    CADENA_DE_CARACTERES reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    DOUBLE          reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    MAPOF           reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    TRUE            reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    FALSE           reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    LISTOF          reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    SETOF           reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    $end            reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    DLLAVE          reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    RETURN          reduce using rule 77 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)


state 260

    (80) tupla -> variable IPAR ID COMA ID DPAR EQUALS . PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    PAIR            shift and go to state 276


state 261

    (67) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO . ENTERO DPAR

    ENTERO          shift and go to state 277


state 262

    (73) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR . CADENA_DE_CARACTERES DPAR

    CADENA_DE_CARACTERES shift and go to state 278


state 263

    (79) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento .

    DPAR            reduce using rule 79 (mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento .)


state 264

    (84) tuplaElemento -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 279


state 265

    (85) tuplaElemento -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 280


state 266

    (41) entrada_fun -> ID DOSPUNTOS tipos COMA . entrada_fun
    (40) entrada_fun -> . ID DOSPUNTOS tipos
    (41) entrada_fun -> . ID DOSPUNTOS tipos COMA entrada_fun

    ID              shift and go to state 172

    entrada_fun                    shift and go to state 281

state 267

    (18) fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 18 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)


state 268

    (20) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE . algoritmo RETURN return DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (46) iniVariable -> . variable ID tipoDeDato
    (47) iniVariable -> . variable ID EQUALS valor
    (48) iniVariable -> . variable ID EQUALS valorBoolean
    (49) iniVariable -> . variable ID EQUALS expLogicas
    (50) iniVariable -> . variable ID EQUALS expresionRelacional
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (51) imprimir -> . PRINT IPAR elementosPrint DPAR
    (52) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (100) readline -> . READLINE IPAR DPAR
    (101) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (102) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (103) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (87) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (80) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (18) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (27) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> . IF IPAR entradaIf DPAR return
    (29) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> . IF IPAR entradaIf DPAR return else
    (23) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (98) variable -> . VAR
    (99) variable -> . VAL
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 19
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 36
    FUN             shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    VAR             shift and go to state 40
    VAL             shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45
    MAPOF           shift and go to state 28
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27

    algoritmo                      shift and go to state 282
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    variable                       shift and go to state 18
    valor                          shift and go to state 20
    valorBoolean                   shift and go to state 21
    elementoRelacional             shift and go to state 22
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    boolID                         shift and go to state 35
    coleccion                      shift and go to state 46

state 269

    (19) fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 283


state 270

    (21) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos . ILLAVE algoritmo RETURN return DLLAVE

    ILLAVE          shift and go to state 284


state 271

    (22) fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .

    ID              reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    PRINT           reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    PRINTLN         reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    READLINE        reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    NEGATION        reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    FUN             reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    IF              reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    FOR             reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    VAR             reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    VAL             reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    ENTERO          reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    DECIMAL         reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    CADENA_DE_CARACTERES reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    DOUBLE          reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    MAPOF           reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    TRUE            reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    FALSE           reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    LISTOF          reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    SETOF           reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    $end            reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    DLLAVE          reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    RETURN          reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)


state 272

    (27) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .
    (29) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE . else
    (31) else -> . ELSE ILLAVE algoritmo DLLAVE
    (32) else -> . ELSE return

    ID              reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 27 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    ELSE            shift and go to state 254

    else                           shift and go to state 285

state 273

    (31) else -> ELSE ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (46) iniVariable -> . variable ID tipoDeDato
    (47) iniVariable -> . variable ID EQUALS valor
    (48) iniVariable -> . variable ID EQUALS valorBoolean
    (49) iniVariable -> . variable ID EQUALS expLogicas
    (50) iniVariable -> . variable ID EQUALS expresionRelacional
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (51) imprimir -> . PRINT IPAR elementosPrint DPAR
    (52) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (100) readline -> . READLINE IPAR DPAR
    (101) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (102) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (103) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (87) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (80) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (18) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (27) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> . IF IPAR entradaIf DPAR return
    (29) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> . IF IPAR entradaIf DPAR return else
    (23) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (98) variable -> . VAR
    (99) variable -> . VAL
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 19
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 36
    FUN             shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    VAR             shift and go to state 40
    VAL             shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45
    MAPOF           shift and go to state 28
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27

    algoritmo                      shift and go to state 286
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    variable                       shift and go to state 18
    valor                          shift and go to state 20
    valorBoolean                   shift and go to state 21
    elementoRelacional             shift and go to state 22
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    boolID                         shift and go to state 35
    coleccion                      shift and go to state 46

state 274

    (32) else -> ELSE return .

    ID              reduce using rule 32 (else -> ELSE return .)
    PRINT           reduce using rule 32 (else -> ELSE return .)
    PRINTLN         reduce using rule 32 (else -> ELSE return .)
    READLINE        reduce using rule 32 (else -> ELSE return .)
    NEGATION        reduce using rule 32 (else -> ELSE return .)
    FUN             reduce using rule 32 (else -> ELSE return .)
    IF              reduce using rule 32 (else -> ELSE return .)
    FOR             reduce using rule 32 (else -> ELSE return .)
    VAR             reduce using rule 32 (else -> ELSE return .)
    VAL             reduce using rule 32 (else -> ELSE return .)
    ENTERO          reduce using rule 32 (else -> ELSE return .)
    DECIMAL         reduce using rule 32 (else -> ELSE return .)
    CADENA_DE_CARACTERES reduce using rule 32 (else -> ELSE return .)
    DOUBLE          reduce using rule 32 (else -> ELSE return .)
    MAPOF           reduce using rule 32 (else -> ELSE return .)
    TRUE            reduce using rule 32 (else -> ELSE return .)
    FALSE           reduce using rule 32 (else -> ELSE return .)
    LISTOF          reduce using rule 32 (else -> ELSE return .)
    SETOF           reduce using rule 32 (else -> ELSE return .)
    $end            reduce using rule 32 (else -> ELSE return .)
    DLLAVE          reduce using rule 32 (else -> ELSE return .)
    RETURN          reduce using rule 32 (else -> ELSE return .)


state 275

    (25) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO . ENTERO DPAR
    (26) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO . ENTERO STEP ENTERO DPAR

    ENTERO          shift and go to state 287


state 276

    (80) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR . IPAR tuplaElemento COMA tuplaElemento DPAR

    IPAR            shift and go to state 288


state 277

    (67) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO . DPAR

    DPAR            shift and go to state 289


state 278

    (73) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES . DPAR

    DPAR            shift and go to state 290


state 279

    (84) tuplaElemento -> LISTOF IPAR listElementos DPAR .

    COMA            reduce using rule 84 (tuplaElemento -> LISTOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 84 (tuplaElemento -> LISTOF IPAR listElementos DPAR .)


state 280

    (85) tuplaElemento -> SETOF IPAR listElementos DPAR .

    COMA            reduce using rule 85 (tuplaElemento -> SETOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 85 (tuplaElemento -> SETOF IPAR listElementos DPAR .)


state 281

    (41) entrada_fun -> ID DOSPUNTOS tipos COMA entrada_fun .

    DPAR            reduce using rule 41 (entrada_fun -> ID DOSPUNTOS tipos COMA entrada_fun .)


state 282

    (20) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo . RETURN return DLLAVE

    RETURN          shift and go to state 291


state 283

    (19) fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 19 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)


state 284

    (21) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE . algoritmo RETURN return DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (46) iniVariable -> . variable ID tipoDeDato
    (47) iniVariable -> . variable ID EQUALS valor
    (48) iniVariable -> . variable ID EQUALS valorBoolean
    (49) iniVariable -> . variable ID EQUALS expLogicas
    (50) iniVariable -> . variable ID EQUALS expresionRelacional
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (51) imprimir -> . PRINT IPAR elementosPrint DPAR
    (52) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (100) readline -> . READLINE IPAR DPAR
    (101) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (102) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (103) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (87) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (86) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (80) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (59) funColecciones -> . indexCol
    (60) funColecciones -> . slice
    (61) funColecciones -> . size
    (62) funColecciones -> . isEmpty
    (63) funColecciones -> . funMap
    (64) funColecciones -> . getMap
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (18) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (19) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (20) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (21) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (27) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) if -> . IF IPAR entradaIf DPAR return
    (29) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (30) if -> . IF IPAR entradaIf DPAR return else
    (23) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (98) variable -> . VAR
    (99) variable -> . VAL
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean
    (65) indexCol -> . ID ICOR ENTERO DCOR
    (66) indexCol -> . ID ICOR ID DCOR
    (67) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (68) size -> . ID PUNTO SIZE
    (69) size -> . coleccion PUNTO SIZE
    (70) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (71) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (74) funMap -> . ID PUNTO KEYS
    (75) funMap -> . ID PUNTO VALUES
    (76) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (72) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (73) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (110) coleccion -> . LISTOF IPAR listElementos DPAR
    (111) coleccion -> . SETOF IPAR listElementos DPAR
    (112) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 19
    PRINT           shift and go to state 23
    PRINTLN         shift and go to state 24
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 36
    FUN             shift and go to state 37
    IF              shift and go to state 38
    FOR             shift and go to state 39
    VAR             shift and go to state 40
    VAL             shift and go to state 41
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45
    MAPOF           shift and go to state 28
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    LISTOF          shift and go to state 26
    SETOF           shift and go to state 27

    algoritmo                      shift and go to state 292
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    variable                       shift and go to state 18
    valor                          shift and go to state 20
    valorBoolean                   shift and go to state 21
    elementoRelacional             shift and go to state 22
    indexCol                       shift and go to state 29
    slice                          shift and go to state 30
    size                           shift and go to state 31
    isEmpty                        shift and go to state 32
    funMap                         shift and go to state 33
    getMap                         shift and go to state 34
    boolID                         shift and go to state 35
    coleccion                      shift and go to state 46

state 285

    (29) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .

    ID              reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    PRINT           reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    PRINTLN         reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    READLINE        reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    NEGATION        reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    FUN             reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    IF              reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    FOR             reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    VAR             reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    VAL             reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    ENTERO          reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    DECIMAL         reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    CADENA_DE_CARACTERES reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    DOUBLE          reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    MAPOF           reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    TRUE            reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    FALSE           reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    LISTOF          reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    SETOF           reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    $end            reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    DLLAVE          reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    RETURN          reduce using rule 29 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)


state 286

    (31) else -> ELSE ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 293


state 287

    (25) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO . DPAR
    (26) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO . STEP ENTERO DPAR

    DPAR            shift and go to state 294
    STEP            shift and go to state 295


state 288

    (80) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR . tuplaElemento COMA tuplaElemento DPAR
    (81) tuplaElemento -> . valor
    (82) tuplaElemento -> . ID
    (83) tuplaElemento -> . valorBoolean
    (84) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (85) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE

    ID              shift and go to state 202
    LISTOF          shift and go to state 204
    SETOF           shift and go to state 205
    ENTERO          shift and go to state 90
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    tuplaElemento                  shift and go to state 296
    valor                          shift and go to state 201
    valorBoolean                   shift and go to state 203

state 289

    (67) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .

    ID              reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    PRINT           reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    PRINTLN         reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    READLINE        reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    NEGATION        reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    FUN             reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    IF              reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    FOR             reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    VAR             reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    VAL             reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    ENTERO          reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DECIMAL         reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    CADENA_DE_CARACTERES reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DOUBLE          reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    MAPOF           reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    TRUE            reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    FALSE           reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    LISTOF          reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    SETOF           reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    $end            reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DLLAVE          reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    RETURN          reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DPAR            reduce using rule 67 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)


state 290

    (73) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .

    ID              reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINT           reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINTLN         reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    READLINE        reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    NEGATION        reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FUN             reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    IF              reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FOR             reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAR             reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAL             reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    ENTERO          reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DECIMAL         reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    CADENA_DE_CARACTERES reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DOUBLE          reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    MAPOF           reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    TRUE            reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FALSE           reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    LISTOF          reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    SETOF           reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    $end            reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DLLAVE          reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    RETURN          reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DPAR            reduce using rule 73 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)


state 291

    (20) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN . return DLLAVE
    (36) return -> . expLogicas
    (37) return -> . expresion
    (38) return -> . valorBoolean
    (39) return -> . expresionRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean

    NEGATION        shift and go to state 36
    ID              shift and go to state 216
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45

    return                         shift and go to state 297
    expLogicas                     shift and go to state 212
    expresion                      shift and go to state 213
    valorBoolean                   shift and go to state 214
    expresionRelacional            shift and go to state 215
    boolID                         shift and go to state 35
    valor                          shift and go to state 20
    elementoRelacional             shift and go to state 22

state 292

    (21) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo . RETURN return DLLAVE

    RETURN          shift and go to state 298


state 293

    (31) else -> ELSE ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 31 (else -> ELSE ILLAVE algoritmo DLLAVE .)


state 294

    (25) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR .

    ILLAVE          reduce using rule 25 (condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR .)


state 295

    (26) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP . ENTERO DPAR

    ENTERO          shift and go to state 299


state 296

    (80) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento . COMA tuplaElemento DPAR

    COMA            shift and go to state 300


state 297

    (20) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return . DLLAVE

    DLLAVE          shift and go to state 301


state 298

    (21) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN . return DLLAVE
    (36) return -> . expLogicas
    (37) return -> . expresion
    (38) return -> . valorBoolean
    (39) return -> . expresionRelacional
    (129) expLogicas -> . boolID opLogico boolID
    (130) expLogicas -> . NEGATION boolID
    (113) expresion -> . valor
    (114) expresion -> . ID
    (115) expresion -> . valor operadorMat expresion
    (116) expresion -> . ID operadorMat expresion
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE
    (117) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (131) boolID -> . ID
    (132) boolID -> . valorBoolean
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (118) elementoRelacional -> . ENTERO
    (119) elementoRelacional -> . DOUBLE
    (120) elementoRelacional -> . ID
    (121) elementoRelacional -> . valorBoolean

    NEGATION        shift and go to state 36
    ID              shift and go to state 216
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48
    ENTERO          shift and go to state 42
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    DOUBLE          shift and go to state 45

    return                         shift and go to state 302
    expLogicas                     shift and go to state 212
    expresion                      shift and go to state 213
    valorBoolean                   shift and go to state 214
    expresionRelacional            shift and go to state 215
    boolID                         shift and go to state 35
    valor                          shift and go to state 20
    elementoRelacional             shift and go to state 22

state 299

    (26) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO . DPAR

    DPAR            shift and go to state 303


state 300

    (80) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA . tuplaElemento DPAR
    (81) tuplaElemento -> . valor
    (82) tuplaElemento -> . ID
    (83) tuplaElemento -> . valorBoolean
    (84) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (85) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (126) valor -> . ENTERO
    (127) valor -> . DECIMAL
    (128) valor -> . CADENA_DE_CARACTERES
    (135) valorBoolean -> . TRUE
    (136) valorBoolean -> . FALSE

    ID              shift and go to state 202
    LISTOF          shift and go to state 204
    SETOF           shift and go to state 205
    ENTERO          shift and go to state 90
    DECIMAL         shift and go to state 43
    CADENA_DE_CARACTERES shift and go to state 44
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    tuplaElemento                  shift and go to state 304
    valor                          shift and go to state 201
    valorBoolean                   shift and go to state 203

state 301

    (20) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .

    ID              reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINT           reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINTLN         reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    READLINE        reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    NEGATION        reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FUN             reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    IF              reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FOR             reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAR             reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAL             reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    ENTERO          reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DECIMAL         reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DOUBLE          reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    MAPOF           reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    TRUE            reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FALSE           reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    LISTOF          reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    SETOF           reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    $end            reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DLLAVE          reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    RETURN          reduce using rule 20 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)


state 302

    (21) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return . DLLAVE

    DLLAVE          shift and go to state 305


state 303

    (26) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR .

    ILLAVE          reduce using rule 26 (condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR .)


state 304

    (80) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento . DPAR

    DPAR            shift and go to state 306


state 305

    (21) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .

    ID              reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINT           reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINTLN         reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    READLINE        reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    NEGATION        reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FUN             reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    IF              reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FOR             reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAR             reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAL             reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    ENTERO          reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DECIMAL         reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DOUBLE          reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    MAPOF           reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    TRUE            reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FALSE           reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    LISTOF          reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    SETOF           reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    $end            reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DLLAVE          reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    RETURN          reduce using rule 21 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)


state 306

    (80) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .

    ID              reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    PRINT           reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    PRINTLN         reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    READLINE        reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    NEGATION        reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    FUN             reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    IF              reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    FOR             reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    VAR             reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    VAL             reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    ENTERO          reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    DECIMAL         reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    CADENA_DE_CARACTERES reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    DOUBLE          reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    MAPOF           reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    TRUE            reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    FALSE           reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    LISTOF          reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    SETOF           reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    $end            reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    DLLAVE          reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    RETURN          reduce using rule 80 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTO in state 170 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 234 resolved as shift
