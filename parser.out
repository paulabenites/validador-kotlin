Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> algoritmo
Rule 1     algoritmo -> cuerpo
Rule 2     algoritmo -> cuerpo algoritmo
Rule 3     cuerpo -> iniVariable
Rule 4     cuerpo -> expresionRelacional
Rule 5     cuerpo -> imprimir
Rule 6     cuerpo -> readline
Rule 7     cuerpo -> firstAndCap
Rule 8     cuerpo -> list
Rule 9     cuerpo -> conjuntos
Rule 10    cuerpo -> tupla
Rule 11    cuerpo -> maps
Rule 12    cuerpo -> funColecciones
Rule 13    cuerpo -> expLogicas
Rule 14    cuerpo -> fun
Rule 15    cuerpo -> if
Rule 16    cuerpo -> for
Rule 17    cuerpo -> while
Rule 18    cuerpo -> valorIncDec
Rule 19    cuerpo -> valorInDecAsignacion
Rule 20    cuerpo -> definicionVariables
Rule 21    cuerpo -> valor operadorMat expresion
Rule 22    cuerpo -> ID operadorMat expresion
Rule 23    fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
Rule 24    fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
Rule 25    fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
Rule 26    fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
Rule 27    fun -> FUN ID IPAR entrada_fun DPAR EQUALS return
Rule 28    while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
Rule 29    valorInDecAsignacion -> ID incDecAsignaacion ENTERO
Rule 30    valorIncDec -> ID incrementoDec
Rule 31    incrementoDec -> MASMAS
Rule 32    incrementoDec -> MENOSMENOS
Rule 33    incDecAsignaacion -> MASIGUAL
Rule 34    incDecAsignaacion -> MENOSIGUAL
Rule 35    for -> FOR condicionFor ILLAVE algoritmo DLLAVE
Rule 36    condicionFor -> IPAR ID IN ID DPAR
Rule 37    condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR
Rule 38    condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR
Rule 39    if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
Rule 40    if -> IF IPAR entradaIf DPAR return
Rule 41    if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
Rule 42    if -> IF IPAR entradaIf DPAR return else
Rule 43    else -> ELSE ILLAVE algoritmo DLLAVE
Rule 44    else -> ELSE return
Rule 45    entradaIf -> valorBoolean
Rule 46    entradaIf -> expLogicas
Rule 47    entradaIf -> expresionRelacional
Rule 48    return -> expLogicas
Rule 49    return -> expresion
Rule 50    return -> valorBoolean
Rule 51    return -> expresionRelacional
Rule 52    entrada_fun -> ID DOSPUNTOS tipos
Rule 53    entrada_fun -> ID DOSPUNTOS tipos COMA entrada_fun
Rule 54    tipos -> INT
Rule 55    tipos -> DOUBLE
Rule 56    tipos -> BOOLEAN
Rule 57    tipos -> STRING
Rule 58    iniVariable -> variable ID tipoDeDato
Rule 59    iniVariable -> variable ID EQUALS valor
Rule 60    iniVariable -> variable ID EQUALS valorBoolean
Rule 61    iniVariable -> variable ID EQUALS expLogicas
Rule 62    iniVariable -> variable ID EQUALS expresionRelacional
Rule 63    iniVariable -> variable ID EQUALS funColecciones
Rule 64    iniVariable -> variable ID EQUALS READLINE IPAR DPAR
Rule 65    imprimir -> PRINT IPAR elementosPrint DPAR
Rule 66    imprimir -> PRINTLN IPAR elementosPrint DPAR
Rule 67    elementosPrint -> funColecciones
Rule 68    elementosPrint -> coleccion
Rule 69    elementosPrint -> expresion
Rule 70    elementosPrint -> valorBoolean
Rule 71    elementosPrint -> expLogicas
Rule 72    elementosPrint -> expresionRelacional
Rule 73    elementosPrint -> imprimirColecciones
Rule 74    elementosPrint -> firstAndCap
Rule 75    elementosPrint -> getMap
Rule 76    imprimirColecciones -> PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
Rule 77    imprimirColecciones -> MAPOF IPAR mapsElemento DPAR
Rule 78    imprimirColecciones -> LISTOF IPAR listElementos DPAR
Rule 79    imprimirColecciones -> SETOF IPAR listElementos DPAR
Rule 80    funColecciones -> indexCol
Rule 81    funColecciones -> slice
Rule 82    funColecciones -> size
Rule 83    funColecciones -> isEmpty
Rule 84    funColecciones -> funMap
Rule 85    funColecciones -> getMap
Rule 86    indexCol -> ID ICOR ENTERO DCOR
Rule 87    indexCol -> ID ICOR ID DCOR
Rule 88    slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
Rule 89    size -> ID PUNTO SIZE
Rule 90    size -> coleccion PUNTO SIZE
Rule 91    isEmpty -> ID PUNTO ISEMPTY IPAR DPAR
Rule 92    isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR
Rule 93    getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
Rule 94    getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
Rule 95    funMap -> ID PUNTO KEYS
Rule 96    funMap -> ID PUNTO VALUES
Rule 97    funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES
Rule 98    maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR
Rule 99    mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento
Rule 100   mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento
Rule 101   tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
Rule 102   tuplaElemento -> valor
Rule 103   tuplaElemento -> ID
Rule 104   tuplaElemento -> valorBoolean
Rule 105   tuplaElemento -> LISTOF IPAR listElementos DPAR
Rule 106   tuplaElemento -> SETOF IPAR listElementos DPAR
Rule 107   conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR
Rule 108   list -> variable ID EQUALS LISTOF IPAR listElementos DPAR
Rule 109   listElementos -> valor
Rule 110   listElementos -> ID
Rule 111   listElementos -> valorBoolean
Rule 112   listElementos -> expresionRelacional
Rule 113   listElementos -> expLogicas
Rule 114   listElementos -> valorBoolean COMA listElementos
Rule 115   listElementos -> valor COMA listElementos
Rule 116   listElementos -> ID COMA listElementos
Rule 117   listElementos -> LISTOF IPAR listElementos DPAR
Rule 118   listElementos -> SETOF IPAR listElementos DPAR
Rule 119   coleccion -> LISTOF IPAR listElementos DPAR
Rule 120   coleccion -> SETOF IPAR listElementos DPAR
Rule 121   coleccion -> MAPOF IPAR mapsElemento DPAR
Rule 122   variable -> VAR
Rule 123   variable -> VAL
Rule 124   readline -> READLINE IPAR DPAR
Rule 125   readline -> variable ID EQUALS READLINE IPAR DPAR
Rule 126   firstAndCap -> ID PUNTO FIRST IPAR DPAR
Rule 127   firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR
Rule 128   tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO
Rule 129   tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL
Rule 130   tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES
Rule 131   tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean
Rule 132   tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas
Rule 133   tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional
Rule 134   tipoDeDato -> tipoDeDato2
Rule 135   tipoDeDato2 -> DOSPUNTOS INT
Rule 136   tipoDeDato2 -> DOSPUNTOS DOUBLE
Rule 137   tipoDeDato2 -> DOSPUNTOS STRING
Rule 138   tipoDeDato2 -> DOSPUNTOS BOOLEAN
Rule 139   definicionVariables -> ID EQUALS valor
Rule 140   definicionVariables -> ID EQUALS valorBoolean
Rule 141   expresion -> valor
Rule 142   expresion -> ID
Rule 143   expresion -> valor operadorMat expresion
Rule 144   expresion -> ID operadorMat expresion
Rule 145   expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional
Rule 146   elementoRelacional -> ENTERO
Rule 147   elementoRelacional -> DOUBLE
Rule 148   elementoRelacional -> ID
Rule 149   elementoRelacional -> valorBoolean
Rule 150   operadorMat -> PLUS
Rule 151   operadorMat -> MINUS
Rule 152   operadorMat -> TIMES
Rule 153   operadorMat -> DIVIDE
Rule 154   valor -> ENTERO
Rule 155   valor -> DECIMAL
Rule 156   valor -> CADENA_DE_CARACTERES
Rule 157   expLogicas -> boolID opLogico boolID
Rule 158   expLogicas -> NEGATION boolID
Rule 159   boolID -> ID
Rule 160   boolID -> valorBoolean
Rule 161   opLogico -> AND
Rule 162   opLogico -> OR
Rule 163   valorBoolean -> TRUE
Rule 164   valorBoolean -> FALSE
Rule 165   operadorRelacional -> EQUAL
Rule 166   operadorRelacional -> NOTEQ
Rule 167   operadorRelacional -> LARGE
Rule 168   operadorRelacional -> SMALL
Rule 169   operadorRelacional -> LRGEQ
Rule 170   operadorRelacional -> SMLEQ

Terminals, with rules where they appear

AND                  : 161
BOOLEAN              : 56 131 132 133 138
CADENA_DE_CARACTERES : 93 94 99 100 130 156
CAPITALIZE           : 127
COMA                 : 53 76 100 101 101 114 115 116
DCOR                 : 86 87
DECIMAL              : 129 155
DIVIDE               : 153
DLLAVE               : 23 24 25 26 28 35 39 41 43
DOSPUNTOS            : 25 26 52 53 128 129 130 131 132 133 135 136 137 138
DOUBLE               : 55 129 136 147
DPAR                 : 23 24 25 26 27 28 36 37 38 39 40 41 42 64 65 66 76 77 78 79 88 91 92 93 94 94 97 98 101 101 105 106 107 108 117 118 119 120 121 124 125 126 127
ELSE                 : 43 44
ENTERO               : 29 37 37 38 38 38 86 88 88 128 146 154
EQUAL                : 165
EQUALS               : 27 59 60 61 62 63 64 98 101 107 108 125 128 129 130 131 132 133 139 140
FALSE                : 164
FIRST                : 126
FOR                  : 35
FUN                  : 23 24 25 26 27
GET                  : 93 94
ICOR                 : 86 87
ID                   : 22 23 24 25 26 27 29 30 36 36 37 38 52 53 58 59 60 61 62 63 64 86 87 87 88 89 91 93 95 96 98 101 101 103 107 108 110 116 125 126 127 139 140 142 144 148 159
IF                   : 39 40 41 42
ILLAVE               : 23 24 25 26 28 35 39 41 43
IN                   : 36 37 38
INT                  : 54 128 135
IPAR                 : 23 24 25 26 27 28 36 37 38 39 40 41 42 64 65 66 76 77 78 79 88 91 92 93 94 94 97 98 101 101 105 106 107 108 117 118 119 120 121 124 125 126 127
ISEMPTY              : 91 92
KEYS                 : 95
LARGE                : 167
LISTOF               : 78 105 108 117 119
LRGEQ                : 169
MAPOF                : 77 94 97 98 121
MASIGUAL             : 33
MASMAS               : 31
MENOSIGUAL           : 34
MENOSMENOS           : 32
MINUS                : 151
NEGATION             : 158
NOTEQ                : 166
OR                   : 162
PAIR                 : 76 101
PLUS                 : 150
PRINT                : 65
PRINTLN              : 66
PUNTO                : 37 37 38 38 88 88 88 89 90 91 92 93 94 95 96 97 126 127
READLINE             : 64 124 125
RETURN               : 25 26
SETOF                : 79 106 107 118 120
SIZE                 : 89 90
SLICE                : 88
SMALL                : 168
SMLEQ                : 170
STEP                 : 38
STRING               : 57 130 137
TIMES                : 152
TO                   : 99 100
TRUE                 : 163
VAL                  : 123
VALUES               : 96 97
VAR                  : 122
WHILE                : 28
error                : 

Nonterminals, with rules where they appear

algoritmo            : 2 23 24 25 26 28 35 39 41 43 0
boolID               : 157 157 158
coleccion            : 68 90 92
condicionFor         : 35
conjuntos            : 9
cuerpo               : 1 2
definicionVariables  : 20
elementoRelacional   : 145 145
elementosPrint       : 65 66
else                 : 41 42
entradaIf            : 28 39 40 41 42
entrada_fun          : 24 26 27 53
expLogicas           : 13 46 48 61 71 113 132
expresion            : 21 22 49 69 143 144
expresionRelacional  : 4 47 51 62 72 112 133
firstAndCap          : 7 74
for                  : 16
fun                  : 14
funColecciones       : 12 63 67
funMap               : 84
getMap               : 75 85
if                   : 15
imprimir             : 5
imprimirColecciones  : 73
incDecAsignaacion    : 29
incrementoDec        : 30
indexCol             : 80
iniVariable          : 3
isEmpty              : 83
list                 : 8
listElementos        : 78 79 105 106 107 108 114 115 116 117 118 119 120
maps                 : 11
mapsElemento         : 77 94 97 98 100 121
opLogico             : 157
operadorMat          : 21 22 143 144
operadorRelacional   : 145
readline             : 6
return               : 25 26 27 40 42 44
size                 : 82
slice                : 81
tipoDeDato           : 58
tipoDeDato2          : 134
tipos                : 25 26 52 53
tupla                : 10
tuplaElemento        : 76 76 99 100 101 101
valor                : 21 59 102 109 115 139 141 143
valorBoolean         : 45 50 60 70 104 111 114 131 140 149 160
valorInDecAsignacion : 19
valorIncDec          : 18
variable             : 58 59 60 61 62 63 64 98 101 107 108 125
while                : 17

Parsing method: LALR

state 0

    (0) S' -> . algoritmo
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresionRelacional
    (5) cuerpo -> . imprimir
    (6) cuerpo -> . readline
    (7) cuerpo -> . firstAndCap
    (8) cuerpo -> . list
    (9) cuerpo -> . conjuntos
    (10) cuerpo -> . tupla
    (11) cuerpo -> . maps
    (12) cuerpo -> . funColecciones
    (13) cuerpo -> . expLogicas
    (14) cuerpo -> . fun
    (15) cuerpo -> . if
    (16) cuerpo -> . for
    (17) cuerpo -> . while
    (18) cuerpo -> . valorIncDec
    (19) cuerpo -> . valorInDecAsignacion
    (20) cuerpo -> . definicionVariables
    (21) cuerpo -> . valor operadorMat expresion
    (22) cuerpo -> . ID operadorMat expresion
    (58) iniVariable -> . variable ID tipoDeDato
    (59) iniVariable -> . variable ID EQUALS valor
    (60) iniVariable -> . variable ID EQUALS valorBoolean
    (61) iniVariable -> . variable ID EQUALS expLogicas
    (62) iniVariable -> . variable ID EQUALS expresionRelacional
    (63) iniVariable -> . variable ID EQUALS funColecciones
    (64) iniVariable -> . variable ID EQUALS READLINE IPAR DPAR
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) imprimir -> . PRINT IPAR elementosPrint DPAR
    (66) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (124) readline -> . READLINE IPAR DPAR
    (125) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (108) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (23) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> . IF IPAR entradaIf DPAR return
    (41) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> . IF IPAR entradaIf DPAR return else
    (35) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (28) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (30) valorIncDec -> . ID incrementoDec
    (29) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (139) definicionVariables -> . ID EQUALS valor
    (140) definicionVariables -> . ID EQUALS valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (122) variable -> . VAR
    (123) variable -> . VAL
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 27
    PRINTLN         shift and go to state 28
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    VAR             shift and go to state 47
    VAL             shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 1
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresionRelacional            shift and go to state 4
    imprimir                       shift and go to state 5
    readline                       shift and go to state 6
    firstAndCap                    shift and go to state 7
    list                           shift and go to state 8
    conjuntos                      shift and go to state 9
    tupla                          shift and go to state 10
    maps                           shift and go to state 11
    funColecciones                 shift and go to state 12
    expLogicas                     shift and go to state 13
    fun                            shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    valorIncDec                    shift and go to state 18
    valorInDecAsignacion           shift and go to state 19
    definicionVariables            shift and go to state 20
    valor                          shift and go to state 21
    variable                       shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 1

    (0) S' -> algoritmo .



state 2

    (1) algoritmo -> cuerpo .
    (2) algoritmo -> cuerpo . algoritmo
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresionRelacional
    (5) cuerpo -> . imprimir
    (6) cuerpo -> . readline
    (7) cuerpo -> . firstAndCap
    (8) cuerpo -> . list
    (9) cuerpo -> . conjuntos
    (10) cuerpo -> . tupla
    (11) cuerpo -> . maps
    (12) cuerpo -> . funColecciones
    (13) cuerpo -> . expLogicas
    (14) cuerpo -> . fun
    (15) cuerpo -> . if
    (16) cuerpo -> . for
    (17) cuerpo -> . while
    (18) cuerpo -> . valorIncDec
    (19) cuerpo -> . valorInDecAsignacion
    (20) cuerpo -> . definicionVariables
    (21) cuerpo -> . valor operadorMat expresion
    (22) cuerpo -> . ID operadorMat expresion
    (58) iniVariable -> . variable ID tipoDeDato
    (59) iniVariable -> . variable ID EQUALS valor
    (60) iniVariable -> . variable ID EQUALS valorBoolean
    (61) iniVariable -> . variable ID EQUALS expLogicas
    (62) iniVariable -> . variable ID EQUALS expresionRelacional
    (63) iniVariable -> . variable ID EQUALS funColecciones
    (64) iniVariable -> . variable ID EQUALS READLINE IPAR DPAR
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) imprimir -> . PRINT IPAR elementosPrint DPAR
    (66) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (124) readline -> . READLINE IPAR DPAR
    (125) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (108) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (23) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> . IF IPAR entradaIf DPAR return
    (41) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> . IF IPAR entradaIf DPAR return else
    (35) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (28) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (30) valorIncDec -> . ID incrementoDec
    (29) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (139) definicionVariables -> . ID EQUALS valor
    (140) definicionVariables -> . ID EQUALS valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (122) variable -> . VAR
    (123) variable -> . VAL
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    $end            reduce using rule 1 (algoritmo -> cuerpo .)
    DLLAVE          reduce using rule 1 (algoritmo -> cuerpo .)
    RETURN          reduce using rule 1 (algoritmo -> cuerpo .)
    ID              shift and go to state 22
    PRINT           shift and go to state 27
    PRINTLN         shift and go to state 28
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    VAR             shift and go to state 47
    VAL             shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    cuerpo                         shift and go to state 2
    algoritmo                      shift and go to state 53
    iniVariable                    shift and go to state 3
    expresionRelacional            shift and go to state 4
    imprimir                       shift and go to state 5
    readline                       shift and go to state 6
    firstAndCap                    shift and go to state 7
    list                           shift and go to state 8
    conjuntos                      shift and go to state 9
    tupla                          shift and go to state 10
    maps                           shift and go to state 11
    funColecciones                 shift and go to state 12
    expLogicas                     shift and go to state 13
    fun                            shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    valorIncDec                    shift and go to state 18
    valorInDecAsignacion           shift and go to state 19
    definicionVariables            shift and go to state 20
    valor                          shift and go to state 21
    variable                       shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 3

    (3) cuerpo -> iniVariable .

    ID              reduce using rule 3 (cuerpo -> iniVariable .)
    PRINT           reduce using rule 3 (cuerpo -> iniVariable .)
    PRINTLN         reduce using rule 3 (cuerpo -> iniVariable .)
    READLINE        reduce using rule 3 (cuerpo -> iniVariable .)
    NEGATION        reduce using rule 3 (cuerpo -> iniVariable .)
    FUN             reduce using rule 3 (cuerpo -> iniVariable .)
    IF              reduce using rule 3 (cuerpo -> iniVariable .)
    FOR             reduce using rule 3 (cuerpo -> iniVariable .)
    WHILE           reduce using rule 3 (cuerpo -> iniVariable .)
    ENTERO          reduce using rule 3 (cuerpo -> iniVariable .)
    DECIMAL         reduce using rule 3 (cuerpo -> iniVariable .)
    CADENA_DE_CARACTERES reduce using rule 3 (cuerpo -> iniVariable .)
    VAR             reduce using rule 3 (cuerpo -> iniVariable .)
    VAL             reduce using rule 3 (cuerpo -> iniVariable .)
    DOUBLE          reduce using rule 3 (cuerpo -> iniVariable .)
    MAPOF           reduce using rule 3 (cuerpo -> iniVariable .)
    TRUE            reduce using rule 3 (cuerpo -> iniVariable .)
    FALSE           reduce using rule 3 (cuerpo -> iniVariable .)
    LISTOF          reduce using rule 3 (cuerpo -> iniVariable .)
    SETOF           reduce using rule 3 (cuerpo -> iniVariable .)
    $end            reduce using rule 3 (cuerpo -> iniVariable .)
    DLLAVE          reduce using rule 3 (cuerpo -> iniVariable .)
    RETURN          reduce using rule 3 (cuerpo -> iniVariable .)


state 4

    (4) cuerpo -> expresionRelacional .

    ID              reduce using rule 4 (cuerpo -> expresionRelacional .)
    PRINT           reduce using rule 4 (cuerpo -> expresionRelacional .)
    PRINTLN         reduce using rule 4 (cuerpo -> expresionRelacional .)
    READLINE        reduce using rule 4 (cuerpo -> expresionRelacional .)
    NEGATION        reduce using rule 4 (cuerpo -> expresionRelacional .)
    FUN             reduce using rule 4 (cuerpo -> expresionRelacional .)
    IF              reduce using rule 4 (cuerpo -> expresionRelacional .)
    FOR             reduce using rule 4 (cuerpo -> expresionRelacional .)
    WHILE           reduce using rule 4 (cuerpo -> expresionRelacional .)
    ENTERO          reduce using rule 4 (cuerpo -> expresionRelacional .)
    DECIMAL         reduce using rule 4 (cuerpo -> expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 4 (cuerpo -> expresionRelacional .)
    VAR             reduce using rule 4 (cuerpo -> expresionRelacional .)
    VAL             reduce using rule 4 (cuerpo -> expresionRelacional .)
    DOUBLE          reduce using rule 4 (cuerpo -> expresionRelacional .)
    MAPOF           reduce using rule 4 (cuerpo -> expresionRelacional .)
    TRUE            reduce using rule 4 (cuerpo -> expresionRelacional .)
    FALSE           reduce using rule 4 (cuerpo -> expresionRelacional .)
    LISTOF          reduce using rule 4 (cuerpo -> expresionRelacional .)
    SETOF           reduce using rule 4 (cuerpo -> expresionRelacional .)
    $end            reduce using rule 4 (cuerpo -> expresionRelacional .)
    DLLAVE          reduce using rule 4 (cuerpo -> expresionRelacional .)
    RETURN          reduce using rule 4 (cuerpo -> expresionRelacional .)


state 5

    (5) cuerpo -> imprimir .

    ID              reduce using rule 5 (cuerpo -> imprimir .)
    PRINT           reduce using rule 5 (cuerpo -> imprimir .)
    PRINTLN         reduce using rule 5 (cuerpo -> imprimir .)
    READLINE        reduce using rule 5 (cuerpo -> imprimir .)
    NEGATION        reduce using rule 5 (cuerpo -> imprimir .)
    FUN             reduce using rule 5 (cuerpo -> imprimir .)
    IF              reduce using rule 5 (cuerpo -> imprimir .)
    FOR             reduce using rule 5 (cuerpo -> imprimir .)
    WHILE           reduce using rule 5 (cuerpo -> imprimir .)
    ENTERO          reduce using rule 5 (cuerpo -> imprimir .)
    DECIMAL         reduce using rule 5 (cuerpo -> imprimir .)
    CADENA_DE_CARACTERES reduce using rule 5 (cuerpo -> imprimir .)
    VAR             reduce using rule 5 (cuerpo -> imprimir .)
    VAL             reduce using rule 5 (cuerpo -> imprimir .)
    DOUBLE          reduce using rule 5 (cuerpo -> imprimir .)
    MAPOF           reduce using rule 5 (cuerpo -> imprimir .)
    TRUE            reduce using rule 5 (cuerpo -> imprimir .)
    FALSE           reduce using rule 5 (cuerpo -> imprimir .)
    LISTOF          reduce using rule 5 (cuerpo -> imprimir .)
    SETOF           reduce using rule 5 (cuerpo -> imprimir .)
    $end            reduce using rule 5 (cuerpo -> imprimir .)
    DLLAVE          reduce using rule 5 (cuerpo -> imprimir .)
    RETURN          reduce using rule 5 (cuerpo -> imprimir .)


state 6

    (6) cuerpo -> readline .

    ID              reduce using rule 6 (cuerpo -> readline .)
    PRINT           reduce using rule 6 (cuerpo -> readline .)
    PRINTLN         reduce using rule 6 (cuerpo -> readline .)
    READLINE        reduce using rule 6 (cuerpo -> readline .)
    NEGATION        reduce using rule 6 (cuerpo -> readline .)
    FUN             reduce using rule 6 (cuerpo -> readline .)
    IF              reduce using rule 6 (cuerpo -> readline .)
    FOR             reduce using rule 6 (cuerpo -> readline .)
    WHILE           reduce using rule 6 (cuerpo -> readline .)
    ENTERO          reduce using rule 6 (cuerpo -> readline .)
    DECIMAL         reduce using rule 6 (cuerpo -> readline .)
    CADENA_DE_CARACTERES reduce using rule 6 (cuerpo -> readline .)
    VAR             reduce using rule 6 (cuerpo -> readline .)
    VAL             reduce using rule 6 (cuerpo -> readline .)
    DOUBLE          reduce using rule 6 (cuerpo -> readline .)
    MAPOF           reduce using rule 6 (cuerpo -> readline .)
    TRUE            reduce using rule 6 (cuerpo -> readline .)
    FALSE           reduce using rule 6 (cuerpo -> readline .)
    LISTOF          reduce using rule 6 (cuerpo -> readline .)
    SETOF           reduce using rule 6 (cuerpo -> readline .)
    $end            reduce using rule 6 (cuerpo -> readline .)
    DLLAVE          reduce using rule 6 (cuerpo -> readline .)
    RETURN          reduce using rule 6 (cuerpo -> readline .)


state 7

    (7) cuerpo -> firstAndCap .

    ID              reduce using rule 7 (cuerpo -> firstAndCap .)
    PRINT           reduce using rule 7 (cuerpo -> firstAndCap .)
    PRINTLN         reduce using rule 7 (cuerpo -> firstAndCap .)
    READLINE        reduce using rule 7 (cuerpo -> firstAndCap .)
    NEGATION        reduce using rule 7 (cuerpo -> firstAndCap .)
    FUN             reduce using rule 7 (cuerpo -> firstAndCap .)
    IF              reduce using rule 7 (cuerpo -> firstAndCap .)
    FOR             reduce using rule 7 (cuerpo -> firstAndCap .)
    WHILE           reduce using rule 7 (cuerpo -> firstAndCap .)
    ENTERO          reduce using rule 7 (cuerpo -> firstAndCap .)
    DECIMAL         reduce using rule 7 (cuerpo -> firstAndCap .)
    CADENA_DE_CARACTERES reduce using rule 7 (cuerpo -> firstAndCap .)
    VAR             reduce using rule 7 (cuerpo -> firstAndCap .)
    VAL             reduce using rule 7 (cuerpo -> firstAndCap .)
    DOUBLE          reduce using rule 7 (cuerpo -> firstAndCap .)
    MAPOF           reduce using rule 7 (cuerpo -> firstAndCap .)
    TRUE            reduce using rule 7 (cuerpo -> firstAndCap .)
    FALSE           reduce using rule 7 (cuerpo -> firstAndCap .)
    LISTOF          reduce using rule 7 (cuerpo -> firstAndCap .)
    SETOF           reduce using rule 7 (cuerpo -> firstAndCap .)
    $end            reduce using rule 7 (cuerpo -> firstAndCap .)
    DLLAVE          reduce using rule 7 (cuerpo -> firstAndCap .)
    RETURN          reduce using rule 7 (cuerpo -> firstAndCap .)


state 8

    (8) cuerpo -> list .

    ID              reduce using rule 8 (cuerpo -> list .)
    PRINT           reduce using rule 8 (cuerpo -> list .)
    PRINTLN         reduce using rule 8 (cuerpo -> list .)
    READLINE        reduce using rule 8 (cuerpo -> list .)
    NEGATION        reduce using rule 8 (cuerpo -> list .)
    FUN             reduce using rule 8 (cuerpo -> list .)
    IF              reduce using rule 8 (cuerpo -> list .)
    FOR             reduce using rule 8 (cuerpo -> list .)
    WHILE           reduce using rule 8 (cuerpo -> list .)
    ENTERO          reduce using rule 8 (cuerpo -> list .)
    DECIMAL         reduce using rule 8 (cuerpo -> list .)
    CADENA_DE_CARACTERES reduce using rule 8 (cuerpo -> list .)
    VAR             reduce using rule 8 (cuerpo -> list .)
    VAL             reduce using rule 8 (cuerpo -> list .)
    DOUBLE          reduce using rule 8 (cuerpo -> list .)
    MAPOF           reduce using rule 8 (cuerpo -> list .)
    TRUE            reduce using rule 8 (cuerpo -> list .)
    FALSE           reduce using rule 8 (cuerpo -> list .)
    LISTOF          reduce using rule 8 (cuerpo -> list .)
    SETOF           reduce using rule 8 (cuerpo -> list .)
    $end            reduce using rule 8 (cuerpo -> list .)
    DLLAVE          reduce using rule 8 (cuerpo -> list .)
    RETURN          reduce using rule 8 (cuerpo -> list .)


state 9

    (9) cuerpo -> conjuntos .

    ID              reduce using rule 9 (cuerpo -> conjuntos .)
    PRINT           reduce using rule 9 (cuerpo -> conjuntos .)
    PRINTLN         reduce using rule 9 (cuerpo -> conjuntos .)
    READLINE        reduce using rule 9 (cuerpo -> conjuntos .)
    NEGATION        reduce using rule 9 (cuerpo -> conjuntos .)
    FUN             reduce using rule 9 (cuerpo -> conjuntos .)
    IF              reduce using rule 9 (cuerpo -> conjuntos .)
    FOR             reduce using rule 9 (cuerpo -> conjuntos .)
    WHILE           reduce using rule 9 (cuerpo -> conjuntos .)
    ENTERO          reduce using rule 9 (cuerpo -> conjuntos .)
    DECIMAL         reduce using rule 9 (cuerpo -> conjuntos .)
    CADENA_DE_CARACTERES reduce using rule 9 (cuerpo -> conjuntos .)
    VAR             reduce using rule 9 (cuerpo -> conjuntos .)
    VAL             reduce using rule 9 (cuerpo -> conjuntos .)
    DOUBLE          reduce using rule 9 (cuerpo -> conjuntos .)
    MAPOF           reduce using rule 9 (cuerpo -> conjuntos .)
    TRUE            reduce using rule 9 (cuerpo -> conjuntos .)
    FALSE           reduce using rule 9 (cuerpo -> conjuntos .)
    LISTOF          reduce using rule 9 (cuerpo -> conjuntos .)
    SETOF           reduce using rule 9 (cuerpo -> conjuntos .)
    $end            reduce using rule 9 (cuerpo -> conjuntos .)
    DLLAVE          reduce using rule 9 (cuerpo -> conjuntos .)
    RETURN          reduce using rule 9 (cuerpo -> conjuntos .)


state 10

    (10) cuerpo -> tupla .

    ID              reduce using rule 10 (cuerpo -> tupla .)
    PRINT           reduce using rule 10 (cuerpo -> tupla .)
    PRINTLN         reduce using rule 10 (cuerpo -> tupla .)
    READLINE        reduce using rule 10 (cuerpo -> tupla .)
    NEGATION        reduce using rule 10 (cuerpo -> tupla .)
    FUN             reduce using rule 10 (cuerpo -> tupla .)
    IF              reduce using rule 10 (cuerpo -> tupla .)
    FOR             reduce using rule 10 (cuerpo -> tupla .)
    WHILE           reduce using rule 10 (cuerpo -> tupla .)
    ENTERO          reduce using rule 10 (cuerpo -> tupla .)
    DECIMAL         reduce using rule 10 (cuerpo -> tupla .)
    CADENA_DE_CARACTERES reduce using rule 10 (cuerpo -> tupla .)
    VAR             reduce using rule 10 (cuerpo -> tupla .)
    VAL             reduce using rule 10 (cuerpo -> tupla .)
    DOUBLE          reduce using rule 10 (cuerpo -> tupla .)
    MAPOF           reduce using rule 10 (cuerpo -> tupla .)
    TRUE            reduce using rule 10 (cuerpo -> tupla .)
    FALSE           reduce using rule 10 (cuerpo -> tupla .)
    LISTOF          reduce using rule 10 (cuerpo -> tupla .)
    SETOF           reduce using rule 10 (cuerpo -> tupla .)
    $end            reduce using rule 10 (cuerpo -> tupla .)
    DLLAVE          reduce using rule 10 (cuerpo -> tupla .)
    RETURN          reduce using rule 10 (cuerpo -> tupla .)


state 11

    (11) cuerpo -> maps .

    ID              reduce using rule 11 (cuerpo -> maps .)
    PRINT           reduce using rule 11 (cuerpo -> maps .)
    PRINTLN         reduce using rule 11 (cuerpo -> maps .)
    READLINE        reduce using rule 11 (cuerpo -> maps .)
    NEGATION        reduce using rule 11 (cuerpo -> maps .)
    FUN             reduce using rule 11 (cuerpo -> maps .)
    IF              reduce using rule 11 (cuerpo -> maps .)
    FOR             reduce using rule 11 (cuerpo -> maps .)
    WHILE           reduce using rule 11 (cuerpo -> maps .)
    ENTERO          reduce using rule 11 (cuerpo -> maps .)
    DECIMAL         reduce using rule 11 (cuerpo -> maps .)
    CADENA_DE_CARACTERES reduce using rule 11 (cuerpo -> maps .)
    VAR             reduce using rule 11 (cuerpo -> maps .)
    VAL             reduce using rule 11 (cuerpo -> maps .)
    DOUBLE          reduce using rule 11 (cuerpo -> maps .)
    MAPOF           reduce using rule 11 (cuerpo -> maps .)
    TRUE            reduce using rule 11 (cuerpo -> maps .)
    FALSE           reduce using rule 11 (cuerpo -> maps .)
    LISTOF          reduce using rule 11 (cuerpo -> maps .)
    SETOF           reduce using rule 11 (cuerpo -> maps .)
    $end            reduce using rule 11 (cuerpo -> maps .)
    DLLAVE          reduce using rule 11 (cuerpo -> maps .)
    RETURN          reduce using rule 11 (cuerpo -> maps .)


state 12

    (12) cuerpo -> funColecciones .

    ID              reduce using rule 12 (cuerpo -> funColecciones .)
    PRINT           reduce using rule 12 (cuerpo -> funColecciones .)
    PRINTLN         reduce using rule 12 (cuerpo -> funColecciones .)
    READLINE        reduce using rule 12 (cuerpo -> funColecciones .)
    NEGATION        reduce using rule 12 (cuerpo -> funColecciones .)
    FUN             reduce using rule 12 (cuerpo -> funColecciones .)
    IF              reduce using rule 12 (cuerpo -> funColecciones .)
    FOR             reduce using rule 12 (cuerpo -> funColecciones .)
    WHILE           reduce using rule 12 (cuerpo -> funColecciones .)
    ENTERO          reduce using rule 12 (cuerpo -> funColecciones .)
    DECIMAL         reduce using rule 12 (cuerpo -> funColecciones .)
    CADENA_DE_CARACTERES reduce using rule 12 (cuerpo -> funColecciones .)
    VAR             reduce using rule 12 (cuerpo -> funColecciones .)
    VAL             reduce using rule 12 (cuerpo -> funColecciones .)
    DOUBLE          reduce using rule 12 (cuerpo -> funColecciones .)
    MAPOF           reduce using rule 12 (cuerpo -> funColecciones .)
    TRUE            reduce using rule 12 (cuerpo -> funColecciones .)
    FALSE           reduce using rule 12 (cuerpo -> funColecciones .)
    LISTOF          reduce using rule 12 (cuerpo -> funColecciones .)
    SETOF           reduce using rule 12 (cuerpo -> funColecciones .)
    $end            reduce using rule 12 (cuerpo -> funColecciones .)
    DLLAVE          reduce using rule 12 (cuerpo -> funColecciones .)
    RETURN          reduce using rule 12 (cuerpo -> funColecciones .)


state 13

    (13) cuerpo -> expLogicas .

    ID              reduce using rule 13 (cuerpo -> expLogicas .)
    PRINT           reduce using rule 13 (cuerpo -> expLogicas .)
    PRINTLN         reduce using rule 13 (cuerpo -> expLogicas .)
    READLINE        reduce using rule 13 (cuerpo -> expLogicas .)
    NEGATION        reduce using rule 13 (cuerpo -> expLogicas .)
    FUN             reduce using rule 13 (cuerpo -> expLogicas .)
    IF              reduce using rule 13 (cuerpo -> expLogicas .)
    FOR             reduce using rule 13 (cuerpo -> expLogicas .)
    WHILE           reduce using rule 13 (cuerpo -> expLogicas .)
    ENTERO          reduce using rule 13 (cuerpo -> expLogicas .)
    DECIMAL         reduce using rule 13 (cuerpo -> expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 13 (cuerpo -> expLogicas .)
    VAR             reduce using rule 13 (cuerpo -> expLogicas .)
    VAL             reduce using rule 13 (cuerpo -> expLogicas .)
    DOUBLE          reduce using rule 13 (cuerpo -> expLogicas .)
    MAPOF           reduce using rule 13 (cuerpo -> expLogicas .)
    TRUE            reduce using rule 13 (cuerpo -> expLogicas .)
    FALSE           reduce using rule 13 (cuerpo -> expLogicas .)
    LISTOF          reduce using rule 13 (cuerpo -> expLogicas .)
    SETOF           reduce using rule 13 (cuerpo -> expLogicas .)
    $end            reduce using rule 13 (cuerpo -> expLogicas .)
    DLLAVE          reduce using rule 13 (cuerpo -> expLogicas .)
    RETURN          reduce using rule 13 (cuerpo -> expLogicas .)


state 14

    (14) cuerpo -> fun .

    ID              reduce using rule 14 (cuerpo -> fun .)
    PRINT           reduce using rule 14 (cuerpo -> fun .)
    PRINTLN         reduce using rule 14 (cuerpo -> fun .)
    READLINE        reduce using rule 14 (cuerpo -> fun .)
    NEGATION        reduce using rule 14 (cuerpo -> fun .)
    FUN             reduce using rule 14 (cuerpo -> fun .)
    IF              reduce using rule 14 (cuerpo -> fun .)
    FOR             reduce using rule 14 (cuerpo -> fun .)
    WHILE           reduce using rule 14 (cuerpo -> fun .)
    ENTERO          reduce using rule 14 (cuerpo -> fun .)
    DECIMAL         reduce using rule 14 (cuerpo -> fun .)
    CADENA_DE_CARACTERES reduce using rule 14 (cuerpo -> fun .)
    VAR             reduce using rule 14 (cuerpo -> fun .)
    VAL             reduce using rule 14 (cuerpo -> fun .)
    DOUBLE          reduce using rule 14 (cuerpo -> fun .)
    MAPOF           reduce using rule 14 (cuerpo -> fun .)
    TRUE            reduce using rule 14 (cuerpo -> fun .)
    FALSE           reduce using rule 14 (cuerpo -> fun .)
    LISTOF          reduce using rule 14 (cuerpo -> fun .)
    SETOF           reduce using rule 14 (cuerpo -> fun .)
    $end            reduce using rule 14 (cuerpo -> fun .)
    DLLAVE          reduce using rule 14 (cuerpo -> fun .)
    RETURN          reduce using rule 14 (cuerpo -> fun .)


state 15

    (15) cuerpo -> if .

    ID              reduce using rule 15 (cuerpo -> if .)
    PRINT           reduce using rule 15 (cuerpo -> if .)
    PRINTLN         reduce using rule 15 (cuerpo -> if .)
    READLINE        reduce using rule 15 (cuerpo -> if .)
    NEGATION        reduce using rule 15 (cuerpo -> if .)
    FUN             reduce using rule 15 (cuerpo -> if .)
    IF              reduce using rule 15 (cuerpo -> if .)
    FOR             reduce using rule 15 (cuerpo -> if .)
    WHILE           reduce using rule 15 (cuerpo -> if .)
    ENTERO          reduce using rule 15 (cuerpo -> if .)
    DECIMAL         reduce using rule 15 (cuerpo -> if .)
    CADENA_DE_CARACTERES reduce using rule 15 (cuerpo -> if .)
    VAR             reduce using rule 15 (cuerpo -> if .)
    VAL             reduce using rule 15 (cuerpo -> if .)
    DOUBLE          reduce using rule 15 (cuerpo -> if .)
    MAPOF           reduce using rule 15 (cuerpo -> if .)
    TRUE            reduce using rule 15 (cuerpo -> if .)
    FALSE           reduce using rule 15 (cuerpo -> if .)
    LISTOF          reduce using rule 15 (cuerpo -> if .)
    SETOF           reduce using rule 15 (cuerpo -> if .)
    $end            reduce using rule 15 (cuerpo -> if .)
    DLLAVE          reduce using rule 15 (cuerpo -> if .)
    RETURN          reduce using rule 15 (cuerpo -> if .)


state 16

    (16) cuerpo -> for .

    ID              reduce using rule 16 (cuerpo -> for .)
    PRINT           reduce using rule 16 (cuerpo -> for .)
    PRINTLN         reduce using rule 16 (cuerpo -> for .)
    READLINE        reduce using rule 16 (cuerpo -> for .)
    NEGATION        reduce using rule 16 (cuerpo -> for .)
    FUN             reduce using rule 16 (cuerpo -> for .)
    IF              reduce using rule 16 (cuerpo -> for .)
    FOR             reduce using rule 16 (cuerpo -> for .)
    WHILE           reduce using rule 16 (cuerpo -> for .)
    ENTERO          reduce using rule 16 (cuerpo -> for .)
    DECIMAL         reduce using rule 16 (cuerpo -> for .)
    CADENA_DE_CARACTERES reduce using rule 16 (cuerpo -> for .)
    VAR             reduce using rule 16 (cuerpo -> for .)
    VAL             reduce using rule 16 (cuerpo -> for .)
    DOUBLE          reduce using rule 16 (cuerpo -> for .)
    MAPOF           reduce using rule 16 (cuerpo -> for .)
    TRUE            reduce using rule 16 (cuerpo -> for .)
    FALSE           reduce using rule 16 (cuerpo -> for .)
    LISTOF          reduce using rule 16 (cuerpo -> for .)
    SETOF           reduce using rule 16 (cuerpo -> for .)
    $end            reduce using rule 16 (cuerpo -> for .)
    DLLAVE          reduce using rule 16 (cuerpo -> for .)
    RETURN          reduce using rule 16 (cuerpo -> for .)


state 17

    (17) cuerpo -> while .

    ID              reduce using rule 17 (cuerpo -> while .)
    PRINT           reduce using rule 17 (cuerpo -> while .)
    PRINTLN         reduce using rule 17 (cuerpo -> while .)
    READLINE        reduce using rule 17 (cuerpo -> while .)
    NEGATION        reduce using rule 17 (cuerpo -> while .)
    FUN             reduce using rule 17 (cuerpo -> while .)
    IF              reduce using rule 17 (cuerpo -> while .)
    FOR             reduce using rule 17 (cuerpo -> while .)
    WHILE           reduce using rule 17 (cuerpo -> while .)
    ENTERO          reduce using rule 17 (cuerpo -> while .)
    DECIMAL         reduce using rule 17 (cuerpo -> while .)
    CADENA_DE_CARACTERES reduce using rule 17 (cuerpo -> while .)
    VAR             reduce using rule 17 (cuerpo -> while .)
    VAL             reduce using rule 17 (cuerpo -> while .)
    DOUBLE          reduce using rule 17 (cuerpo -> while .)
    MAPOF           reduce using rule 17 (cuerpo -> while .)
    TRUE            reduce using rule 17 (cuerpo -> while .)
    FALSE           reduce using rule 17 (cuerpo -> while .)
    LISTOF          reduce using rule 17 (cuerpo -> while .)
    SETOF           reduce using rule 17 (cuerpo -> while .)
    $end            reduce using rule 17 (cuerpo -> while .)
    DLLAVE          reduce using rule 17 (cuerpo -> while .)
    RETURN          reduce using rule 17 (cuerpo -> while .)


state 18

    (18) cuerpo -> valorIncDec .

    ID              reduce using rule 18 (cuerpo -> valorIncDec .)
    PRINT           reduce using rule 18 (cuerpo -> valorIncDec .)
    PRINTLN         reduce using rule 18 (cuerpo -> valorIncDec .)
    READLINE        reduce using rule 18 (cuerpo -> valorIncDec .)
    NEGATION        reduce using rule 18 (cuerpo -> valorIncDec .)
    FUN             reduce using rule 18 (cuerpo -> valorIncDec .)
    IF              reduce using rule 18 (cuerpo -> valorIncDec .)
    FOR             reduce using rule 18 (cuerpo -> valorIncDec .)
    WHILE           reduce using rule 18 (cuerpo -> valorIncDec .)
    ENTERO          reduce using rule 18 (cuerpo -> valorIncDec .)
    DECIMAL         reduce using rule 18 (cuerpo -> valorIncDec .)
    CADENA_DE_CARACTERES reduce using rule 18 (cuerpo -> valorIncDec .)
    VAR             reduce using rule 18 (cuerpo -> valorIncDec .)
    VAL             reduce using rule 18 (cuerpo -> valorIncDec .)
    DOUBLE          reduce using rule 18 (cuerpo -> valorIncDec .)
    MAPOF           reduce using rule 18 (cuerpo -> valorIncDec .)
    TRUE            reduce using rule 18 (cuerpo -> valorIncDec .)
    FALSE           reduce using rule 18 (cuerpo -> valorIncDec .)
    LISTOF          reduce using rule 18 (cuerpo -> valorIncDec .)
    SETOF           reduce using rule 18 (cuerpo -> valorIncDec .)
    $end            reduce using rule 18 (cuerpo -> valorIncDec .)
    DLLAVE          reduce using rule 18 (cuerpo -> valorIncDec .)
    RETURN          reduce using rule 18 (cuerpo -> valorIncDec .)


state 19

    (19) cuerpo -> valorInDecAsignacion .

    ID              reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    PRINT           reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    PRINTLN         reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    READLINE        reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    NEGATION        reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    FUN             reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    IF              reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    FOR             reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    WHILE           reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    ENTERO          reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    DECIMAL         reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    CADENA_DE_CARACTERES reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    VAR             reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    VAL             reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    DOUBLE          reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    MAPOF           reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    TRUE            reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    FALSE           reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    LISTOF          reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    SETOF           reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    $end            reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    DLLAVE          reduce using rule 19 (cuerpo -> valorInDecAsignacion .)
    RETURN          reduce using rule 19 (cuerpo -> valorInDecAsignacion .)


state 20

    (20) cuerpo -> definicionVariables .

    ID              reduce using rule 20 (cuerpo -> definicionVariables .)
    PRINT           reduce using rule 20 (cuerpo -> definicionVariables .)
    PRINTLN         reduce using rule 20 (cuerpo -> definicionVariables .)
    READLINE        reduce using rule 20 (cuerpo -> definicionVariables .)
    NEGATION        reduce using rule 20 (cuerpo -> definicionVariables .)
    FUN             reduce using rule 20 (cuerpo -> definicionVariables .)
    IF              reduce using rule 20 (cuerpo -> definicionVariables .)
    FOR             reduce using rule 20 (cuerpo -> definicionVariables .)
    WHILE           reduce using rule 20 (cuerpo -> definicionVariables .)
    ENTERO          reduce using rule 20 (cuerpo -> definicionVariables .)
    DECIMAL         reduce using rule 20 (cuerpo -> definicionVariables .)
    CADENA_DE_CARACTERES reduce using rule 20 (cuerpo -> definicionVariables .)
    VAR             reduce using rule 20 (cuerpo -> definicionVariables .)
    VAL             reduce using rule 20 (cuerpo -> definicionVariables .)
    DOUBLE          reduce using rule 20 (cuerpo -> definicionVariables .)
    MAPOF           reduce using rule 20 (cuerpo -> definicionVariables .)
    TRUE            reduce using rule 20 (cuerpo -> definicionVariables .)
    FALSE           reduce using rule 20 (cuerpo -> definicionVariables .)
    LISTOF          reduce using rule 20 (cuerpo -> definicionVariables .)
    SETOF           reduce using rule 20 (cuerpo -> definicionVariables .)
    $end            reduce using rule 20 (cuerpo -> definicionVariables .)
    DLLAVE          reduce using rule 20 (cuerpo -> definicionVariables .)
    RETURN          reduce using rule 20 (cuerpo -> definicionVariables .)


state 21

    (21) cuerpo -> valor . operadorMat expresion
    (150) operadorMat -> . PLUS
    (151) operadorMat -> . MINUS
    (152) operadorMat -> . TIMES
    (153) operadorMat -> . DIVIDE

    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadorMat                    shift and go to state 54

state 22

    (22) cuerpo -> ID . operadorMat expresion
    (126) firstAndCap -> ID . PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> ID . PUNTO CAPITALIZE IPAR DPAR
    (30) valorIncDec -> ID . incrementoDec
    (29) valorInDecAsignacion -> ID . incDecAsignaacion ENTERO
    (139) definicionVariables -> ID . EQUALS valor
    (140) definicionVariables -> ID . EQUALS valorBoolean
    (148) elementoRelacional -> ID .
    (86) indexCol -> ID . ICOR ENTERO DCOR
    (87) indexCol -> ID . ICOR ID DCOR
    (88) slice -> ID . PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> ID . PUNTO SIZE
    (91) isEmpty -> ID . PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> ID . PUNTO KEYS
    (96) funMap -> ID . PUNTO VALUES
    (93) getMap -> ID . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> ID .
    (150) operadorMat -> . PLUS
    (151) operadorMat -> . MINUS
    (152) operadorMat -> . TIMES
    (153) operadorMat -> . DIVIDE
    (31) incrementoDec -> . MASMAS
    (32) incrementoDec -> . MENOSMENOS
    (33) incDecAsignaacion -> . MASIGUAL
    (34) incDecAsignaacion -> . MENOSIGUAL

    PUNTO           shift and go to state 60
    EQUALS          shift and go to state 63
    EQUAL           reduce using rule 148 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 148 (elementoRelacional -> ID .)
    LARGE           reduce using rule 148 (elementoRelacional -> ID .)
    SMALL           reduce using rule 148 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 148 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 148 (elementoRelacional -> ID .)
    ICOR            shift and go to state 64
    AND             reduce using rule 159 (boolID -> ID .)
    OR              reduce using rule 159 (boolID -> ID .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    MASMAS          shift and go to state 65
    MENOSMENOS      shift and go to state 66
    MASIGUAL        shift and go to state 67
    MENOSIGUAL      shift and go to state 68

    operadorMat                    shift and go to state 59
    incrementoDec                  shift and go to state 61
    incDecAsignaacion              shift and go to state 62

state 23

    (58) iniVariable -> variable . ID tipoDeDato
    (59) iniVariable -> variable . ID EQUALS valor
    (60) iniVariable -> variable . ID EQUALS valorBoolean
    (61) iniVariable -> variable . ID EQUALS expLogicas
    (62) iniVariable -> variable . ID EQUALS expresionRelacional
    (63) iniVariable -> variable . ID EQUALS funColecciones
    (64) iniVariable -> variable . ID EQUALS READLINE IPAR DPAR
    (125) readline -> variable . ID EQUALS READLINE IPAR DPAR
    (108) list -> variable . ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> variable . ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> variable . IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> variable . ID EQUALS MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 69
    IPAR            shift and go to state 70


state 24

    (149) elementoRelacional -> valorBoolean .
    (160) boolID -> valorBoolean .

    EQUAL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    AND             reduce using rule 160 (boolID -> valorBoolean .)
    OR              reduce using rule 160 (boolID -> valorBoolean .)


state 25

    (124) readline -> READLINE . IPAR DPAR

    IPAR            shift and go to state 71


state 26

    (145) expresionRelacional -> elementoRelacional . operadorRelacional elementoRelacional
    (165) operadorRelacional -> . EQUAL
    (166) operadorRelacional -> . NOTEQ
    (167) operadorRelacional -> . LARGE
    (168) operadorRelacional -> . SMALL
    (169) operadorRelacional -> . LRGEQ
    (170) operadorRelacional -> . SMLEQ

    EQUAL           shift and go to state 73
    NOTEQ           shift and go to state 74
    LARGE           shift and go to state 75
    SMALL           shift and go to state 76
    LRGEQ           shift and go to state 77
    SMLEQ           shift and go to state 78

    operadorRelacional             shift and go to state 72

state 27

    (65) imprimir -> PRINT . IPAR elementosPrint DPAR

    IPAR            shift and go to state 79


state 28

    (66) imprimir -> PRINTLN . IPAR elementosPrint DPAR

    IPAR            shift and go to state 80


state 29

    (119) coleccion -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 81


state 30

    (120) coleccion -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 82


state 31

    (97) funMap -> MAPOF . IPAR mapsElemento DPAR PUNTO VALUES
    (94) getMap -> MAPOF . IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (121) coleccion -> MAPOF . IPAR mapsElemento DPAR

    IPAR            shift and go to state 83


state 32

    (80) funColecciones -> indexCol .

    ID              reduce using rule 80 (funColecciones -> indexCol .)
    PRINT           reduce using rule 80 (funColecciones -> indexCol .)
    PRINTLN         reduce using rule 80 (funColecciones -> indexCol .)
    READLINE        reduce using rule 80 (funColecciones -> indexCol .)
    NEGATION        reduce using rule 80 (funColecciones -> indexCol .)
    FUN             reduce using rule 80 (funColecciones -> indexCol .)
    IF              reduce using rule 80 (funColecciones -> indexCol .)
    FOR             reduce using rule 80 (funColecciones -> indexCol .)
    WHILE           reduce using rule 80 (funColecciones -> indexCol .)
    ENTERO          reduce using rule 80 (funColecciones -> indexCol .)
    DECIMAL         reduce using rule 80 (funColecciones -> indexCol .)
    CADENA_DE_CARACTERES reduce using rule 80 (funColecciones -> indexCol .)
    VAR             reduce using rule 80 (funColecciones -> indexCol .)
    VAL             reduce using rule 80 (funColecciones -> indexCol .)
    DOUBLE          reduce using rule 80 (funColecciones -> indexCol .)
    MAPOF           reduce using rule 80 (funColecciones -> indexCol .)
    TRUE            reduce using rule 80 (funColecciones -> indexCol .)
    FALSE           reduce using rule 80 (funColecciones -> indexCol .)
    LISTOF          reduce using rule 80 (funColecciones -> indexCol .)
    SETOF           reduce using rule 80 (funColecciones -> indexCol .)
    $end            reduce using rule 80 (funColecciones -> indexCol .)
    DLLAVE          reduce using rule 80 (funColecciones -> indexCol .)
    RETURN          reduce using rule 80 (funColecciones -> indexCol .)
    DPAR            reduce using rule 80 (funColecciones -> indexCol .)


state 33

    (81) funColecciones -> slice .

    ID              reduce using rule 81 (funColecciones -> slice .)
    PRINT           reduce using rule 81 (funColecciones -> slice .)
    PRINTLN         reduce using rule 81 (funColecciones -> slice .)
    READLINE        reduce using rule 81 (funColecciones -> slice .)
    NEGATION        reduce using rule 81 (funColecciones -> slice .)
    FUN             reduce using rule 81 (funColecciones -> slice .)
    IF              reduce using rule 81 (funColecciones -> slice .)
    FOR             reduce using rule 81 (funColecciones -> slice .)
    WHILE           reduce using rule 81 (funColecciones -> slice .)
    ENTERO          reduce using rule 81 (funColecciones -> slice .)
    DECIMAL         reduce using rule 81 (funColecciones -> slice .)
    CADENA_DE_CARACTERES reduce using rule 81 (funColecciones -> slice .)
    VAR             reduce using rule 81 (funColecciones -> slice .)
    VAL             reduce using rule 81 (funColecciones -> slice .)
    DOUBLE          reduce using rule 81 (funColecciones -> slice .)
    MAPOF           reduce using rule 81 (funColecciones -> slice .)
    TRUE            reduce using rule 81 (funColecciones -> slice .)
    FALSE           reduce using rule 81 (funColecciones -> slice .)
    LISTOF          reduce using rule 81 (funColecciones -> slice .)
    SETOF           reduce using rule 81 (funColecciones -> slice .)
    $end            reduce using rule 81 (funColecciones -> slice .)
    DLLAVE          reduce using rule 81 (funColecciones -> slice .)
    RETURN          reduce using rule 81 (funColecciones -> slice .)
    DPAR            reduce using rule 81 (funColecciones -> slice .)


state 34

    (82) funColecciones -> size .

    ID              reduce using rule 82 (funColecciones -> size .)
    PRINT           reduce using rule 82 (funColecciones -> size .)
    PRINTLN         reduce using rule 82 (funColecciones -> size .)
    READLINE        reduce using rule 82 (funColecciones -> size .)
    NEGATION        reduce using rule 82 (funColecciones -> size .)
    FUN             reduce using rule 82 (funColecciones -> size .)
    IF              reduce using rule 82 (funColecciones -> size .)
    FOR             reduce using rule 82 (funColecciones -> size .)
    WHILE           reduce using rule 82 (funColecciones -> size .)
    ENTERO          reduce using rule 82 (funColecciones -> size .)
    DECIMAL         reduce using rule 82 (funColecciones -> size .)
    CADENA_DE_CARACTERES reduce using rule 82 (funColecciones -> size .)
    VAR             reduce using rule 82 (funColecciones -> size .)
    VAL             reduce using rule 82 (funColecciones -> size .)
    DOUBLE          reduce using rule 82 (funColecciones -> size .)
    MAPOF           reduce using rule 82 (funColecciones -> size .)
    TRUE            reduce using rule 82 (funColecciones -> size .)
    FALSE           reduce using rule 82 (funColecciones -> size .)
    LISTOF          reduce using rule 82 (funColecciones -> size .)
    SETOF           reduce using rule 82 (funColecciones -> size .)
    $end            reduce using rule 82 (funColecciones -> size .)
    DLLAVE          reduce using rule 82 (funColecciones -> size .)
    RETURN          reduce using rule 82 (funColecciones -> size .)
    DPAR            reduce using rule 82 (funColecciones -> size .)


state 35

    (83) funColecciones -> isEmpty .

    ID              reduce using rule 83 (funColecciones -> isEmpty .)
    PRINT           reduce using rule 83 (funColecciones -> isEmpty .)
    PRINTLN         reduce using rule 83 (funColecciones -> isEmpty .)
    READLINE        reduce using rule 83 (funColecciones -> isEmpty .)
    NEGATION        reduce using rule 83 (funColecciones -> isEmpty .)
    FUN             reduce using rule 83 (funColecciones -> isEmpty .)
    IF              reduce using rule 83 (funColecciones -> isEmpty .)
    FOR             reduce using rule 83 (funColecciones -> isEmpty .)
    WHILE           reduce using rule 83 (funColecciones -> isEmpty .)
    ENTERO          reduce using rule 83 (funColecciones -> isEmpty .)
    DECIMAL         reduce using rule 83 (funColecciones -> isEmpty .)
    CADENA_DE_CARACTERES reduce using rule 83 (funColecciones -> isEmpty .)
    VAR             reduce using rule 83 (funColecciones -> isEmpty .)
    VAL             reduce using rule 83 (funColecciones -> isEmpty .)
    DOUBLE          reduce using rule 83 (funColecciones -> isEmpty .)
    MAPOF           reduce using rule 83 (funColecciones -> isEmpty .)
    TRUE            reduce using rule 83 (funColecciones -> isEmpty .)
    FALSE           reduce using rule 83 (funColecciones -> isEmpty .)
    LISTOF          reduce using rule 83 (funColecciones -> isEmpty .)
    SETOF           reduce using rule 83 (funColecciones -> isEmpty .)
    $end            reduce using rule 83 (funColecciones -> isEmpty .)
    DLLAVE          reduce using rule 83 (funColecciones -> isEmpty .)
    RETURN          reduce using rule 83 (funColecciones -> isEmpty .)
    DPAR            reduce using rule 83 (funColecciones -> isEmpty .)


state 36

    (84) funColecciones -> funMap .

    ID              reduce using rule 84 (funColecciones -> funMap .)
    PRINT           reduce using rule 84 (funColecciones -> funMap .)
    PRINTLN         reduce using rule 84 (funColecciones -> funMap .)
    READLINE        reduce using rule 84 (funColecciones -> funMap .)
    NEGATION        reduce using rule 84 (funColecciones -> funMap .)
    FUN             reduce using rule 84 (funColecciones -> funMap .)
    IF              reduce using rule 84 (funColecciones -> funMap .)
    FOR             reduce using rule 84 (funColecciones -> funMap .)
    WHILE           reduce using rule 84 (funColecciones -> funMap .)
    ENTERO          reduce using rule 84 (funColecciones -> funMap .)
    DECIMAL         reduce using rule 84 (funColecciones -> funMap .)
    CADENA_DE_CARACTERES reduce using rule 84 (funColecciones -> funMap .)
    VAR             reduce using rule 84 (funColecciones -> funMap .)
    VAL             reduce using rule 84 (funColecciones -> funMap .)
    DOUBLE          reduce using rule 84 (funColecciones -> funMap .)
    MAPOF           reduce using rule 84 (funColecciones -> funMap .)
    TRUE            reduce using rule 84 (funColecciones -> funMap .)
    FALSE           reduce using rule 84 (funColecciones -> funMap .)
    LISTOF          reduce using rule 84 (funColecciones -> funMap .)
    SETOF           reduce using rule 84 (funColecciones -> funMap .)
    $end            reduce using rule 84 (funColecciones -> funMap .)
    DLLAVE          reduce using rule 84 (funColecciones -> funMap .)
    RETURN          reduce using rule 84 (funColecciones -> funMap .)
    DPAR            reduce using rule 84 (funColecciones -> funMap .)


state 37

    (85) funColecciones -> getMap .

    ID              reduce using rule 85 (funColecciones -> getMap .)
    PRINT           reduce using rule 85 (funColecciones -> getMap .)
    PRINTLN         reduce using rule 85 (funColecciones -> getMap .)
    READLINE        reduce using rule 85 (funColecciones -> getMap .)
    NEGATION        reduce using rule 85 (funColecciones -> getMap .)
    FUN             reduce using rule 85 (funColecciones -> getMap .)
    IF              reduce using rule 85 (funColecciones -> getMap .)
    FOR             reduce using rule 85 (funColecciones -> getMap .)
    WHILE           reduce using rule 85 (funColecciones -> getMap .)
    ENTERO          reduce using rule 85 (funColecciones -> getMap .)
    DECIMAL         reduce using rule 85 (funColecciones -> getMap .)
    CADENA_DE_CARACTERES reduce using rule 85 (funColecciones -> getMap .)
    VAR             reduce using rule 85 (funColecciones -> getMap .)
    VAL             reduce using rule 85 (funColecciones -> getMap .)
    DOUBLE          reduce using rule 85 (funColecciones -> getMap .)
    MAPOF           reduce using rule 85 (funColecciones -> getMap .)
    TRUE            reduce using rule 85 (funColecciones -> getMap .)
    FALSE           reduce using rule 85 (funColecciones -> getMap .)
    LISTOF          reduce using rule 85 (funColecciones -> getMap .)
    SETOF           reduce using rule 85 (funColecciones -> getMap .)
    $end            reduce using rule 85 (funColecciones -> getMap .)
    DLLAVE          reduce using rule 85 (funColecciones -> getMap .)
    RETURN          reduce using rule 85 (funColecciones -> getMap .)


state 38

    (157) expLogicas -> boolID . opLogico boolID
    (161) opLogico -> . AND
    (162) opLogico -> . OR

    AND             shift and go to state 85
    OR              shift and go to state 86

    opLogico                       shift and go to state 84

state 39

    (158) expLogicas -> NEGATION . boolID
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE

    ID              shift and go to state 88
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    boolID                         shift and go to state 87
    valorBoolean                   shift and go to state 89

state 40

    (23) fun -> FUN . ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> FUN . ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> FUN . ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> FUN . ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> FUN . ID IPAR entrada_fun DPAR EQUALS return

    ID              shift and go to state 90


state 41

    (39) if -> IF . IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> IF . IPAR entradaIf DPAR return
    (41) if -> IF . IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> IF . IPAR entradaIf DPAR return else

    IPAR            shift and go to state 91


state 42

    (35) for -> FOR . condicionFor ILLAVE algoritmo DLLAVE
    (36) condicionFor -> . IPAR ID IN ID DPAR
    (37) condicionFor -> . IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR
    (38) condicionFor -> . IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    IPAR            shift and go to state 93

    condicionFor                   shift and go to state 92

state 43

    (28) while -> WHILE . IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE

    IPAR            shift and go to state 94


state 44

    (154) valor -> ENTERO .
    (146) elementoRelacional -> ENTERO .

    PLUS            reduce using rule 154 (valor -> ENTERO .)
    MINUS           reduce using rule 154 (valor -> ENTERO .)
    TIMES           reduce using rule 154 (valor -> ENTERO .)
    DIVIDE          reduce using rule 154 (valor -> ENTERO .)
    DPAR            reduce using rule 154 (valor -> ENTERO .)
    COMA            reduce using rule 154 (valor -> ENTERO .)
    ID              reduce using rule 154 (valor -> ENTERO .)
    PRINT           reduce using rule 154 (valor -> ENTERO .)
    PRINTLN         reduce using rule 154 (valor -> ENTERO .)
    READLINE        reduce using rule 154 (valor -> ENTERO .)
    NEGATION        reduce using rule 154 (valor -> ENTERO .)
    FUN             reduce using rule 154 (valor -> ENTERO .)
    IF              reduce using rule 154 (valor -> ENTERO .)
    FOR             reduce using rule 154 (valor -> ENTERO .)
    WHILE           reduce using rule 154 (valor -> ENTERO .)
    ENTERO          reduce using rule 154 (valor -> ENTERO .)
    DECIMAL         reduce using rule 154 (valor -> ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 154 (valor -> ENTERO .)
    VAR             reduce using rule 154 (valor -> ENTERO .)
    VAL             reduce using rule 154 (valor -> ENTERO .)
    DOUBLE          reduce using rule 154 (valor -> ENTERO .)
    MAPOF           reduce using rule 154 (valor -> ENTERO .)
    TRUE            reduce using rule 154 (valor -> ENTERO .)
    FALSE           reduce using rule 154 (valor -> ENTERO .)
    LISTOF          reduce using rule 154 (valor -> ENTERO .)
    SETOF           reduce using rule 154 (valor -> ENTERO .)
    $end            reduce using rule 154 (valor -> ENTERO .)
    DLLAVE          reduce using rule 154 (valor -> ENTERO .)
    RETURN          reduce using rule 154 (valor -> ENTERO .)
    ELSE            reduce using rule 154 (valor -> ENTERO .)
    EQUAL           reduce using rule 146 (elementoRelacional -> ENTERO .)
    NOTEQ           reduce using rule 146 (elementoRelacional -> ENTERO .)
    LARGE           reduce using rule 146 (elementoRelacional -> ENTERO .)
    SMALL           reduce using rule 146 (elementoRelacional -> ENTERO .)
    LRGEQ           reduce using rule 146 (elementoRelacional -> ENTERO .)
    SMLEQ           reduce using rule 146 (elementoRelacional -> ENTERO .)


state 45

    (155) valor -> DECIMAL .

    PLUS            reduce using rule 155 (valor -> DECIMAL .)
    MINUS           reduce using rule 155 (valor -> DECIMAL .)
    TIMES           reduce using rule 155 (valor -> DECIMAL .)
    DIVIDE          reduce using rule 155 (valor -> DECIMAL .)
    ID              reduce using rule 155 (valor -> DECIMAL .)
    PRINT           reduce using rule 155 (valor -> DECIMAL .)
    PRINTLN         reduce using rule 155 (valor -> DECIMAL .)
    READLINE        reduce using rule 155 (valor -> DECIMAL .)
    NEGATION        reduce using rule 155 (valor -> DECIMAL .)
    FUN             reduce using rule 155 (valor -> DECIMAL .)
    IF              reduce using rule 155 (valor -> DECIMAL .)
    FOR             reduce using rule 155 (valor -> DECIMAL .)
    WHILE           reduce using rule 155 (valor -> DECIMAL .)
    ENTERO          reduce using rule 155 (valor -> DECIMAL .)
    DECIMAL         reduce using rule 155 (valor -> DECIMAL .)
    CADENA_DE_CARACTERES reduce using rule 155 (valor -> DECIMAL .)
    VAR             reduce using rule 155 (valor -> DECIMAL .)
    VAL             reduce using rule 155 (valor -> DECIMAL .)
    DOUBLE          reduce using rule 155 (valor -> DECIMAL .)
    MAPOF           reduce using rule 155 (valor -> DECIMAL .)
    TRUE            reduce using rule 155 (valor -> DECIMAL .)
    FALSE           reduce using rule 155 (valor -> DECIMAL .)
    LISTOF          reduce using rule 155 (valor -> DECIMAL .)
    SETOF           reduce using rule 155 (valor -> DECIMAL .)
    $end            reduce using rule 155 (valor -> DECIMAL .)
    DLLAVE          reduce using rule 155 (valor -> DECIMAL .)
    RETURN          reduce using rule 155 (valor -> DECIMAL .)
    DPAR            reduce using rule 155 (valor -> DECIMAL .)
    COMA            reduce using rule 155 (valor -> DECIMAL .)
    ELSE            reduce using rule 155 (valor -> DECIMAL .)


state 46

    (156) valor -> CADENA_DE_CARACTERES .

    PLUS            reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    MINUS           reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    TIMES           reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    DIVIDE          reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    ID              reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    PRINT           reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    PRINTLN         reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    READLINE        reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    NEGATION        reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    FUN             reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    IF              reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    FOR             reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    WHILE           reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    ENTERO          reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    DECIMAL         reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    CADENA_DE_CARACTERES reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    VAR             reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    VAL             reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    DOUBLE          reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    MAPOF           reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    TRUE            reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    FALSE           reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    LISTOF          reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    SETOF           reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    $end            reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    DLLAVE          reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    RETURN          reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    DPAR            reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    COMA            reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)
    ELSE            reduce using rule 156 (valor -> CADENA_DE_CARACTERES .)


state 47

    (122) variable -> VAR .

    ID              reduce using rule 122 (variable -> VAR .)
    IPAR            reduce using rule 122 (variable -> VAR .)


state 48

    (123) variable -> VAL .

    ID              reduce using rule 123 (variable -> VAL .)
    IPAR            reduce using rule 123 (variable -> VAL .)


state 49

    (147) elementoRelacional -> DOUBLE .

    EQUAL           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    NOTEQ           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    LARGE           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    SMALL           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    LRGEQ           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    SMLEQ           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    ID              reduce using rule 147 (elementoRelacional -> DOUBLE .)
    PRINT           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    PRINTLN         reduce using rule 147 (elementoRelacional -> DOUBLE .)
    READLINE        reduce using rule 147 (elementoRelacional -> DOUBLE .)
    NEGATION        reduce using rule 147 (elementoRelacional -> DOUBLE .)
    FUN             reduce using rule 147 (elementoRelacional -> DOUBLE .)
    IF              reduce using rule 147 (elementoRelacional -> DOUBLE .)
    FOR             reduce using rule 147 (elementoRelacional -> DOUBLE .)
    WHILE           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    ENTERO          reduce using rule 147 (elementoRelacional -> DOUBLE .)
    DECIMAL         reduce using rule 147 (elementoRelacional -> DOUBLE .)
    CADENA_DE_CARACTERES reduce using rule 147 (elementoRelacional -> DOUBLE .)
    VAR             reduce using rule 147 (elementoRelacional -> DOUBLE .)
    VAL             reduce using rule 147 (elementoRelacional -> DOUBLE .)
    DOUBLE          reduce using rule 147 (elementoRelacional -> DOUBLE .)
    MAPOF           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    TRUE            reduce using rule 147 (elementoRelacional -> DOUBLE .)
    FALSE           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    LISTOF          reduce using rule 147 (elementoRelacional -> DOUBLE .)
    SETOF           reduce using rule 147 (elementoRelacional -> DOUBLE .)
    $end            reduce using rule 147 (elementoRelacional -> DOUBLE .)
    DLLAVE          reduce using rule 147 (elementoRelacional -> DOUBLE .)
    RETURN          reduce using rule 147 (elementoRelacional -> DOUBLE .)
    DPAR            reduce using rule 147 (elementoRelacional -> DOUBLE .)
    ELSE            reduce using rule 147 (elementoRelacional -> DOUBLE .)


state 50

    (90) size -> coleccion . PUNTO SIZE
    (92) isEmpty -> coleccion . PUNTO ISEMPTY IPAR DPAR

    PUNTO           shift and go to state 95


state 51

    (163) valorBoolean -> TRUE .

    EQUAL           reduce using rule 163 (valorBoolean -> TRUE .)
    NOTEQ           reduce using rule 163 (valorBoolean -> TRUE .)
    LARGE           reduce using rule 163 (valorBoolean -> TRUE .)
    SMALL           reduce using rule 163 (valorBoolean -> TRUE .)
    LRGEQ           reduce using rule 163 (valorBoolean -> TRUE .)
    SMLEQ           reduce using rule 163 (valorBoolean -> TRUE .)
    AND             reduce using rule 163 (valorBoolean -> TRUE .)
    OR              reduce using rule 163 (valorBoolean -> TRUE .)
    ID              reduce using rule 163 (valorBoolean -> TRUE .)
    PRINT           reduce using rule 163 (valorBoolean -> TRUE .)
    PRINTLN         reduce using rule 163 (valorBoolean -> TRUE .)
    READLINE        reduce using rule 163 (valorBoolean -> TRUE .)
    NEGATION        reduce using rule 163 (valorBoolean -> TRUE .)
    FUN             reduce using rule 163 (valorBoolean -> TRUE .)
    IF              reduce using rule 163 (valorBoolean -> TRUE .)
    FOR             reduce using rule 163 (valorBoolean -> TRUE .)
    WHILE           reduce using rule 163 (valorBoolean -> TRUE .)
    ENTERO          reduce using rule 163 (valorBoolean -> TRUE .)
    DECIMAL         reduce using rule 163 (valorBoolean -> TRUE .)
    CADENA_DE_CARACTERES reduce using rule 163 (valorBoolean -> TRUE .)
    VAR             reduce using rule 163 (valorBoolean -> TRUE .)
    VAL             reduce using rule 163 (valorBoolean -> TRUE .)
    DOUBLE          reduce using rule 163 (valorBoolean -> TRUE .)
    MAPOF           reduce using rule 163 (valorBoolean -> TRUE .)
    TRUE            reduce using rule 163 (valorBoolean -> TRUE .)
    FALSE           reduce using rule 163 (valorBoolean -> TRUE .)
    LISTOF          reduce using rule 163 (valorBoolean -> TRUE .)
    SETOF           reduce using rule 163 (valorBoolean -> TRUE .)
    $end            reduce using rule 163 (valorBoolean -> TRUE .)
    DLLAVE          reduce using rule 163 (valorBoolean -> TRUE .)
    RETURN          reduce using rule 163 (valorBoolean -> TRUE .)
    DPAR            reduce using rule 163 (valorBoolean -> TRUE .)
    ELSE            reduce using rule 163 (valorBoolean -> TRUE .)
    COMA            reduce using rule 163 (valorBoolean -> TRUE .)


state 52

    (164) valorBoolean -> FALSE .

    EQUAL           reduce using rule 164 (valorBoolean -> FALSE .)
    NOTEQ           reduce using rule 164 (valorBoolean -> FALSE .)
    LARGE           reduce using rule 164 (valorBoolean -> FALSE .)
    SMALL           reduce using rule 164 (valorBoolean -> FALSE .)
    LRGEQ           reduce using rule 164 (valorBoolean -> FALSE .)
    SMLEQ           reduce using rule 164 (valorBoolean -> FALSE .)
    AND             reduce using rule 164 (valorBoolean -> FALSE .)
    OR              reduce using rule 164 (valorBoolean -> FALSE .)
    ID              reduce using rule 164 (valorBoolean -> FALSE .)
    PRINT           reduce using rule 164 (valorBoolean -> FALSE .)
    PRINTLN         reduce using rule 164 (valorBoolean -> FALSE .)
    READLINE        reduce using rule 164 (valorBoolean -> FALSE .)
    NEGATION        reduce using rule 164 (valorBoolean -> FALSE .)
    FUN             reduce using rule 164 (valorBoolean -> FALSE .)
    IF              reduce using rule 164 (valorBoolean -> FALSE .)
    FOR             reduce using rule 164 (valorBoolean -> FALSE .)
    WHILE           reduce using rule 164 (valorBoolean -> FALSE .)
    ENTERO          reduce using rule 164 (valorBoolean -> FALSE .)
    DECIMAL         reduce using rule 164 (valorBoolean -> FALSE .)
    CADENA_DE_CARACTERES reduce using rule 164 (valorBoolean -> FALSE .)
    VAR             reduce using rule 164 (valorBoolean -> FALSE .)
    VAL             reduce using rule 164 (valorBoolean -> FALSE .)
    DOUBLE          reduce using rule 164 (valorBoolean -> FALSE .)
    MAPOF           reduce using rule 164 (valorBoolean -> FALSE .)
    TRUE            reduce using rule 164 (valorBoolean -> FALSE .)
    FALSE           reduce using rule 164 (valorBoolean -> FALSE .)
    LISTOF          reduce using rule 164 (valorBoolean -> FALSE .)
    SETOF           reduce using rule 164 (valorBoolean -> FALSE .)
    $end            reduce using rule 164 (valorBoolean -> FALSE .)
    DLLAVE          reduce using rule 164 (valorBoolean -> FALSE .)
    RETURN          reduce using rule 164 (valorBoolean -> FALSE .)
    DPAR            reduce using rule 164 (valorBoolean -> FALSE .)
    ELSE            reduce using rule 164 (valorBoolean -> FALSE .)
    COMA            reduce using rule 164 (valorBoolean -> FALSE .)


state 53

    (2) algoritmo -> cuerpo algoritmo .

    $end            reduce using rule 2 (algoritmo -> cuerpo algoritmo .)
    DLLAVE          reduce using rule 2 (algoritmo -> cuerpo algoritmo .)
    RETURN          reduce using rule 2 (algoritmo -> cuerpo algoritmo .)


state 54

    (21) cuerpo -> valor operadorMat . expresion
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 98
    ENTERO          shift and go to state 99
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46

    valor                          shift and go to state 96
    expresion                      shift and go to state 97

state 55

    (150) operadorMat -> PLUS .

    ID              reduce using rule 150 (operadorMat -> PLUS .)
    ENTERO          reduce using rule 150 (operadorMat -> PLUS .)
    DECIMAL         reduce using rule 150 (operadorMat -> PLUS .)
    CADENA_DE_CARACTERES reduce using rule 150 (operadorMat -> PLUS .)


state 56

    (151) operadorMat -> MINUS .

    ID              reduce using rule 151 (operadorMat -> MINUS .)
    ENTERO          reduce using rule 151 (operadorMat -> MINUS .)
    DECIMAL         reduce using rule 151 (operadorMat -> MINUS .)
    CADENA_DE_CARACTERES reduce using rule 151 (operadorMat -> MINUS .)


state 57

    (152) operadorMat -> TIMES .

    ID              reduce using rule 152 (operadorMat -> TIMES .)
    ENTERO          reduce using rule 152 (operadorMat -> TIMES .)
    DECIMAL         reduce using rule 152 (operadorMat -> TIMES .)
    CADENA_DE_CARACTERES reduce using rule 152 (operadorMat -> TIMES .)


state 58

    (153) operadorMat -> DIVIDE .

    ID              reduce using rule 153 (operadorMat -> DIVIDE .)
    ENTERO          reduce using rule 153 (operadorMat -> DIVIDE .)
    DECIMAL         reduce using rule 153 (operadorMat -> DIVIDE .)
    CADENA_DE_CARACTERES reduce using rule 153 (operadorMat -> DIVIDE .)


state 59

    (22) cuerpo -> ID operadorMat . expresion
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 98
    ENTERO          shift and go to state 99
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46

    expresion                      shift and go to state 100
    valor                          shift and go to state 96

state 60

    (126) firstAndCap -> ID PUNTO . FIRST IPAR DPAR
    (127) firstAndCap -> ID PUNTO . CAPITALIZE IPAR DPAR
    (88) slice -> ID PUNTO . SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> ID PUNTO . SIZE
    (91) isEmpty -> ID PUNTO . ISEMPTY IPAR DPAR
    (95) funMap -> ID PUNTO . KEYS
    (96) funMap -> ID PUNTO . VALUES
    (93) getMap -> ID PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    FIRST           shift and go to state 101
    CAPITALIZE      shift and go to state 102
    SLICE           shift and go to state 103
    SIZE            shift and go to state 104
    ISEMPTY         shift and go to state 105
    KEYS            shift and go to state 106
    VALUES          shift and go to state 107
    GET             shift and go to state 108


state 61

    (30) valorIncDec -> ID incrementoDec .

    ID              reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    PRINT           reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    PRINTLN         reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    READLINE        reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    NEGATION        reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    FUN             reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    IF              reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    FOR             reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    WHILE           reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    ENTERO          reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    DECIMAL         reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    CADENA_DE_CARACTERES reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    VAR             reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    VAL             reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    DOUBLE          reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    MAPOF           reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    TRUE            reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    FALSE           reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    LISTOF          reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    SETOF           reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    $end            reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    DLLAVE          reduce using rule 30 (valorIncDec -> ID incrementoDec .)
    RETURN          reduce using rule 30 (valorIncDec -> ID incrementoDec .)


state 62

    (29) valorInDecAsignacion -> ID incDecAsignaacion . ENTERO

    ENTERO          shift and go to state 109


state 63

    (139) definicionVariables -> ID EQUALS . valor
    (140) definicionVariables -> ID EQUALS . valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE

    ENTERO          shift and go to state 99
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    valor                          shift and go to state 110
    valorBoolean                   shift and go to state 111

state 64

    (86) indexCol -> ID ICOR . ENTERO DCOR
    (87) indexCol -> ID ICOR . ID DCOR

    ENTERO          shift and go to state 113
    ID              shift and go to state 112


state 65

    (31) incrementoDec -> MASMAS .

    ID              reduce using rule 31 (incrementoDec -> MASMAS .)
    PRINT           reduce using rule 31 (incrementoDec -> MASMAS .)
    PRINTLN         reduce using rule 31 (incrementoDec -> MASMAS .)
    READLINE        reduce using rule 31 (incrementoDec -> MASMAS .)
    NEGATION        reduce using rule 31 (incrementoDec -> MASMAS .)
    FUN             reduce using rule 31 (incrementoDec -> MASMAS .)
    IF              reduce using rule 31 (incrementoDec -> MASMAS .)
    FOR             reduce using rule 31 (incrementoDec -> MASMAS .)
    WHILE           reduce using rule 31 (incrementoDec -> MASMAS .)
    ENTERO          reduce using rule 31 (incrementoDec -> MASMAS .)
    DECIMAL         reduce using rule 31 (incrementoDec -> MASMAS .)
    CADENA_DE_CARACTERES reduce using rule 31 (incrementoDec -> MASMAS .)
    VAR             reduce using rule 31 (incrementoDec -> MASMAS .)
    VAL             reduce using rule 31 (incrementoDec -> MASMAS .)
    DOUBLE          reduce using rule 31 (incrementoDec -> MASMAS .)
    MAPOF           reduce using rule 31 (incrementoDec -> MASMAS .)
    TRUE            reduce using rule 31 (incrementoDec -> MASMAS .)
    FALSE           reduce using rule 31 (incrementoDec -> MASMAS .)
    LISTOF          reduce using rule 31 (incrementoDec -> MASMAS .)
    SETOF           reduce using rule 31 (incrementoDec -> MASMAS .)
    $end            reduce using rule 31 (incrementoDec -> MASMAS .)
    DLLAVE          reduce using rule 31 (incrementoDec -> MASMAS .)
    RETURN          reduce using rule 31 (incrementoDec -> MASMAS .)


state 66

    (32) incrementoDec -> MENOSMENOS .

    ID              reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    PRINT           reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    PRINTLN         reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    READLINE        reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    NEGATION        reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    FUN             reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    IF              reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    FOR             reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    WHILE           reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    ENTERO          reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    DECIMAL         reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    CADENA_DE_CARACTERES reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    VAR             reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    VAL             reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    DOUBLE          reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    MAPOF           reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    TRUE            reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    FALSE           reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    LISTOF          reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    SETOF           reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    $end            reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    DLLAVE          reduce using rule 32 (incrementoDec -> MENOSMENOS .)
    RETURN          reduce using rule 32 (incrementoDec -> MENOSMENOS .)


state 67

    (33) incDecAsignaacion -> MASIGUAL .

    ENTERO          reduce using rule 33 (incDecAsignaacion -> MASIGUAL .)


state 68

    (34) incDecAsignaacion -> MENOSIGUAL .

    ENTERO          reduce using rule 34 (incDecAsignaacion -> MENOSIGUAL .)


state 69

    (58) iniVariable -> variable ID . tipoDeDato
    (59) iniVariable -> variable ID . EQUALS valor
    (60) iniVariable -> variable ID . EQUALS valorBoolean
    (61) iniVariable -> variable ID . EQUALS expLogicas
    (62) iniVariable -> variable ID . EQUALS expresionRelacional
    (63) iniVariable -> variable ID . EQUALS funColecciones
    (64) iniVariable -> variable ID . EQUALS READLINE IPAR DPAR
    (125) readline -> variable ID . EQUALS READLINE IPAR DPAR
    (108) list -> variable ID . EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> variable ID . EQUALS SETOF IPAR listElementos DPAR
    (98) maps -> variable ID . EQUALS MAPOF IPAR mapsElemento DPAR
    (128) tipoDeDato -> . DOSPUNTOS INT EQUALS ENTERO
    (129) tipoDeDato -> . DOSPUNTOS DOUBLE EQUALS DECIMAL
    (130) tipoDeDato -> . DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES
    (131) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS valorBoolean
    (132) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS expLogicas
    (133) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS expresionRelacional
    (134) tipoDeDato -> . tipoDeDato2
    (135) tipoDeDato2 -> . DOSPUNTOS INT
    (136) tipoDeDato2 -> . DOSPUNTOS DOUBLE
    (137) tipoDeDato2 -> . DOSPUNTOS STRING
    (138) tipoDeDato2 -> . DOSPUNTOS BOOLEAN

    EQUALS          shift and go to state 115
    DOSPUNTOS       shift and go to state 116

    tipoDeDato                     shift and go to state 114
    tipoDeDato2                    shift and go to state 117

state 70

    (101) tupla -> variable IPAR . ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    ID              shift and go to state 118


state 71

    (124) readline -> READLINE IPAR . DPAR

    DPAR            shift and go to state 119


state 72

    (145) expresionRelacional -> elementoRelacional operadorRelacional . elementoRelacional
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE

    ENTERO          shift and go to state 121
    DOUBLE          shift and go to state 49
    ID              shift and go to state 122
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    elementoRelacional             shift and go to state 120
    valorBoolean                   shift and go to state 123

state 73

    (165) operadorRelacional -> EQUAL .

    ENTERO          reduce using rule 165 (operadorRelacional -> EQUAL .)
    DOUBLE          reduce using rule 165 (operadorRelacional -> EQUAL .)
    ID              reduce using rule 165 (operadorRelacional -> EQUAL .)
    TRUE            reduce using rule 165 (operadorRelacional -> EQUAL .)
    FALSE           reduce using rule 165 (operadorRelacional -> EQUAL .)


state 74

    (166) operadorRelacional -> NOTEQ .

    ENTERO          reduce using rule 166 (operadorRelacional -> NOTEQ .)
    DOUBLE          reduce using rule 166 (operadorRelacional -> NOTEQ .)
    ID              reduce using rule 166 (operadorRelacional -> NOTEQ .)
    TRUE            reduce using rule 166 (operadorRelacional -> NOTEQ .)
    FALSE           reduce using rule 166 (operadorRelacional -> NOTEQ .)


state 75

    (167) operadorRelacional -> LARGE .

    ENTERO          reduce using rule 167 (operadorRelacional -> LARGE .)
    DOUBLE          reduce using rule 167 (operadorRelacional -> LARGE .)
    ID              reduce using rule 167 (operadorRelacional -> LARGE .)
    TRUE            reduce using rule 167 (operadorRelacional -> LARGE .)
    FALSE           reduce using rule 167 (operadorRelacional -> LARGE .)


state 76

    (168) operadorRelacional -> SMALL .

    ENTERO          reduce using rule 168 (operadorRelacional -> SMALL .)
    DOUBLE          reduce using rule 168 (operadorRelacional -> SMALL .)
    ID              reduce using rule 168 (operadorRelacional -> SMALL .)
    TRUE            reduce using rule 168 (operadorRelacional -> SMALL .)
    FALSE           reduce using rule 168 (operadorRelacional -> SMALL .)


state 77

    (169) operadorRelacional -> LRGEQ .

    ENTERO          reduce using rule 169 (operadorRelacional -> LRGEQ .)
    DOUBLE          reduce using rule 169 (operadorRelacional -> LRGEQ .)
    ID              reduce using rule 169 (operadorRelacional -> LRGEQ .)
    TRUE            reduce using rule 169 (operadorRelacional -> LRGEQ .)
    FALSE           reduce using rule 169 (operadorRelacional -> LRGEQ .)


state 78

    (170) operadorRelacional -> SMLEQ .

    ENTERO          reduce using rule 170 (operadorRelacional -> SMLEQ .)
    DOUBLE          reduce using rule 170 (operadorRelacional -> SMLEQ .)
    ID              reduce using rule 170 (operadorRelacional -> SMLEQ .)
    TRUE            reduce using rule 170 (operadorRelacional -> SMLEQ .)
    FALSE           reduce using rule 170 (operadorRelacional -> SMLEQ .)


state 79

    (65) imprimir -> PRINT IPAR . elementosPrint DPAR
    (67) elementosPrint -> . funColecciones
    (68) elementosPrint -> . coleccion
    (69) elementosPrint -> . expresion
    (70) elementosPrint -> . valorBoolean
    (71) elementosPrint -> . expLogicas
    (72) elementosPrint -> . expresionRelacional
    (73) elementosPrint -> . imprimirColecciones
    (74) elementosPrint -> . firstAndCap
    (75) elementosPrint -> . getMap
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (76) imprimirColecciones -> . PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) imprimirColecciones -> . MAPOF IPAR mapsElemento DPAR
    (78) imprimirColecciones -> . LISTOF IPAR listElementos DPAR
    (79) imprimirColecciones -> . SETOF IPAR listElementos DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean

    LISTOF          shift and go to state 134
    SETOF           shift and go to state 135
    MAPOF           shift and go to state 136
    ID              shift and go to state 137
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    PAIR            shift and go to state 138
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    DOUBLE          shift and go to state 49

    elementosPrint                 shift and go to state 124
    funColecciones                 shift and go to state 125
    coleccion                      shift and go to state 126
    expresion                      shift and go to state 127
    valorBoolean                   shift and go to state 128
    expLogicas                     shift and go to state 129
    expresionRelacional            shift and go to state 130
    imprimirColecciones            shift and go to state 131
    firstAndCap                    shift and go to state 132
    getMap                         shift and go to state 133
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    valor                          shift and go to state 96
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 26

state 80

    (66) imprimir -> PRINTLN IPAR . elementosPrint DPAR
    (67) elementosPrint -> . funColecciones
    (68) elementosPrint -> . coleccion
    (69) elementosPrint -> . expresion
    (70) elementosPrint -> . valorBoolean
    (71) elementosPrint -> . expLogicas
    (72) elementosPrint -> . expresionRelacional
    (73) elementosPrint -> . imprimirColecciones
    (74) elementosPrint -> . firstAndCap
    (75) elementosPrint -> . getMap
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (76) imprimirColecciones -> . PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (77) imprimirColecciones -> . MAPOF IPAR mapsElemento DPAR
    (78) imprimirColecciones -> . LISTOF IPAR listElementos DPAR
    (79) imprimirColecciones -> . SETOF IPAR listElementos DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean

    LISTOF          shift and go to state 134
    SETOF           shift and go to state 135
    MAPOF           shift and go to state 136
    ID              shift and go to state 137
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    PAIR            shift and go to state 138
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    DOUBLE          shift and go to state 49

    elementosPrint                 shift and go to state 139
    funColecciones                 shift and go to state 125
    coleccion                      shift and go to state 126
    expresion                      shift and go to state 127
    valorBoolean                   shift and go to state 128
    expLogicas                     shift and go to state 129
    expresionRelacional            shift and go to state 130
    imprimirColecciones            shift and go to state 131
    firstAndCap                    shift and go to state 132
    getMap                         shift and go to state 133
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    valor                          shift and go to state 96
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 26

state 81

    (119) coleccion -> LISTOF IPAR . listElementos DPAR
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 141
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 82

    (120) coleccion -> SETOF IPAR . listElementos DPAR
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 148
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 83

    (97) funMap -> MAPOF IPAR . mapsElemento DPAR PUNTO VALUES
    (94) getMap -> MAPOF IPAR . mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (121) coleccion -> MAPOF IPAR . mapsElemento DPAR
    (99) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (100) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 150

    mapsElemento                   shift and go to state 149

state 84

    (157) expLogicas -> boolID opLogico . boolID
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE

    ID              shift and go to state 88
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    boolID                         shift and go to state 151
    valorBoolean                   shift and go to state 89

state 85

    (161) opLogico -> AND .

    ID              reduce using rule 161 (opLogico -> AND .)
    TRUE            reduce using rule 161 (opLogico -> AND .)
    FALSE           reduce using rule 161 (opLogico -> AND .)


state 86

    (162) opLogico -> OR .

    ID              reduce using rule 162 (opLogico -> OR .)
    TRUE            reduce using rule 162 (opLogico -> OR .)
    FALSE           reduce using rule 162 (opLogico -> OR .)


state 87

    (158) expLogicas -> NEGATION boolID .

    ID              reduce using rule 158 (expLogicas -> NEGATION boolID .)
    PRINT           reduce using rule 158 (expLogicas -> NEGATION boolID .)
    PRINTLN         reduce using rule 158 (expLogicas -> NEGATION boolID .)
    READLINE        reduce using rule 158 (expLogicas -> NEGATION boolID .)
    NEGATION        reduce using rule 158 (expLogicas -> NEGATION boolID .)
    FUN             reduce using rule 158 (expLogicas -> NEGATION boolID .)
    IF              reduce using rule 158 (expLogicas -> NEGATION boolID .)
    FOR             reduce using rule 158 (expLogicas -> NEGATION boolID .)
    WHILE           reduce using rule 158 (expLogicas -> NEGATION boolID .)
    ENTERO          reduce using rule 158 (expLogicas -> NEGATION boolID .)
    DECIMAL         reduce using rule 158 (expLogicas -> NEGATION boolID .)
    CADENA_DE_CARACTERES reduce using rule 158 (expLogicas -> NEGATION boolID .)
    VAR             reduce using rule 158 (expLogicas -> NEGATION boolID .)
    VAL             reduce using rule 158 (expLogicas -> NEGATION boolID .)
    DOUBLE          reduce using rule 158 (expLogicas -> NEGATION boolID .)
    MAPOF           reduce using rule 158 (expLogicas -> NEGATION boolID .)
    TRUE            reduce using rule 158 (expLogicas -> NEGATION boolID .)
    FALSE           reduce using rule 158 (expLogicas -> NEGATION boolID .)
    LISTOF          reduce using rule 158 (expLogicas -> NEGATION boolID .)
    SETOF           reduce using rule 158 (expLogicas -> NEGATION boolID .)
    $end            reduce using rule 158 (expLogicas -> NEGATION boolID .)
    DLLAVE          reduce using rule 158 (expLogicas -> NEGATION boolID .)
    RETURN          reduce using rule 158 (expLogicas -> NEGATION boolID .)
    DPAR            reduce using rule 158 (expLogicas -> NEGATION boolID .)
    ELSE            reduce using rule 158 (expLogicas -> NEGATION boolID .)


state 88

    (159) boolID -> ID .

    ID              reduce using rule 159 (boolID -> ID .)
    PRINT           reduce using rule 159 (boolID -> ID .)
    PRINTLN         reduce using rule 159 (boolID -> ID .)
    READLINE        reduce using rule 159 (boolID -> ID .)
    NEGATION        reduce using rule 159 (boolID -> ID .)
    FUN             reduce using rule 159 (boolID -> ID .)
    IF              reduce using rule 159 (boolID -> ID .)
    FOR             reduce using rule 159 (boolID -> ID .)
    WHILE           reduce using rule 159 (boolID -> ID .)
    ENTERO          reduce using rule 159 (boolID -> ID .)
    DECIMAL         reduce using rule 159 (boolID -> ID .)
    CADENA_DE_CARACTERES reduce using rule 159 (boolID -> ID .)
    VAR             reduce using rule 159 (boolID -> ID .)
    VAL             reduce using rule 159 (boolID -> ID .)
    DOUBLE          reduce using rule 159 (boolID -> ID .)
    MAPOF           reduce using rule 159 (boolID -> ID .)
    TRUE            reduce using rule 159 (boolID -> ID .)
    FALSE           reduce using rule 159 (boolID -> ID .)
    LISTOF          reduce using rule 159 (boolID -> ID .)
    SETOF           reduce using rule 159 (boolID -> ID .)
    $end            reduce using rule 159 (boolID -> ID .)
    DLLAVE          reduce using rule 159 (boolID -> ID .)
    RETURN          reduce using rule 159 (boolID -> ID .)
    DPAR            reduce using rule 159 (boolID -> ID .)
    ELSE            reduce using rule 159 (boolID -> ID .)


state 89

    (160) boolID -> valorBoolean .

    ID              reduce using rule 160 (boolID -> valorBoolean .)
    PRINT           reduce using rule 160 (boolID -> valorBoolean .)
    PRINTLN         reduce using rule 160 (boolID -> valorBoolean .)
    READLINE        reduce using rule 160 (boolID -> valorBoolean .)
    NEGATION        reduce using rule 160 (boolID -> valorBoolean .)
    FUN             reduce using rule 160 (boolID -> valorBoolean .)
    IF              reduce using rule 160 (boolID -> valorBoolean .)
    FOR             reduce using rule 160 (boolID -> valorBoolean .)
    WHILE           reduce using rule 160 (boolID -> valorBoolean .)
    ENTERO          reduce using rule 160 (boolID -> valorBoolean .)
    DECIMAL         reduce using rule 160 (boolID -> valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 160 (boolID -> valorBoolean .)
    VAR             reduce using rule 160 (boolID -> valorBoolean .)
    VAL             reduce using rule 160 (boolID -> valorBoolean .)
    DOUBLE          reduce using rule 160 (boolID -> valorBoolean .)
    MAPOF           reduce using rule 160 (boolID -> valorBoolean .)
    TRUE            reduce using rule 160 (boolID -> valorBoolean .)
    FALSE           reduce using rule 160 (boolID -> valorBoolean .)
    LISTOF          reduce using rule 160 (boolID -> valorBoolean .)
    SETOF           reduce using rule 160 (boolID -> valorBoolean .)
    $end            reduce using rule 160 (boolID -> valorBoolean .)
    DLLAVE          reduce using rule 160 (boolID -> valorBoolean .)
    RETURN          reduce using rule 160 (boolID -> valorBoolean .)
    DPAR            reduce using rule 160 (boolID -> valorBoolean .)
    ELSE            reduce using rule 160 (boolID -> valorBoolean .)


state 90

    (23) fun -> FUN ID . IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> FUN ID . IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> FUN ID . IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> FUN ID . IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> FUN ID . IPAR entrada_fun DPAR EQUALS return

    IPAR            shift and go to state 152


state 91

    (39) if -> IF IPAR . entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> IF IPAR . entradaIf DPAR return
    (41) if -> IF IPAR . entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> IF IPAR . entradaIf DPAR return else
    (45) entradaIf -> . valorBoolean
    (46) entradaIf -> . expLogicas
    (47) entradaIf -> . expresionRelacional
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean

    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    ID              shift and go to state 157
    ENTERO          shift and go to state 121
    DOUBLE          shift and go to state 49

    entradaIf                      shift and go to state 153
    valorBoolean                   shift and go to state 154
    expLogicas                     shift and go to state 155
    expresionRelacional            shift and go to state 156
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 26

state 92

    (35) for -> FOR condicionFor . ILLAVE algoritmo DLLAVE

    ILLAVE          shift and go to state 158


state 93

    (36) condicionFor -> IPAR . ID IN ID DPAR
    (37) condicionFor -> IPAR . ID IN ENTERO PUNTO PUNTO ENTERO DPAR
    (38) condicionFor -> IPAR . ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    ID              shift and go to state 159


state 94

    (28) while -> WHILE IPAR . entradaIf DPAR ILLAVE algoritmo DLLAVE
    (45) entradaIf -> . valorBoolean
    (46) entradaIf -> . expLogicas
    (47) entradaIf -> . expresionRelacional
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean

    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    ID              shift and go to state 157
    ENTERO          shift and go to state 121
    DOUBLE          shift and go to state 49

    entradaIf                      shift and go to state 160
    valorBoolean                   shift and go to state 154
    expLogicas                     shift and go to state 155
    expresionRelacional            shift and go to state 156
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 26

state 95

    (90) size -> coleccion PUNTO . SIZE
    (92) isEmpty -> coleccion PUNTO . ISEMPTY IPAR DPAR

    SIZE            shift and go to state 161
    ISEMPTY         shift and go to state 162


state 96

    (141) expresion -> valor .
    (143) expresion -> valor . operadorMat expresion
    (150) operadorMat -> . PLUS
    (151) operadorMat -> . MINUS
    (152) operadorMat -> . TIMES
    (153) operadorMat -> . DIVIDE

    ID              reduce using rule 141 (expresion -> valor .)
    PRINT           reduce using rule 141 (expresion -> valor .)
    PRINTLN         reduce using rule 141 (expresion -> valor .)
    READLINE        reduce using rule 141 (expresion -> valor .)
    NEGATION        reduce using rule 141 (expresion -> valor .)
    FUN             reduce using rule 141 (expresion -> valor .)
    IF              reduce using rule 141 (expresion -> valor .)
    FOR             reduce using rule 141 (expresion -> valor .)
    WHILE           reduce using rule 141 (expresion -> valor .)
    ENTERO          reduce using rule 141 (expresion -> valor .)
    DECIMAL         reduce using rule 141 (expresion -> valor .)
    CADENA_DE_CARACTERES reduce using rule 141 (expresion -> valor .)
    VAR             reduce using rule 141 (expresion -> valor .)
    VAL             reduce using rule 141 (expresion -> valor .)
    DOUBLE          reduce using rule 141 (expresion -> valor .)
    MAPOF           reduce using rule 141 (expresion -> valor .)
    TRUE            reduce using rule 141 (expresion -> valor .)
    FALSE           reduce using rule 141 (expresion -> valor .)
    LISTOF          reduce using rule 141 (expresion -> valor .)
    SETOF           reduce using rule 141 (expresion -> valor .)
    $end            reduce using rule 141 (expresion -> valor .)
    DLLAVE          reduce using rule 141 (expresion -> valor .)
    RETURN          reduce using rule 141 (expresion -> valor .)
    DPAR            reduce using rule 141 (expresion -> valor .)
    ELSE            reduce using rule 141 (expresion -> valor .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadorMat                    shift and go to state 163

state 97

    (21) cuerpo -> valor operadorMat expresion .

    ID              reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    PRINT           reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    PRINTLN         reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    READLINE        reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    NEGATION        reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    FUN             reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    IF              reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    FOR             reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    WHILE           reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    ENTERO          reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    DECIMAL         reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    CADENA_DE_CARACTERES reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    VAR             reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    VAL             reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    MAPOF           reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    TRUE            reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    FALSE           reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    LISTOF          reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    SETOF           reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    $end            reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    DLLAVE          reduce using rule 21 (cuerpo -> valor operadorMat expresion .)
    RETURN          reduce using rule 21 (cuerpo -> valor operadorMat expresion .)


state 98

    (142) expresion -> ID .
    (144) expresion -> ID . operadorMat expresion
    (150) operadorMat -> . PLUS
    (151) operadorMat -> . MINUS
    (152) operadorMat -> . TIMES
    (153) operadorMat -> . DIVIDE

    ID              reduce using rule 142 (expresion -> ID .)
    PRINT           reduce using rule 142 (expresion -> ID .)
    PRINTLN         reduce using rule 142 (expresion -> ID .)
    READLINE        reduce using rule 142 (expresion -> ID .)
    NEGATION        reduce using rule 142 (expresion -> ID .)
    FUN             reduce using rule 142 (expresion -> ID .)
    IF              reduce using rule 142 (expresion -> ID .)
    FOR             reduce using rule 142 (expresion -> ID .)
    WHILE           reduce using rule 142 (expresion -> ID .)
    ENTERO          reduce using rule 142 (expresion -> ID .)
    DECIMAL         reduce using rule 142 (expresion -> ID .)
    CADENA_DE_CARACTERES reduce using rule 142 (expresion -> ID .)
    VAR             reduce using rule 142 (expresion -> ID .)
    VAL             reduce using rule 142 (expresion -> ID .)
    DOUBLE          reduce using rule 142 (expresion -> ID .)
    MAPOF           reduce using rule 142 (expresion -> ID .)
    TRUE            reduce using rule 142 (expresion -> ID .)
    FALSE           reduce using rule 142 (expresion -> ID .)
    LISTOF          reduce using rule 142 (expresion -> ID .)
    SETOF           reduce using rule 142 (expresion -> ID .)
    $end            reduce using rule 142 (expresion -> ID .)
    DLLAVE          reduce using rule 142 (expresion -> ID .)
    RETURN          reduce using rule 142 (expresion -> ID .)
    DPAR            reduce using rule 142 (expresion -> ID .)
    ELSE            reduce using rule 142 (expresion -> ID .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadorMat                    shift and go to state 164

state 99

    (154) valor -> ENTERO .

    PLUS            reduce using rule 154 (valor -> ENTERO .)
    MINUS           reduce using rule 154 (valor -> ENTERO .)
    TIMES           reduce using rule 154 (valor -> ENTERO .)
    DIVIDE          reduce using rule 154 (valor -> ENTERO .)
    ID              reduce using rule 154 (valor -> ENTERO .)
    PRINT           reduce using rule 154 (valor -> ENTERO .)
    PRINTLN         reduce using rule 154 (valor -> ENTERO .)
    READLINE        reduce using rule 154 (valor -> ENTERO .)
    NEGATION        reduce using rule 154 (valor -> ENTERO .)
    FUN             reduce using rule 154 (valor -> ENTERO .)
    IF              reduce using rule 154 (valor -> ENTERO .)
    FOR             reduce using rule 154 (valor -> ENTERO .)
    WHILE           reduce using rule 154 (valor -> ENTERO .)
    ENTERO          reduce using rule 154 (valor -> ENTERO .)
    DECIMAL         reduce using rule 154 (valor -> ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 154 (valor -> ENTERO .)
    VAR             reduce using rule 154 (valor -> ENTERO .)
    VAL             reduce using rule 154 (valor -> ENTERO .)
    DOUBLE          reduce using rule 154 (valor -> ENTERO .)
    MAPOF           reduce using rule 154 (valor -> ENTERO .)
    TRUE            reduce using rule 154 (valor -> ENTERO .)
    FALSE           reduce using rule 154 (valor -> ENTERO .)
    LISTOF          reduce using rule 154 (valor -> ENTERO .)
    SETOF           reduce using rule 154 (valor -> ENTERO .)
    $end            reduce using rule 154 (valor -> ENTERO .)
    DLLAVE          reduce using rule 154 (valor -> ENTERO .)
    RETURN          reduce using rule 154 (valor -> ENTERO .)
    DPAR            reduce using rule 154 (valor -> ENTERO .)
    ELSE            reduce using rule 154 (valor -> ENTERO .)
    COMA            reduce using rule 154 (valor -> ENTERO .)


state 100

    (22) cuerpo -> ID operadorMat expresion .

    ID              reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    PRINT           reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    PRINTLN         reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    READLINE        reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    NEGATION        reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    FUN             reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    IF              reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    FOR             reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    WHILE           reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    ENTERO          reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    DECIMAL         reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    CADENA_DE_CARACTERES reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    VAR             reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    VAL             reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    DOUBLE          reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    MAPOF           reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    TRUE            reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    FALSE           reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    LISTOF          reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    SETOF           reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    $end            reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    DLLAVE          reduce using rule 22 (cuerpo -> ID operadorMat expresion .)
    RETURN          reduce using rule 22 (cuerpo -> ID operadorMat expresion .)


state 101

    (126) firstAndCap -> ID PUNTO FIRST . IPAR DPAR

    IPAR            shift and go to state 165


state 102

    (127) firstAndCap -> ID PUNTO CAPITALIZE . IPAR DPAR

    IPAR            shift and go to state 166


state 103

    (88) slice -> ID PUNTO SLICE . IPAR ENTERO PUNTO PUNTO ENTERO DPAR

    IPAR            shift and go to state 167


state 104

    (89) size -> ID PUNTO SIZE .

    ID              reduce using rule 89 (size -> ID PUNTO SIZE .)
    PRINT           reduce using rule 89 (size -> ID PUNTO SIZE .)
    PRINTLN         reduce using rule 89 (size -> ID PUNTO SIZE .)
    READLINE        reduce using rule 89 (size -> ID PUNTO SIZE .)
    NEGATION        reduce using rule 89 (size -> ID PUNTO SIZE .)
    FUN             reduce using rule 89 (size -> ID PUNTO SIZE .)
    IF              reduce using rule 89 (size -> ID PUNTO SIZE .)
    FOR             reduce using rule 89 (size -> ID PUNTO SIZE .)
    WHILE           reduce using rule 89 (size -> ID PUNTO SIZE .)
    ENTERO          reduce using rule 89 (size -> ID PUNTO SIZE .)
    DECIMAL         reduce using rule 89 (size -> ID PUNTO SIZE .)
    CADENA_DE_CARACTERES reduce using rule 89 (size -> ID PUNTO SIZE .)
    VAR             reduce using rule 89 (size -> ID PUNTO SIZE .)
    VAL             reduce using rule 89 (size -> ID PUNTO SIZE .)
    DOUBLE          reduce using rule 89 (size -> ID PUNTO SIZE .)
    MAPOF           reduce using rule 89 (size -> ID PUNTO SIZE .)
    TRUE            reduce using rule 89 (size -> ID PUNTO SIZE .)
    FALSE           reduce using rule 89 (size -> ID PUNTO SIZE .)
    LISTOF          reduce using rule 89 (size -> ID PUNTO SIZE .)
    SETOF           reduce using rule 89 (size -> ID PUNTO SIZE .)
    $end            reduce using rule 89 (size -> ID PUNTO SIZE .)
    DLLAVE          reduce using rule 89 (size -> ID PUNTO SIZE .)
    RETURN          reduce using rule 89 (size -> ID PUNTO SIZE .)
    DPAR            reduce using rule 89 (size -> ID PUNTO SIZE .)


state 105

    (91) isEmpty -> ID PUNTO ISEMPTY . IPAR DPAR

    IPAR            shift and go to state 168


state 106

    (95) funMap -> ID PUNTO KEYS .

    ID              reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    PRINT           reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    PRINTLN         reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    READLINE        reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    NEGATION        reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    FUN             reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    IF              reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    FOR             reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    WHILE           reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    ENTERO          reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    DECIMAL         reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    CADENA_DE_CARACTERES reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    VAR             reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    VAL             reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    DOUBLE          reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    MAPOF           reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    TRUE            reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    FALSE           reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    LISTOF          reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    SETOF           reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    $end            reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    DLLAVE          reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    RETURN          reduce using rule 95 (funMap -> ID PUNTO KEYS .)
    DPAR            reduce using rule 95 (funMap -> ID PUNTO KEYS .)


state 107

    (96) funMap -> ID PUNTO VALUES .

    ID              reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    PRINT           reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    PRINTLN         reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    READLINE        reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    NEGATION        reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    FUN             reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    IF              reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    FOR             reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    WHILE           reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    ENTERO          reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    DECIMAL         reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    CADENA_DE_CARACTERES reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    VAR             reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    VAL             reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    DOUBLE          reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    MAPOF           reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    TRUE            reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    FALSE           reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    LISTOF          reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    SETOF           reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    $end            reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    DLLAVE          reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    RETURN          reduce using rule 96 (funMap -> ID PUNTO VALUES .)
    DPAR            reduce using rule 96 (funMap -> ID PUNTO VALUES .)


state 108

    (93) getMap -> ID PUNTO GET . IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 169


state 109

    (29) valorInDecAsignacion -> ID incDecAsignaacion ENTERO .

    ID              reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    PRINT           reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    PRINTLN         reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    READLINE        reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    NEGATION        reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    FUN             reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    IF              reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    FOR             reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    WHILE           reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    ENTERO          reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    DECIMAL         reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    VAR             reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    VAL             reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    DOUBLE          reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    MAPOF           reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    TRUE            reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    FALSE           reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    LISTOF          reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    SETOF           reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    $end            reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    DLLAVE          reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    RETURN          reduce using rule 29 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)


state 110

    (139) definicionVariables -> ID EQUALS valor .

    ID              reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    PRINT           reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    PRINTLN         reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    READLINE        reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    NEGATION        reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    FUN             reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    IF              reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    FOR             reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    WHILE           reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    ENTERO          reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    DECIMAL         reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    CADENA_DE_CARACTERES reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    VAR             reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    VAL             reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    DOUBLE          reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    MAPOF           reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    TRUE            reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    FALSE           reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    LISTOF          reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    SETOF           reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    $end            reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    DLLAVE          reduce using rule 139 (definicionVariables -> ID EQUALS valor .)
    RETURN          reduce using rule 139 (definicionVariables -> ID EQUALS valor .)


state 111

    (140) definicionVariables -> ID EQUALS valorBoolean .

    ID              reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    PRINT           reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    PRINTLN         reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    READLINE        reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    NEGATION        reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    FUN             reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    IF              reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    FOR             reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    WHILE           reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    ENTERO          reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    DECIMAL         reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    VAR             reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    VAL             reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    DOUBLE          reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    MAPOF           reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    TRUE            reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    FALSE           reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    LISTOF          reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    SETOF           reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    $end            reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    DLLAVE          reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)
    RETURN          reduce using rule 140 (definicionVariables -> ID EQUALS valorBoolean .)


state 112

    (87) indexCol -> ID ICOR ID . DCOR

    DCOR            shift and go to state 170


state 113

    (86) indexCol -> ID ICOR ENTERO . DCOR

    DCOR            shift and go to state 171


state 114

    (58) iniVariable -> variable ID tipoDeDato .

    ID              reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    PRINT           reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    PRINTLN         reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    READLINE        reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    NEGATION        reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    FUN             reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    IF              reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    FOR             reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    WHILE           reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    ENTERO          reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    DECIMAL         reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    CADENA_DE_CARACTERES reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    VAR             reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    VAL             reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    DOUBLE          reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    MAPOF           reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    TRUE            reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    FALSE           reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    LISTOF          reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    SETOF           reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    $end            reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    DLLAVE          reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)
    RETURN          reduce using rule 58 (iniVariable -> variable ID tipoDeDato .)


state 115

    (59) iniVariable -> variable ID EQUALS . valor
    (60) iniVariable -> variable ID EQUALS . valorBoolean
    (61) iniVariable -> variable ID EQUALS . expLogicas
    (62) iniVariable -> variable ID EQUALS . expresionRelacional
    (63) iniVariable -> variable ID EQUALS . funColecciones
    (64) iniVariable -> variable ID EQUALS . READLINE IPAR DPAR
    (125) readline -> variable ID EQUALS . READLINE IPAR DPAR
    (108) list -> variable ID EQUALS . LISTOF IPAR listElementos DPAR
    (107) conjuntos -> variable ID EQUALS . SETOF IPAR listElementos DPAR
    (98) maps -> variable ID EQUALS . MAPOF IPAR mapsElemento DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    READLINE        shift and go to state 178
    LISTOF          shift and go to state 179
    SETOF           shift and go to state 180
    MAPOF           shift and go to state 181
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    ID              shift and go to state 172
    DOUBLE          shift and go to state 49

    valor                          shift and go to state 173
    valorBoolean                   shift and go to state 174
    expLogicas                     shift and go to state 175
    expresionRelacional            shift and go to state 176
    funColecciones                 shift and go to state 177
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    coleccion                      shift and go to state 50

state 116

    (128) tipoDeDato -> DOSPUNTOS . INT EQUALS ENTERO
    (129) tipoDeDato -> DOSPUNTOS . DOUBLE EQUALS DECIMAL
    (130) tipoDeDato -> DOSPUNTOS . STRING EQUALS CADENA_DE_CARACTERES
    (131) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS valorBoolean
    (132) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS expLogicas
    (133) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS expresionRelacional
    (135) tipoDeDato2 -> DOSPUNTOS . INT
    (136) tipoDeDato2 -> DOSPUNTOS . DOUBLE
    (137) tipoDeDato2 -> DOSPUNTOS . STRING
    (138) tipoDeDato2 -> DOSPUNTOS . BOOLEAN

    INT             shift and go to state 182
    DOUBLE          shift and go to state 183
    STRING          shift and go to state 184
    BOOLEAN         shift and go to state 185


state 117

    (134) tipoDeDato -> tipoDeDato2 .

    ID              reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    PRINT           reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    PRINTLN         reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    READLINE        reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    NEGATION        reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    FUN             reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    IF              reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    FOR             reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    WHILE           reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    ENTERO          reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    DECIMAL         reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    CADENA_DE_CARACTERES reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    VAR             reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    VAL             reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    DOUBLE          reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    MAPOF           reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    TRUE            reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    FALSE           reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    LISTOF          reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    SETOF           reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    $end            reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    DLLAVE          reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)
    RETURN          reduce using rule 134 (tipoDeDato -> tipoDeDato2 .)


state 118

    (101) tupla -> variable IPAR ID . COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    COMA            shift and go to state 186


state 119

    (124) readline -> READLINE IPAR DPAR .

    ID              reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    PRINT           reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    PRINTLN         reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    READLINE        reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    NEGATION        reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    FUN             reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    IF              reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    FOR             reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    WHILE           reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    ENTERO          reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    DECIMAL         reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    VAR             reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    VAL             reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    DOUBLE          reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    MAPOF           reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    TRUE            reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    FALSE           reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    LISTOF          reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    SETOF           reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    $end            reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    DLLAVE          reduce using rule 124 (readline -> READLINE IPAR DPAR .)
    RETURN          reduce using rule 124 (readline -> READLINE IPAR DPAR .)


state 120

    (145) expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .

    ID              reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    PRINT           reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    PRINTLN         reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    READLINE        reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    NEGATION        reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    FUN             reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    IF              reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    FOR             reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    WHILE           reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    ENTERO          reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DECIMAL         reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    CADENA_DE_CARACTERES reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    VAR             reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    VAL             reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DOUBLE          reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    MAPOF           reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    TRUE            reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    FALSE           reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    LISTOF          reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    SETOF           reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    $end            reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DLLAVE          reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    RETURN          reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DPAR            reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    ELSE            reduce using rule 145 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)


state 121

    (146) elementoRelacional -> ENTERO .

    ID              reduce using rule 146 (elementoRelacional -> ENTERO .)
    PRINT           reduce using rule 146 (elementoRelacional -> ENTERO .)
    PRINTLN         reduce using rule 146 (elementoRelacional -> ENTERO .)
    READLINE        reduce using rule 146 (elementoRelacional -> ENTERO .)
    NEGATION        reduce using rule 146 (elementoRelacional -> ENTERO .)
    FUN             reduce using rule 146 (elementoRelacional -> ENTERO .)
    IF              reduce using rule 146 (elementoRelacional -> ENTERO .)
    FOR             reduce using rule 146 (elementoRelacional -> ENTERO .)
    WHILE           reduce using rule 146 (elementoRelacional -> ENTERO .)
    ENTERO          reduce using rule 146 (elementoRelacional -> ENTERO .)
    DECIMAL         reduce using rule 146 (elementoRelacional -> ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 146 (elementoRelacional -> ENTERO .)
    VAR             reduce using rule 146 (elementoRelacional -> ENTERO .)
    VAL             reduce using rule 146 (elementoRelacional -> ENTERO .)
    DOUBLE          reduce using rule 146 (elementoRelacional -> ENTERO .)
    MAPOF           reduce using rule 146 (elementoRelacional -> ENTERO .)
    TRUE            reduce using rule 146 (elementoRelacional -> ENTERO .)
    FALSE           reduce using rule 146 (elementoRelacional -> ENTERO .)
    LISTOF          reduce using rule 146 (elementoRelacional -> ENTERO .)
    SETOF           reduce using rule 146 (elementoRelacional -> ENTERO .)
    $end            reduce using rule 146 (elementoRelacional -> ENTERO .)
    DLLAVE          reduce using rule 146 (elementoRelacional -> ENTERO .)
    RETURN          reduce using rule 146 (elementoRelacional -> ENTERO .)
    DPAR            reduce using rule 146 (elementoRelacional -> ENTERO .)
    ELSE            reduce using rule 146 (elementoRelacional -> ENTERO .)
    EQUAL           reduce using rule 146 (elementoRelacional -> ENTERO .)
    NOTEQ           reduce using rule 146 (elementoRelacional -> ENTERO .)
    LARGE           reduce using rule 146 (elementoRelacional -> ENTERO .)
    SMALL           reduce using rule 146 (elementoRelacional -> ENTERO .)
    LRGEQ           reduce using rule 146 (elementoRelacional -> ENTERO .)
    SMLEQ           reduce using rule 146 (elementoRelacional -> ENTERO .)


state 122

    (148) elementoRelacional -> ID .

    ID              reduce using rule 148 (elementoRelacional -> ID .)
    PRINT           reduce using rule 148 (elementoRelacional -> ID .)
    PRINTLN         reduce using rule 148 (elementoRelacional -> ID .)
    READLINE        reduce using rule 148 (elementoRelacional -> ID .)
    NEGATION        reduce using rule 148 (elementoRelacional -> ID .)
    FUN             reduce using rule 148 (elementoRelacional -> ID .)
    IF              reduce using rule 148 (elementoRelacional -> ID .)
    FOR             reduce using rule 148 (elementoRelacional -> ID .)
    WHILE           reduce using rule 148 (elementoRelacional -> ID .)
    ENTERO          reduce using rule 148 (elementoRelacional -> ID .)
    DECIMAL         reduce using rule 148 (elementoRelacional -> ID .)
    CADENA_DE_CARACTERES reduce using rule 148 (elementoRelacional -> ID .)
    VAR             reduce using rule 148 (elementoRelacional -> ID .)
    VAL             reduce using rule 148 (elementoRelacional -> ID .)
    DOUBLE          reduce using rule 148 (elementoRelacional -> ID .)
    MAPOF           reduce using rule 148 (elementoRelacional -> ID .)
    TRUE            reduce using rule 148 (elementoRelacional -> ID .)
    FALSE           reduce using rule 148 (elementoRelacional -> ID .)
    LISTOF          reduce using rule 148 (elementoRelacional -> ID .)
    SETOF           reduce using rule 148 (elementoRelacional -> ID .)
    $end            reduce using rule 148 (elementoRelacional -> ID .)
    DLLAVE          reduce using rule 148 (elementoRelacional -> ID .)
    RETURN          reduce using rule 148 (elementoRelacional -> ID .)
    DPAR            reduce using rule 148 (elementoRelacional -> ID .)
    ELSE            reduce using rule 148 (elementoRelacional -> ID .)


state 123

    (149) elementoRelacional -> valorBoolean .

    ID              reduce using rule 149 (elementoRelacional -> valorBoolean .)
    PRINT           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    PRINTLN         reduce using rule 149 (elementoRelacional -> valorBoolean .)
    READLINE        reduce using rule 149 (elementoRelacional -> valorBoolean .)
    NEGATION        reduce using rule 149 (elementoRelacional -> valorBoolean .)
    FUN             reduce using rule 149 (elementoRelacional -> valorBoolean .)
    IF              reduce using rule 149 (elementoRelacional -> valorBoolean .)
    FOR             reduce using rule 149 (elementoRelacional -> valorBoolean .)
    WHILE           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    ENTERO          reduce using rule 149 (elementoRelacional -> valorBoolean .)
    DECIMAL         reduce using rule 149 (elementoRelacional -> valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 149 (elementoRelacional -> valorBoolean .)
    VAR             reduce using rule 149 (elementoRelacional -> valorBoolean .)
    VAL             reduce using rule 149 (elementoRelacional -> valorBoolean .)
    DOUBLE          reduce using rule 149 (elementoRelacional -> valorBoolean .)
    MAPOF           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    TRUE            reduce using rule 149 (elementoRelacional -> valorBoolean .)
    FALSE           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LISTOF          reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SETOF           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    $end            reduce using rule 149 (elementoRelacional -> valorBoolean .)
    DLLAVE          reduce using rule 149 (elementoRelacional -> valorBoolean .)
    RETURN          reduce using rule 149 (elementoRelacional -> valorBoolean .)
    DPAR            reduce using rule 149 (elementoRelacional -> valorBoolean .)
    ELSE            reduce using rule 149 (elementoRelacional -> valorBoolean .)


state 124

    (65) imprimir -> PRINT IPAR elementosPrint . DPAR

    DPAR            shift and go to state 187


state 125

    (67) elementosPrint -> funColecciones .

    DPAR            reduce using rule 67 (elementosPrint -> funColecciones .)


state 126

    (68) elementosPrint -> coleccion .
    (90) size -> coleccion . PUNTO SIZE
    (92) isEmpty -> coleccion . PUNTO ISEMPTY IPAR DPAR

    DPAR            reduce using rule 68 (elementosPrint -> coleccion .)
    PUNTO           shift and go to state 95


state 127

    (69) elementosPrint -> expresion .

    DPAR            reduce using rule 69 (elementosPrint -> expresion .)


state 128

    (70) elementosPrint -> valorBoolean .
    (160) boolID -> valorBoolean .
    (149) elementoRelacional -> valorBoolean .

    DPAR            reduce using rule 70 (elementosPrint -> valorBoolean .)
    AND             reduce using rule 160 (boolID -> valorBoolean .)
    OR              reduce using rule 160 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)


state 129

    (71) elementosPrint -> expLogicas .

    DPAR            reduce using rule 71 (elementosPrint -> expLogicas .)


state 130

    (72) elementosPrint -> expresionRelacional .

    DPAR            reduce using rule 72 (elementosPrint -> expresionRelacional .)


state 131

    (73) elementosPrint -> imprimirColecciones .

    DPAR            reduce using rule 73 (elementosPrint -> imprimirColecciones .)


state 132

    (74) elementosPrint -> firstAndCap .

    DPAR            reduce using rule 74 (elementosPrint -> firstAndCap .)


state 133

    (75) elementosPrint -> getMap .
    (85) funColecciones -> getMap .

  ! reduce/reduce conflict for DPAR resolved using rule 75 (elementosPrint -> getMap .)
    DPAR            reduce using rule 75 (elementosPrint -> getMap .)

  ! DPAR            [ reduce using rule 85 (funColecciones -> getMap .) ]


state 134

    (119) coleccion -> LISTOF . IPAR listElementos DPAR
    (78) imprimirColecciones -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 188


state 135

    (120) coleccion -> SETOF . IPAR listElementos DPAR
    (79) imprimirColecciones -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 189


state 136

    (121) coleccion -> MAPOF . IPAR mapsElemento DPAR
    (77) imprimirColecciones -> MAPOF . IPAR mapsElemento DPAR
    (94) getMap -> MAPOF . IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (97) funMap -> MAPOF . IPAR mapsElemento DPAR PUNTO VALUES

    IPAR            shift and go to state 190


state 137

    (142) expresion -> ID .
    (144) expresion -> ID . operadorMat expresion
    (126) firstAndCap -> ID . PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> ID . PUNTO CAPITALIZE IPAR DPAR
    (93) getMap -> ID . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (86) indexCol -> ID . ICOR ENTERO DCOR
    (87) indexCol -> ID . ICOR ID DCOR
    (88) slice -> ID . PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> ID . PUNTO SIZE
    (91) isEmpty -> ID . PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> ID . PUNTO KEYS
    (96) funMap -> ID . PUNTO VALUES
    (159) boolID -> ID .
    (148) elementoRelacional -> ID .
    (150) operadorMat -> . PLUS
    (151) operadorMat -> . MINUS
    (152) operadorMat -> . TIMES
    (153) operadorMat -> . DIVIDE

    DPAR            reduce using rule 142 (expresion -> ID .)
    PUNTO           shift and go to state 191
    ICOR            shift and go to state 64
    AND             reduce using rule 159 (boolID -> ID .)
    OR              reduce using rule 159 (boolID -> ID .)
    EQUAL           reduce using rule 148 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 148 (elementoRelacional -> ID .)
    LARGE           reduce using rule 148 (elementoRelacional -> ID .)
    SMALL           reduce using rule 148 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 148 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 148 (elementoRelacional -> ID .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadorMat                    shift and go to state 164

state 138

    (76) imprimirColecciones -> PAIR . IPAR tuplaElemento COMA tuplaElemento DPAR

    IPAR            shift and go to state 192


state 139

    (66) imprimir -> PRINTLN IPAR elementosPrint . DPAR

    DPAR            shift and go to state 193


state 140

    (117) listElementos -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 194


state 141

    (119) coleccion -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 195


state 142

    (109) listElementos -> valor .
    (115) listElementos -> valor . COMA listElementos

    DPAR            reduce using rule 109 (listElementos -> valor .)
    COMA            shift and go to state 196


state 143

    (110) listElementos -> ID .
    (116) listElementos -> ID . COMA listElementos
    (148) elementoRelacional -> ID .
    (159) boolID -> ID .

    DPAR            reduce using rule 110 (listElementos -> ID .)
    COMA            shift and go to state 197
    EQUAL           reduce using rule 148 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 148 (elementoRelacional -> ID .)
    LARGE           reduce using rule 148 (elementoRelacional -> ID .)
    SMALL           reduce using rule 148 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 148 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 148 (elementoRelacional -> ID .)
    AND             reduce using rule 159 (boolID -> ID .)
    OR              reduce using rule 159 (boolID -> ID .)


state 144

    (111) listElementos -> valorBoolean .
    (114) listElementos -> valorBoolean . COMA listElementos
    (149) elementoRelacional -> valorBoolean .
    (160) boolID -> valorBoolean .

    DPAR            reduce using rule 111 (listElementos -> valorBoolean .)
    COMA            shift and go to state 198
    EQUAL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    AND             reduce using rule 160 (boolID -> valorBoolean .)
    OR              reduce using rule 160 (boolID -> valorBoolean .)


state 145

    (112) listElementos -> expresionRelacional .

    DPAR            reduce using rule 112 (listElementos -> expresionRelacional .)


state 146

    (113) listElementos -> expLogicas .

    DPAR            reduce using rule 113 (listElementos -> expLogicas .)


state 147

    (118) listElementos -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 199


state 148

    (120) coleccion -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 200


state 149

    (97) funMap -> MAPOF IPAR mapsElemento . DPAR PUNTO VALUES
    (94) getMap -> MAPOF IPAR mapsElemento . DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (121) coleccion -> MAPOF IPAR mapsElemento . DPAR

    DPAR            shift and go to state 201


state 150

    (99) mapsElemento -> CADENA_DE_CARACTERES . TO tuplaElemento
    (100) mapsElemento -> CADENA_DE_CARACTERES . TO tuplaElemento COMA mapsElemento

    TO              shift and go to state 202


state 151

    (157) expLogicas -> boolID opLogico boolID .

    ID              reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    PRINT           reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    PRINTLN         reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    READLINE        reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    NEGATION        reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    FUN             reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    IF              reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    FOR             reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    WHILE           reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    ENTERO          reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    DECIMAL         reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    CADENA_DE_CARACTERES reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    VAR             reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    VAL             reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    DOUBLE          reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    MAPOF           reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    TRUE            reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    FALSE           reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    LISTOF          reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    SETOF           reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    $end            reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    DLLAVE          reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    RETURN          reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    DPAR            reduce using rule 157 (expLogicas -> boolID opLogico boolID .)
    ELSE            reduce using rule 157 (expLogicas -> boolID opLogico boolID .)


state 152

    (23) fun -> FUN ID IPAR . DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> FUN ID IPAR . entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> FUN ID IPAR . DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> FUN ID IPAR . entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> FUN ID IPAR . entrada_fun DPAR EQUALS return
    (52) entrada_fun -> . ID DOSPUNTOS tipos
    (53) entrada_fun -> . ID DOSPUNTOS tipos COMA entrada_fun

    DPAR            shift and go to state 204
    ID              shift and go to state 203

    entrada_fun                    shift and go to state 205

state 153

    (39) if -> IF IPAR entradaIf . DPAR ILLAVE algoritmo DLLAVE
    (40) if -> IF IPAR entradaIf . DPAR return
    (41) if -> IF IPAR entradaIf . DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> IF IPAR entradaIf . DPAR return else

    DPAR            shift and go to state 206


state 154

    (45) entradaIf -> valorBoolean .
    (160) boolID -> valorBoolean .
    (149) elementoRelacional -> valorBoolean .

    DPAR            reduce using rule 45 (entradaIf -> valorBoolean .)
    AND             reduce using rule 160 (boolID -> valorBoolean .)
    OR              reduce using rule 160 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)


state 155

    (46) entradaIf -> expLogicas .

    DPAR            reduce using rule 46 (entradaIf -> expLogicas .)


state 156

    (47) entradaIf -> expresionRelacional .

    DPAR            reduce using rule 47 (entradaIf -> expresionRelacional .)


state 157

    (159) boolID -> ID .
    (148) elementoRelacional -> ID .

    AND             reduce using rule 159 (boolID -> ID .)
    OR              reduce using rule 159 (boolID -> ID .)
    EQUAL           reduce using rule 148 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 148 (elementoRelacional -> ID .)
    LARGE           reduce using rule 148 (elementoRelacional -> ID .)
    SMALL           reduce using rule 148 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 148 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 148 (elementoRelacional -> ID .)


state 158

    (35) for -> FOR condicionFor ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresionRelacional
    (5) cuerpo -> . imprimir
    (6) cuerpo -> . readline
    (7) cuerpo -> . firstAndCap
    (8) cuerpo -> . list
    (9) cuerpo -> . conjuntos
    (10) cuerpo -> . tupla
    (11) cuerpo -> . maps
    (12) cuerpo -> . funColecciones
    (13) cuerpo -> . expLogicas
    (14) cuerpo -> . fun
    (15) cuerpo -> . if
    (16) cuerpo -> . for
    (17) cuerpo -> . while
    (18) cuerpo -> . valorIncDec
    (19) cuerpo -> . valorInDecAsignacion
    (20) cuerpo -> . definicionVariables
    (21) cuerpo -> . valor operadorMat expresion
    (22) cuerpo -> . ID operadorMat expresion
    (58) iniVariable -> . variable ID tipoDeDato
    (59) iniVariable -> . variable ID EQUALS valor
    (60) iniVariable -> . variable ID EQUALS valorBoolean
    (61) iniVariable -> . variable ID EQUALS expLogicas
    (62) iniVariable -> . variable ID EQUALS expresionRelacional
    (63) iniVariable -> . variable ID EQUALS funColecciones
    (64) iniVariable -> . variable ID EQUALS READLINE IPAR DPAR
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) imprimir -> . PRINT IPAR elementosPrint DPAR
    (66) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (124) readline -> . READLINE IPAR DPAR
    (125) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (108) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (23) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> . IF IPAR entradaIf DPAR return
    (41) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> . IF IPAR entradaIf DPAR return else
    (35) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (28) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (30) valorIncDec -> . ID incrementoDec
    (29) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (139) definicionVariables -> . ID EQUALS valor
    (140) definicionVariables -> . ID EQUALS valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (122) variable -> . VAR
    (123) variable -> . VAL
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 27
    PRINTLN         shift and go to state 28
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    VAR             shift and go to state 47
    VAL             shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 207
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresionRelacional            shift and go to state 4
    imprimir                       shift and go to state 5
    readline                       shift and go to state 6
    firstAndCap                    shift and go to state 7
    list                           shift and go to state 8
    conjuntos                      shift and go to state 9
    tupla                          shift and go to state 10
    maps                           shift and go to state 11
    funColecciones                 shift and go to state 12
    expLogicas                     shift and go to state 13
    fun                            shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    valorIncDec                    shift and go to state 18
    valorInDecAsignacion           shift and go to state 19
    definicionVariables            shift and go to state 20
    valor                          shift and go to state 21
    variable                       shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 159

    (36) condicionFor -> IPAR ID . IN ID DPAR
    (37) condicionFor -> IPAR ID . IN ENTERO PUNTO PUNTO ENTERO DPAR
    (38) condicionFor -> IPAR ID . IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    IN              shift and go to state 208


state 160

    (28) while -> WHILE IPAR entradaIf . DPAR ILLAVE algoritmo DLLAVE

    DPAR            shift and go to state 209


state 161

    (90) size -> coleccion PUNTO SIZE .

    ID              reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    PRINT           reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    PRINTLN         reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    READLINE        reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    NEGATION        reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    FUN             reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    IF              reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    FOR             reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    WHILE           reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    ENTERO          reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    DECIMAL         reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    CADENA_DE_CARACTERES reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    VAR             reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    VAL             reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    DOUBLE          reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    MAPOF           reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    TRUE            reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    FALSE           reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    LISTOF          reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    SETOF           reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    $end            reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    DLLAVE          reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    RETURN          reduce using rule 90 (size -> coleccion PUNTO SIZE .)
    DPAR            reduce using rule 90 (size -> coleccion PUNTO SIZE .)


state 162

    (92) isEmpty -> coleccion PUNTO ISEMPTY . IPAR DPAR

    IPAR            shift and go to state 210


state 163

    (143) expresion -> valor operadorMat . expresion
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 98
    ENTERO          shift and go to state 99
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46

    valor                          shift and go to state 96
    expresion                      shift and go to state 211

state 164

    (144) expresion -> ID operadorMat . expresion
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 98
    ENTERO          shift and go to state 99
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46

    expresion                      shift and go to state 212
    valor                          shift and go to state 96

state 165

    (126) firstAndCap -> ID PUNTO FIRST IPAR . DPAR

    DPAR            shift and go to state 213


state 166

    (127) firstAndCap -> ID PUNTO CAPITALIZE IPAR . DPAR

    DPAR            shift and go to state 214


state 167

    (88) slice -> ID PUNTO SLICE IPAR . ENTERO PUNTO PUNTO ENTERO DPAR

    ENTERO          shift and go to state 215


state 168

    (91) isEmpty -> ID PUNTO ISEMPTY IPAR . DPAR

    DPAR            shift and go to state 216


state 169

    (93) getMap -> ID PUNTO GET IPAR . CADENA_DE_CARACTERES DPAR

    CADENA_DE_CARACTERES shift and go to state 217


state 170

    (87) indexCol -> ID ICOR ID DCOR .

    ID              reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    PRINT           reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    PRINTLN         reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    READLINE        reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    NEGATION        reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    FUN             reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    IF              reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    FOR             reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    WHILE           reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    ENTERO          reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    DECIMAL         reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    CADENA_DE_CARACTERES reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    VAR             reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    VAL             reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    DOUBLE          reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    MAPOF           reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    TRUE            reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    FALSE           reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    LISTOF          reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    SETOF           reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    $end            reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    DLLAVE          reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    RETURN          reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)
    DPAR            reduce using rule 87 (indexCol -> ID ICOR ID DCOR .)


state 171

    (86) indexCol -> ID ICOR ENTERO DCOR .

    ID              reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    PRINT           reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    PRINTLN         reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    READLINE        reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    NEGATION        reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    FUN             reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    IF              reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    FOR             reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    WHILE           reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    ENTERO          reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    DECIMAL         reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    CADENA_DE_CARACTERES reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    VAR             reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    VAL             reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    DOUBLE          reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    MAPOF           reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    TRUE            reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    FALSE           reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    LISTOF          reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    SETOF           reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    $end            reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    DLLAVE          reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    RETURN          reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)
    DPAR            reduce using rule 86 (indexCol -> ID ICOR ENTERO DCOR .)


state 172

    (159) boolID -> ID .
    (148) elementoRelacional -> ID .
    (86) indexCol -> ID . ICOR ENTERO DCOR
    (87) indexCol -> ID . ICOR ID DCOR
    (88) slice -> ID . PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> ID . PUNTO SIZE
    (91) isEmpty -> ID . PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> ID . PUNTO KEYS
    (96) funMap -> ID . PUNTO VALUES
    (93) getMap -> ID . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR

    AND             reduce using rule 159 (boolID -> ID .)
    OR              reduce using rule 159 (boolID -> ID .)
    EQUAL           reduce using rule 148 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 148 (elementoRelacional -> ID .)
    LARGE           reduce using rule 148 (elementoRelacional -> ID .)
    SMALL           reduce using rule 148 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 148 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 148 (elementoRelacional -> ID .)
    ICOR            shift and go to state 64
    PUNTO           shift and go to state 218


state 173

    (59) iniVariable -> variable ID EQUALS valor .

    ID              reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    PRINT           reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    PRINTLN         reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    READLINE        reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    NEGATION        reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    FUN             reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    IF              reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    FOR             reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    WHILE           reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    ENTERO          reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    DECIMAL         reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    CADENA_DE_CARACTERES reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    VAR             reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    VAL             reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    DOUBLE          reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    MAPOF           reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    TRUE            reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    FALSE           reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    LISTOF          reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    SETOF           reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    $end            reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    DLLAVE          reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)
    RETURN          reduce using rule 59 (iniVariable -> variable ID EQUALS valor .)


state 174

    (60) iniVariable -> variable ID EQUALS valorBoolean .
    (160) boolID -> valorBoolean .
    (149) elementoRelacional -> valorBoolean .

    ID              reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    PRINT           reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    PRINTLN         reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    READLINE        reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    NEGATION        reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    FUN             reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    IF              reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    FOR             reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    WHILE           reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    ENTERO          reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    DECIMAL         reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    VAR             reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    VAL             reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    DOUBLE          reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    MAPOF           reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    TRUE            reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    FALSE           reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    LISTOF          reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    SETOF           reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    $end            reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    DLLAVE          reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    RETURN          reduce using rule 60 (iniVariable -> variable ID EQUALS valorBoolean .)
    AND             reduce using rule 160 (boolID -> valorBoolean .)
    OR              reduce using rule 160 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)


state 175

    (61) iniVariable -> variable ID EQUALS expLogicas .

    ID              reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    PRINT           reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    PRINTLN         reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    READLINE        reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    NEGATION        reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    FUN             reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    IF              reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    FOR             reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    WHILE           reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    ENTERO          reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    DECIMAL         reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    VAR             reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    VAL             reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    DOUBLE          reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    MAPOF           reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    TRUE            reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    FALSE           reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    LISTOF          reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    SETOF           reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    $end            reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    DLLAVE          reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)
    RETURN          reduce using rule 61 (iniVariable -> variable ID EQUALS expLogicas .)


state 176

    (62) iniVariable -> variable ID EQUALS expresionRelacional .

    ID              reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    PRINT           reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    PRINTLN         reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    READLINE        reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    NEGATION        reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    FUN             reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    IF              reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    FOR             reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    WHILE           reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    ENTERO          reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    DECIMAL         reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    VAR             reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    VAL             reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    DOUBLE          reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    MAPOF           reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    TRUE            reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    FALSE           reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    LISTOF          reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    SETOF           reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    $end            reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    DLLAVE          reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)
    RETURN          reduce using rule 62 (iniVariable -> variable ID EQUALS expresionRelacional .)


state 177

    (63) iniVariable -> variable ID EQUALS funColecciones .

    ID              reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    PRINT           reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    PRINTLN         reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    READLINE        reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    NEGATION        reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    FUN             reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    IF              reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    FOR             reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    WHILE           reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    ENTERO          reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    DECIMAL         reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    CADENA_DE_CARACTERES reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    VAR             reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    VAL             reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    DOUBLE          reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    MAPOF           reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    TRUE            reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    FALSE           reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    LISTOF          reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    SETOF           reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    $end            reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    DLLAVE          reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)
    RETURN          reduce using rule 63 (iniVariable -> variable ID EQUALS funColecciones .)


state 178

    (64) iniVariable -> variable ID EQUALS READLINE . IPAR DPAR
    (125) readline -> variable ID EQUALS READLINE . IPAR DPAR

    IPAR            shift and go to state 219


state 179

    (108) list -> variable ID EQUALS LISTOF . IPAR listElementos DPAR
    (119) coleccion -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 220


state 180

    (107) conjuntos -> variable ID EQUALS SETOF . IPAR listElementos DPAR
    (120) coleccion -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 221


state 181

    (98) maps -> variable ID EQUALS MAPOF . IPAR mapsElemento DPAR
    (97) funMap -> MAPOF . IPAR mapsElemento DPAR PUNTO VALUES
    (94) getMap -> MAPOF . IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (121) coleccion -> MAPOF . IPAR mapsElemento DPAR

    IPAR            shift and go to state 222


state 182

    (128) tipoDeDato -> DOSPUNTOS INT . EQUALS ENTERO
    (135) tipoDeDato2 -> DOSPUNTOS INT .

    EQUALS          shift and go to state 223
    ID              reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    PRINT           reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    PRINTLN         reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    READLINE        reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    NEGATION        reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    FUN             reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    IF              reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    FOR             reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    WHILE           reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    ENTERO          reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    DECIMAL         reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    CADENA_DE_CARACTERES reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    VAR             reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    VAL             reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    DOUBLE          reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    MAPOF           reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    TRUE            reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    FALSE           reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    LISTOF          reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    SETOF           reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    $end            reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    DLLAVE          reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)
    RETURN          reduce using rule 135 (tipoDeDato2 -> DOSPUNTOS INT .)


state 183

    (129) tipoDeDato -> DOSPUNTOS DOUBLE . EQUALS DECIMAL
    (136) tipoDeDato2 -> DOSPUNTOS DOUBLE .

    EQUALS          shift and go to state 224
    ID              reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    PRINT           reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    PRINTLN         reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    READLINE        reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    NEGATION        reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    FUN             reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    IF              reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    FOR             reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    WHILE           reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    ENTERO          reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    DECIMAL         reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    CADENA_DE_CARACTERES reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    VAR             reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    VAL             reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    DOUBLE          reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    MAPOF           reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    TRUE            reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    FALSE           reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    LISTOF          reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    SETOF           reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    $end            reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    DLLAVE          reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)
    RETURN          reduce using rule 136 (tipoDeDato2 -> DOSPUNTOS DOUBLE .)


state 184

    (130) tipoDeDato -> DOSPUNTOS STRING . EQUALS CADENA_DE_CARACTERES
    (137) tipoDeDato2 -> DOSPUNTOS STRING .

    EQUALS          shift and go to state 225
    ID              reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    PRINT           reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    PRINTLN         reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    READLINE        reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    NEGATION        reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    FUN             reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    IF              reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    FOR             reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    WHILE           reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    ENTERO          reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    DECIMAL         reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    CADENA_DE_CARACTERES reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    VAR             reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    VAL             reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    DOUBLE          reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    MAPOF           reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    TRUE            reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    FALSE           reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    LISTOF          reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    SETOF           reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    $end            reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    DLLAVE          reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)
    RETURN          reduce using rule 137 (tipoDeDato2 -> DOSPUNTOS STRING .)


state 185

    (131) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS valorBoolean
    (132) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS expLogicas
    (133) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS expresionRelacional
    (138) tipoDeDato2 -> DOSPUNTOS BOOLEAN .

    EQUALS          shift and go to state 226
    ID              reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    PRINT           reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    PRINTLN         reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    READLINE        reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    NEGATION        reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    FUN             reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    IF              reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    FOR             reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    WHILE           reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    ENTERO          reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    DECIMAL         reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    CADENA_DE_CARACTERES reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    VAR             reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    VAL             reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    DOUBLE          reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    MAPOF           reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    TRUE            reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    FALSE           reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    LISTOF          reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    SETOF           reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    $end            reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    DLLAVE          reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)
    RETURN          reduce using rule 138 (tipoDeDato2 -> DOSPUNTOS BOOLEAN .)


state 186

    (101) tupla -> variable IPAR ID COMA . ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    ID              shift and go to state 227


state 187

    (65) imprimir -> PRINT IPAR elementosPrint DPAR .

    ID              reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    PRINT           reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    PRINTLN         reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    READLINE        reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    NEGATION        reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    FUN             reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    IF              reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    FOR             reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    WHILE           reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    ENTERO          reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    DECIMAL         reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    CADENA_DE_CARACTERES reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    VAR             reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    VAL             reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    DOUBLE          reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    MAPOF           reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    TRUE            reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    FALSE           reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    LISTOF          reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    SETOF           reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    $end            reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    DLLAVE          reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    RETURN          reduce using rule 65 (imprimir -> PRINT IPAR elementosPrint DPAR .)


state 188

    (119) coleccion -> LISTOF IPAR . listElementos DPAR
    (78) imprimirColecciones -> LISTOF IPAR . listElementos DPAR
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 228
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 189

    (120) coleccion -> SETOF IPAR . listElementos DPAR
    (79) imprimirColecciones -> SETOF IPAR . listElementos DPAR
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 229
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 190

    (121) coleccion -> MAPOF IPAR . mapsElemento DPAR
    (77) imprimirColecciones -> MAPOF IPAR . mapsElemento DPAR
    (94) getMap -> MAPOF IPAR . mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (97) funMap -> MAPOF IPAR . mapsElemento DPAR PUNTO VALUES
    (99) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (100) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 150

    mapsElemento                   shift and go to state 230

state 191

    (126) firstAndCap -> ID PUNTO . FIRST IPAR DPAR
    (127) firstAndCap -> ID PUNTO . CAPITALIZE IPAR DPAR
    (93) getMap -> ID PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR
    (88) slice -> ID PUNTO . SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> ID PUNTO . SIZE
    (91) isEmpty -> ID PUNTO . ISEMPTY IPAR DPAR
    (95) funMap -> ID PUNTO . KEYS
    (96) funMap -> ID PUNTO . VALUES

    FIRST           shift and go to state 101
    CAPITALIZE      shift and go to state 102
    GET             shift and go to state 108
    SLICE           shift and go to state 103
    SIZE            shift and go to state 104
    ISEMPTY         shift and go to state 105
    KEYS            shift and go to state 106
    VALUES          shift and go to state 107


state 192

    (76) imprimirColecciones -> PAIR IPAR . tuplaElemento COMA tuplaElemento DPAR
    (102) tuplaElemento -> . valor
    (103) tuplaElemento -> . ID
    (104) tuplaElemento -> . valorBoolean
    (105) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (106) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE

    ID              shift and go to state 233
    LISTOF          shift and go to state 235
    SETOF           shift and go to state 236
    ENTERO          shift and go to state 99
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    tuplaElemento                  shift and go to state 231
    valor                          shift and go to state 232
    valorBoolean                   shift and go to state 234

state 193

    (66) imprimir -> PRINTLN IPAR elementosPrint DPAR .

    ID              reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    PRINT           reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    PRINTLN         reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    READLINE        reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    NEGATION        reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    FUN             reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    IF              reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    FOR             reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    WHILE           reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    ENTERO          reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    DECIMAL         reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    CADENA_DE_CARACTERES reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    VAR             reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    VAL             reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    DOUBLE          reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    MAPOF           reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    TRUE            reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    FALSE           reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    LISTOF          reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    SETOF           reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    $end            reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    DLLAVE          reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    RETURN          reduce using rule 66 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)


state 194

    (117) listElementos -> LISTOF IPAR . listElementos DPAR
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 237
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 195

    (119) coleccion -> LISTOF IPAR listElementos DPAR .

    PUNTO           reduce using rule 119 (coleccion -> LISTOF IPAR listElementos DPAR .)


state 196

    (115) listElementos -> valor COMA . listElementos
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    valor                          shift and go to state 142
    listElementos                  shift and go to state 238
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 197

    (116) listElementos -> ID COMA . listElementos
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 239
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 198

    (114) listElementos -> valorBoolean COMA . listElementos
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    valorBoolean                   shift and go to state 144
    listElementos                  shift and go to state 240
    valor                          shift and go to state 142
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 199

    (118) listElementos -> SETOF IPAR . listElementos DPAR
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 241
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 200

    (120) coleccion -> SETOF IPAR listElementos DPAR .

    PUNTO           reduce using rule 120 (coleccion -> SETOF IPAR listElementos DPAR .)


state 201

    (97) funMap -> MAPOF IPAR mapsElemento DPAR . PUNTO VALUES
    (94) getMap -> MAPOF IPAR mapsElemento DPAR . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (121) coleccion -> MAPOF IPAR mapsElemento DPAR .

  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO           shift and go to state 242

  ! PUNTO           [ reduce using rule 121 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]


state 202

    (99) mapsElemento -> CADENA_DE_CARACTERES TO . tuplaElemento
    (100) mapsElemento -> CADENA_DE_CARACTERES TO . tuplaElemento COMA mapsElemento
    (102) tuplaElemento -> . valor
    (103) tuplaElemento -> . ID
    (104) tuplaElemento -> . valorBoolean
    (105) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (106) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE

    ID              shift and go to state 233
    LISTOF          shift and go to state 235
    SETOF           shift and go to state 236
    ENTERO          shift and go to state 99
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    tuplaElemento                  shift and go to state 243
    valor                          shift and go to state 232
    valorBoolean                   shift and go to state 234

state 203

    (52) entrada_fun -> ID . DOSPUNTOS tipos
    (53) entrada_fun -> ID . DOSPUNTOS tipos COMA entrada_fun

    DOSPUNTOS       shift and go to state 244


state 204

    (23) fun -> FUN ID IPAR DPAR . ILLAVE algoritmo DLLAVE
    (25) fun -> FUN ID IPAR DPAR . DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE

    ILLAVE          shift and go to state 245
    DOSPUNTOS       shift and go to state 246


state 205

    (24) fun -> FUN ID IPAR entrada_fun . DPAR ILLAVE algoritmo DLLAVE
    (26) fun -> FUN ID IPAR entrada_fun . DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> FUN ID IPAR entrada_fun . DPAR EQUALS return

    DPAR            shift and go to state 247


state 206

    (39) if -> IF IPAR entradaIf DPAR . ILLAVE algoritmo DLLAVE
    (40) if -> IF IPAR entradaIf DPAR . return
    (41) if -> IF IPAR entradaIf DPAR . ILLAVE algoritmo DLLAVE else
    (42) if -> IF IPAR entradaIf DPAR . return else
    (48) return -> . expLogicas
    (49) return -> . expresion
    (50) return -> . valorBoolean
    (51) return -> . expresionRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean

    ILLAVE          shift and go to state 248
    NEGATION        shift and go to state 39
    ID              shift and go to state 254
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    DOUBLE          shift and go to state 49

    return                         shift and go to state 249
    expLogicas                     shift and go to state 250
    expresion                      shift and go to state 251
    valorBoolean                   shift and go to state 252
    expresionRelacional            shift and go to state 253
    boolID                         shift and go to state 38
    valor                          shift and go to state 96
    elementoRelacional             shift and go to state 26

state 207

    (35) for -> FOR condicionFor ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 255


state 208

    (36) condicionFor -> IPAR ID IN . ID DPAR
    (37) condicionFor -> IPAR ID IN . ENTERO PUNTO PUNTO ENTERO DPAR
    (38) condicionFor -> IPAR ID IN . ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    ID              shift and go to state 256
    ENTERO          shift and go to state 257


state 209

    (28) while -> WHILE IPAR entradaIf DPAR . ILLAVE algoritmo DLLAVE

    ILLAVE          shift and go to state 258


state 210

    (92) isEmpty -> coleccion PUNTO ISEMPTY IPAR . DPAR

    DPAR            shift and go to state 259


state 211

    (143) expresion -> valor operadorMat expresion .

    ID              reduce using rule 143 (expresion -> valor operadorMat expresion .)
    PRINT           reduce using rule 143 (expresion -> valor operadorMat expresion .)
    PRINTLN         reduce using rule 143 (expresion -> valor operadorMat expresion .)
    READLINE        reduce using rule 143 (expresion -> valor operadorMat expresion .)
    NEGATION        reduce using rule 143 (expresion -> valor operadorMat expresion .)
    FUN             reduce using rule 143 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 143 (expresion -> valor operadorMat expresion .)
    FOR             reduce using rule 143 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 143 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 143 (expresion -> valor operadorMat expresion .)
    DECIMAL         reduce using rule 143 (expresion -> valor operadorMat expresion .)
    CADENA_DE_CARACTERES reduce using rule 143 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 143 (expresion -> valor operadorMat expresion .)
    VAL             reduce using rule 143 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 143 (expresion -> valor operadorMat expresion .)
    MAPOF           reduce using rule 143 (expresion -> valor operadorMat expresion .)
    TRUE            reduce using rule 143 (expresion -> valor operadorMat expresion .)
    FALSE           reduce using rule 143 (expresion -> valor operadorMat expresion .)
    LISTOF          reduce using rule 143 (expresion -> valor operadorMat expresion .)
    SETOF           reduce using rule 143 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 143 (expresion -> valor operadorMat expresion .)
    DLLAVE          reduce using rule 143 (expresion -> valor operadorMat expresion .)
    RETURN          reduce using rule 143 (expresion -> valor operadorMat expresion .)
    DPAR            reduce using rule 143 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 143 (expresion -> valor operadorMat expresion .)


state 212

    (144) expresion -> ID operadorMat expresion .

    ID              reduce using rule 144 (expresion -> ID operadorMat expresion .)
    PRINT           reduce using rule 144 (expresion -> ID operadorMat expresion .)
    PRINTLN         reduce using rule 144 (expresion -> ID operadorMat expresion .)
    READLINE        reduce using rule 144 (expresion -> ID operadorMat expresion .)
    NEGATION        reduce using rule 144 (expresion -> ID operadorMat expresion .)
    FUN             reduce using rule 144 (expresion -> ID operadorMat expresion .)
    IF              reduce using rule 144 (expresion -> ID operadorMat expresion .)
    FOR             reduce using rule 144 (expresion -> ID operadorMat expresion .)
    WHILE           reduce using rule 144 (expresion -> ID operadorMat expresion .)
    ENTERO          reduce using rule 144 (expresion -> ID operadorMat expresion .)
    DECIMAL         reduce using rule 144 (expresion -> ID operadorMat expresion .)
    CADENA_DE_CARACTERES reduce using rule 144 (expresion -> ID operadorMat expresion .)
    VAR             reduce using rule 144 (expresion -> ID operadorMat expresion .)
    VAL             reduce using rule 144 (expresion -> ID operadorMat expresion .)
    DOUBLE          reduce using rule 144 (expresion -> ID operadorMat expresion .)
    MAPOF           reduce using rule 144 (expresion -> ID operadorMat expresion .)
    TRUE            reduce using rule 144 (expresion -> ID operadorMat expresion .)
    FALSE           reduce using rule 144 (expresion -> ID operadorMat expresion .)
    LISTOF          reduce using rule 144 (expresion -> ID operadorMat expresion .)
    SETOF           reduce using rule 144 (expresion -> ID operadorMat expresion .)
    $end            reduce using rule 144 (expresion -> ID operadorMat expresion .)
    DLLAVE          reduce using rule 144 (expresion -> ID operadorMat expresion .)
    RETURN          reduce using rule 144 (expresion -> ID operadorMat expresion .)
    DPAR            reduce using rule 144 (expresion -> ID operadorMat expresion .)
    ELSE            reduce using rule 144 (expresion -> ID operadorMat expresion .)


state 213

    (126) firstAndCap -> ID PUNTO FIRST IPAR DPAR .

    ID              reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    PRINT           reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    PRINTLN         reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    READLINE        reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    NEGATION        reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    FUN             reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    IF              reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    FOR             reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    WHILE           reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    ENTERO          reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    DECIMAL         reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    VAR             reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    VAL             reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    DOUBLE          reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    MAPOF           reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    TRUE            reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    FALSE           reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    LISTOF          reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    SETOF           reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    $end            reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    DLLAVE          reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    RETURN          reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    DPAR            reduce using rule 126 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)


state 214

    (127) firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .

    ID              reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    PRINT           reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    PRINTLN         reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    READLINE        reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    NEGATION        reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    FUN             reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    IF              reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    FOR             reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    WHILE           reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    ENTERO          reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    DECIMAL         reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    VAR             reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    VAL             reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    DOUBLE          reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    MAPOF           reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    TRUE            reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    FALSE           reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    LISTOF          reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    SETOF           reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    $end            reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    DLLAVE          reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    RETURN          reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    DPAR            reduce using rule 127 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)


state 215

    (88) slice -> ID PUNTO SLICE IPAR ENTERO . PUNTO PUNTO ENTERO DPAR

    PUNTO           shift and go to state 260


state 216

    (91) isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .

    ID              reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    PRINT           reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    PRINTLN         reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    READLINE        reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    NEGATION        reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    FUN             reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    IF              reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    FOR             reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    WHILE           reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    ENTERO          reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DECIMAL         reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    VAR             reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    VAL             reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DOUBLE          reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    MAPOF           reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    TRUE            reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    FALSE           reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    LISTOF          reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    SETOF           reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    $end            reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DLLAVE          reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    RETURN          reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DPAR            reduce using rule 91 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)


state 217

    (93) getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES . DPAR

    DPAR            shift and go to state 261


state 218

    (88) slice -> ID PUNTO . SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> ID PUNTO . SIZE
    (91) isEmpty -> ID PUNTO . ISEMPTY IPAR DPAR
    (95) funMap -> ID PUNTO . KEYS
    (96) funMap -> ID PUNTO . VALUES
    (93) getMap -> ID PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    SLICE           shift and go to state 103
    SIZE            shift and go to state 104
    ISEMPTY         shift and go to state 105
    KEYS            shift and go to state 106
    VALUES          shift and go to state 107
    GET             shift and go to state 108


state 219

    (64) iniVariable -> variable ID EQUALS READLINE IPAR . DPAR
    (125) readline -> variable ID EQUALS READLINE IPAR . DPAR

    DPAR            shift and go to state 262


state 220

    (108) list -> variable ID EQUALS LISTOF IPAR . listElementos DPAR
    (119) coleccion -> LISTOF IPAR . listElementos DPAR
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 263
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 221

    (107) conjuntos -> variable ID EQUALS SETOF IPAR . listElementos DPAR
    (120) coleccion -> SETOF IPAR . listElementos DPAR
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 264
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 222

    (98) maps -> variable ID EQUALS MAPOF IPAR . mapsElemento DPAR
    (97) funMap -> MAPOF IPAR . mapsElemento DPAR PUNTO VALUES
    (94) getMap -> MAPOF IPAR . mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (121) coleccion -> MAPOF IPAR . mapsElemento DPAR
    (99) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (100) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 150

    mapsElemento                   shift and go to state 265

state 223

    (128) tipoDeDato -> DOSPUNTOS INT EQUALS . ENTERO

    ENTERO          shift and go to state 266


state 224

    (129) tipoDeDato -> DOSPUNTOS DOUBLE EQUALS . DECIMAL

    DECIMAL         shift and go to state 267


state 225

    (130) tipoDeDato -> DOSPUNTOS STRING EQUALS . CADENA_DE_CARACTERES

    CADENA_DE_CARACTERES shift and go to state 268


state 226

    (131) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . valorBoolean
    (132) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . expLogicas
    (133) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . expresionRelacional
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean

    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    ID              shift and go to state 157
    ENTERO          shift and go to state 121
    DOUBLE          shift and go to state 49

    valorBoolean                   shift and go to state 269
    expLogicas                     shift and go to state 270
    expresionRelacional            shift and go to state 271
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 26

state 227

    (101) tupla -> variable IPAR ID COMA ID . DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    DPAR            shift and go to state 272


state 228

    (119) coleccion -> LISTOF IPAR listElementos . DPAR
    (78) imprimirColecciones -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 273


state 229

    (120) coleccion -> SETOF IPAR listElementos . DPAR
    (79) imprimirColecciones -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 274


state 230

    (121) coleccion -> MAPOF IPAR mapsElemento . DPAR
    (77) imprimirColecciones -> MAPOF IPAR mapsElemento . DPAR
    (94) getMap -> MAPOF IPAR mapsElemento . DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (97) funMap -> MAPOF IPAR mapsElemento . DPAR PUNTO VALUES

    DPAR            shift and go to state 275


state 231

    (76) imprimirColecciones -> PAIR IPAR tuplaElemento . COMA tuplaElemento DPAR

    COMA            shift and go to state 276


state 232

    (102) tuplaElemento -> valor .

    COMA            reduce using rule 102 (tuplaElemento -> valor .)
    DPAR            reduce using rule 102 (tuplaElemento -> valor .)


state 233

    (103) tuplaElemento -> ID .

    COMA            reduce using rule 103 (tuplaElemento -> ID .)
    DPAR            reduce using rule 103 (tuplaElemento -> ID .)


state 234

    (104) tuplaElemento -> valorBoolean .

    COMA            reduce using rule 104 (tuplaElemento -> valorBoolean .)
    DPAR            reduce using rule 104 (tuplaElemento -> valorBoolean .)


state 235

    (105) tuplaElemento -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 277


state 236

    (106) tuplaElemento -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 278


state 237

    (117) listElementos -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 279


state 238

    (115) listElementos -> valor COMA listElementos .

    DPAR            reduce using rule 115 (listElementos -> valor COMA listElementos .)


state 239

    (116) listElementos -> ID COMA listElementos .

    DPAR            reduce using rule 116 (listElementos -> ID COMA listElementos .)


state 240

    (114) listElementos -> valorBoolean COMA listElementos .

    DPAR            reduce using rule 114 (listElementos -> valorBoolean COMA listElementos .)


state 241

    (118) listElementos -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 280


state 242

    (97) funMap -> MAPOF IPAR mapsElemento DPAR PUNTO . VALUES
    (94) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    VALUES          shift and go to state 281
    GET             shift and go to state 282


state 243

    (99) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento .
    (100) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento . COMA mapsElemento

    DPAR            reduce using rule 99 (mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento .)
    COMA            shift and go to state 283


state 244

    (52) entrada_fun -> ID DOSPUNTOS . tipos
    (53) entrada_fun -> ID DOSPUNTOS . tipos COMA entrada_fun
    (54) tipos -> . INT
    (55) tipos -> . DOUBLE
    (56) tipos -> . BOOLEAN
    (57) tipos -> . STRING

    INT             shift and go to state 285
    DOUBLE          shift and go to state 286
    BOOLEAN         shift and go to state 287
    STRING          shift and go to state 288

    tipos                          shift and go to state 284

state 245

    (23) fun -> FUN ID IPAR DPAR ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresionRelacional
    (5) cuerpo -> . imprimir
    (6) cuerpo -> . readline
    (7) cuerpo -> . firstAndCap
    (8) cuerpo -> . list
    (9) cuerpo -> . conjuntos
    (10) cuerpo -> . tupla
    (11) cuerpo -> . maps
    (12) cuerpo -> . funColecciones
    (13) cuerpo -> . expLogicas
    (14) cuerpo -> . fun
    (15) cuerpo -> . if
    (16) cuerpo -> . for
    (17) cuerpo -> . while
    (18) cuerpo -> . valorIncDec
    (19) cuerpo -> . valorInDecAsignacion
    (20) cuerpo -> . definicionVariables
    (21) cuerpo -> . valor operadorMat expresion
    (22) cuerpo -> . ID operadorMat expresion
    (58) iniVariable -> . variable ID tipoDeDato
    (59) iniVariable -> . variable ID EQUALS valor
    (60) iniVariable -> . variable ID EQUALS valorBoolean
    (61) iniVariable -> . variable ID EQUALS expLogicas
    (62) iniVariable -> . variable ID EQUALS expresionRelacional
    (63) iniVariable -> . variable ID EQUALS funColecciones
    (64) iniVariable -> . variable ID EQUALS READLINE IPAR DPAR
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) imprimir -> . PRINT IPAR elementosPrint DPAR
    (66) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (124) readline -> . READLINE IPAR DPAR
    (125) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (108) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (23) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> . IF IPAR entradaIf DPAR return
    (41) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> . IF IPAR entradaIf DPAR return else
    (35) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (28) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (30) valorIncDec -> . ID incrementoDec
    (29) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (139) definicionVariables -> . ID EQUALS valor
    (140) definicionVariables -> . ID EQUALS valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (122) variable -> . VAR
    (123) variable -> . VAL
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 27
    PRINTLN         shift and go to state 28
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    VAR             shift and go to state 47
    VAL             shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 289
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresionRelacional            shift and go to state 4
    imprimir                       shift and go to state 5
    readline                       shift and go to state 6
    firstAndCap                    shift and go to state 7
    list                           shift and go to state 8
    conjuntos                      shift and go to state 9
    tupla                          shift and go to state 10
    maps                           shift and go to state 11
    funColecciones                 shift and go to state 12
    expLogicas                     shift and go to state 13
    fun                            shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    valorIncDec                    shift and go to state 18
    valorInDecAsignacion           shift and go to state 19
    definicionVariables            shift and go to state 20
    valor                          shift and go to state 21
    variable                       shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 246

    (25) fun -> FUN ID IPAR DPAR DOSPUNTOS . tipos ILLAVE algoritmo RETURN return DLLAVE
    (54) tipos -> . INT
    (55) tipos -> . DOUBLE
    (56) tipos -> . BOOLEAN
    (57) tipos -> . STRING

    INT             shift and go to state 285
    DOUBLE          shift and go to state 286
    BOOLEAN         shift and go to state 287
    STRING          shift and go to state 288

    tipos                          shift and go to state 290

state 247

    (24) fun -> FUN ID IPAR entrada_fun DPAR . ILLAVE algoritmo DLLAVE
    (26) fun -> FUN ID IPAR entrada_fun DPAR . DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> FUN ID IPAR entrada_fun DPAR . EQUALS return

    ILLAVE          shift and go to state 291
    DOSPUNTOS       shift and go to state 292
    EQUALS          shift and go to state 293


state 248

    (39) if -> IF IPAR entradaIf DPAR ILLAVE . algoritmo DLLAVE
    (41) if -> IF IPAR entradaIf DPAR ILLAVE . algoritmo DLLAVE else
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresionRelacional
    (5) cuerpo -> . imprimir
    (6) cuerpo -> . readline
    (7) cuerpo -> . firstAndCap
    (8) cuerpo -> . list
    (9) cuerpo -> . conjuntos
    (10) cuerpo -> . tupla
    (11) cuerpo -> . maps
    (12) cuerpo -> . funColecciones
    (13) cuerpo -> . expLogicas
    (14) cuerpo -> . fun
    (15) cuerpo -> . if
    (16) cuerpo -> . for
    (17) cuerpo -> . while
    (18) cuerpo -> . valorIncDec
    (19) cuerpo -> . valorInDecAsignacion
    (20) cuerpo -> . definicionVariables
    (21) cuerpo -> . valor operadorMat expresion
    (22) cuerpo -> . ID operadorMat expresion
    (58) iniVariable -> . variable ID tipoDeDato
    (59) iniVariable -> . variable ID EQUALS valor
    (60) iniVariable -> . variable ID EQUALS valorBoolean
    (61) iniVariable -> . variable ID EQUALS expLogicas
    (62) iniVariable -> . variable ID EQUALS expresionRelacional
    (63) iniVariable -> . variable ID EQUALS funColecciones
    (64) iniVariable -> . variable ID EQUALS READLINE IPAR DPAR
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) imprimir -> . PRINT IPAR elementosPrint DPAR
    (66) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (124) readline -> . READLINE IPAR DPAR
    (125) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (108) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (23) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> . IF IPAR entradaIf DPAR return
    (41) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> . IF IPAR entradaIf DPAR return else
    (35) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (28) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (30) valorIncDec -> . ID incrementoDec
    (29) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (139) definicionVariables -> . ID EQUALS valor
    (140) definicionVariables -> . ID EQUALS valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (122) variable -> . VAR
    (123) variable -> . VAL
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 27
    PRINTLN         shift and go to state 28
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    VAR             shift and go to state 47
    VAL             shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 294
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresionRelacional            shift and go to state 4
    imprimir                       shift and go to state 5
    readline                       shift and go to state 6
    firstAndCap                    shift and go to state 7
    list                           shift and go to state 8
    conjuntos                      shift and go to state 9
    tupla                          shift and go to state 10
    maps                           shift and go to state 11
    funColecciones                 shift and go to state 12
    expLogicas                     shift and go to state 13
    fun                            shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    valorIncDec                    shift and go to state 18
    valorInDecAsignacion           shift and go to state 19
    definicionVariables            shift and go to state 20
    valor                          shift and go to state 21
    variable                       shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 249

    (40) if -> IF IPAR entradaIf DPAR return .
    (42) if -> IF IPAR entradaIf DPAR return . else
    (43) else -> . ELSE ILLAVE algoritmo DLLAVE
    (44) else -> . ELSE return

    ID              reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    PRINT           reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    PRINTLN         reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    READLINE        reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    NEGATION        reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    FUN             reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    IF              reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    FOR             reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    WHILE           reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    ENTERO          reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    DECIMAL         reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    CADENA_DE_CARACTERES reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    VAR             reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    VAL             reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    DOUBLE          reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    MAPOF           reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    TRUE            reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    FALSE           reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    LISTOF          reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    SETOF           reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    $end            reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    DLLAVE          reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    RETURN          reduce using rule 40 (if -> IF IPAR entradaIf DPAR return .)
    ELSE            shift and go to state 296

    else                           shift and go to state 295

state 250

    (48) return -> expLogicas .

    ELSE            reduce using rule 48 (return -> expLogicas .)
    ID              reduce using rule 48 (return -> expLogicas .)
    PRINT           reduce using rule 48 (return -> expLogicas .)
    PRINTLN         reduce using rule 48 (return -> expLogicas .)
    READLINE        reduce using rule 48 (return -> expLogicas .)
    NEGATION        reduce using rule 48 (return -> expLogicas .)
    FUN             reduce using rule 48 (return -> expLogicas .)
    IF              reduce using rule 48 (return -> expLogicas .)
    FOR             reduce using rule 48 (return -> expLogicas .)
    WHILE           reduce using rule 48 (return -> expLogicas .)
    ENTERO          reduce using rule 48 (return -> expLogicas .)
    DECIMAL         reduce using rule 48 (return -> expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 48 (return -> expLogicas .)
    VAR             reduce using rule 48 (return -> expLogicas .)
    VAL             reduce using rule 48 (return -> expLogicas .)
    DOUBLE          reduce using rule 48 (return -> expLogicas .)
    MAPOF           reduce using rule 48 (return -> expLogicas .)
    TRUE            reduce using rule 48 (return -> expLogicas .)
    FALSE           reduce using rule 48 (return -> expLogicas .)
    LISTOF          reduce using rule 48 (return -> expLogicas .)
    SETOF           reduce using rule 48 (return -> expLogicas .)
    $end            reduce using rule 48 (return -> expLogicas .)
    DLLAVE          reduce using rule 48 (return -> expLogicas .)
    RETURN          reduce using rule 48 (return -> expLogicas .)


state 251

    (49) return -> expresion .

    ELSE            reduce using rule 49 (return -> expresion .)
    ID              reduce using rule 49 (return -> expresion .)
    PRINT           reduce using rule 49 (return -> expresion .)
    PRINTLN         reduce using rule 49 (return -> expresion .)
    READLINE        reduce using rule 49 (return -> expresion .)
    NEGATION        reduce using rule 49 (return -> expresion .)
    FUN             reduce using rule 49 (return -> expresion .)
    IF              reduce using rule 49 (return -> expresion .)
    FOR             reduce using rule 49 (return -> expresion .)
    WHILE           reduce using rule 49 (return -> expresion .)
    ENTERO          reduce using rule 49 (return -> expresion .)
    DECIMAL         reduce using rule 49 (return -> expresion .)
    CADENA_DE_CARACTERES reduce using rule 49 (return -> expresion .)
    VAR             reduce using rule 49 (return -> expresion .)
    VAL             reduce using rule 49 (return -> expresion .)
    DOUBLE          reduce using rule 49 (return -> expresion .)
    MAPOF           reduce using rule 49 (return -> expresion .)
    TRUE            reduce using rule 49 (return -> expresion .)
    FALSE           reduce using rule 49 (return -> expresion .)
    LISTOF          reduce using rule 49 (return -> expresion .)
    SETOF           reduce using rule 49 (return -> expresion .)
    $end            reduce using rule 49 (return -> expresion .)
    DLLAVE          reduce using rule 49 (return -> expresion .)
    RETURN          reduce using rule 49 (return -> expresion .)


state 252

    (50) return -> valorBoolean .
    (160) boolID -> valorBoolean .
    (149) elementoRelacional -> valorBoolean .

    ELSE            reduce using rule 50 (return -> valorBoolean .)
    ID              reduce using rule 50 (return -> valorBoolean .)
    PRINT           reduce using rule 50 (return -> valorBoolean .)
    PRINTLN         reduce using rule 50 (return -> valorBoolean .)
    READLINE        reduce using rule 50 (return -> valorBoolean .)
    NEGATION        reduce using rule 50 (return -> valorBoolean .)
    FUN             reduce using rule 50 (return -> valorBoolean .)
    IF              reduce using rule 50 (return -> valorBoolean .)
    FOR             reduce using rule 50 (return -> valorBoolean .)
    WHILE           reduce using rule 50 (return -> valorBoolean .)
    ENTERO          reduce using rule 50 (return -> valorBoolean .)
    DECIMAL         reduce using rule 50 (return -> valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 50 (return -> valorBoolean .)
    VAR             reduce using rule 50 (return -> valorBoolean .)
    VAL             reduce using rule 50 (return -> valorBoolean .)
    DOUBLE          reduce using rule 50 (return -> valorBoolean .)
    MAPOF           reduce using rule 50 (return -> valorBoolean .)
    TRUE            reduce using rule 50 (return -> valorBoolean .)
    FALSE           reduce using rule 50 (return -> valorBoolean .)
    LISTOF          reduce using rule 50 (return -> valorBoolean .)
    SETOF           reduce using rule 50 (return -> valorBoolean .)
    $end            reduce using rule 50 (return -> valorBoolean .)
    DLLAVE          reduce using rule 50 (return -> valorBoolean .)
    RETURN          reduce using rule 50 (return -> valorBoolean .)
    AND             reduce using rule 160 (boolID -> valorBoolean .)
    OR              reduce using rule 160 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)


state 253

    (51) return -> expresionRelacional .

    ELSE            reduce using rule 51 (return -> expresionRelacional .)
    ID              reduce using rule 51 (return -> expresionRelacional .)
    PRINT           reduce using rule 51 (return -> expresionRelacional .)
    PRINTLN         reduce using rule 51 (return -> expresionRelacional .)
    READLINE        reduce using rule 51 (return -> expresionRelacional .)
    NEGATION        reduce using rule 51 (return -> expresionRelacional .)
    FUN             reduce using rule 51 (return -> expresionRelacional .)
    IF              reduce using rule 51 (return -> expresionRelacional .)
    FOR             reduce using rule 51 (return -> expresionRelacional .)
    WHILE           reduce using rule 51 (return -> expresionRelacional .)
    ENTERO          reduce using rule 51 (return -> expresionRelacional .)
    DECIMAL         reduce using rule 51 (return -> expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 51 (return -> expresionRelacional .)
    VAR             reduce using rule 51 (return -> expresionRelacional .)
    VAL             reduce using rule 51 (return -> expresionRelacional .)
    DOUBLE          reduce using rule 51 (return -> expresionRelacional .)
    MAPOF           reduce using rule 51 (return -> expresionRelacional .)
    TRUE            reduce using rule 51 (return -> expresionRelacional .)
    FALSE           reduce using rule 51 (return -> expresionRelacional .)
    LISTOF          reduce using rule 51 (return -> expresionRelacional .)
    SETOF           reduce using rule 51 (return -> expresionRelacional .)
    $end            reduce using rule 51 (return -> expresionRelacional .)
    DLLAVE          reduce using rule 51 (return -> expresionRelacional .)
    RETURN          reduce using rule 51 (return -> expresionRelacional .)


state 254

    (142) expresion -> ID .
    (144) expresion -> ID . operadorMat expresion
    (159) boolID -> ID .
    (148) elementoRelacional -> ID .
    (150) operadorMat -> . PLUS
    (151) operadorMat -> . MINUS
    (152) operadorMat -> . TIMES
    (153) operadorMat -> . DIVIDE

    ELSE            reduce using rule 142 (expresion -> ID .)
    ID              reduce using rule 142 (expresion -> ID .)
    PRINT           reduce using rule 142 (expresion -> ID .)
    PRINTLN         reduce using rule 142 (expresion -> ID .)
    READLINE        reduce using rule 142 (expresion -> ID .)
    NEGATION        reduce using rule 142 (expresion -> ID .)
    FUN             reduce using rule 142 (expresion -> ID .)
    IF              reduce using rule 142 (expresion -> ID .)
    FOR             reduce using rule 142 (expresion -> ID .)
    WHILE           reduce using rule 142 (expresion -> ID .)
    ENTERO          reduce using rule 142 (expresion -> ID .)
    DECIMAL         reduce using rule 142 (expresion -> ID .)
    CADENA_DE_CARACTERES reduce using rule 142 (expresion -> ID .)
    VAR             reduce using rule 142 (expresion -> ID .)
    VAL             reduce using rule 142 (expresion -> ID .)
    DOUBLE          reduce using rule 142 (expresion -> ID .)
    MAPOF           reduce using rule 142 (expresion -> ID .)
    TRUE            reduce using rule 142 (expresion -> ID .)
    FALSE           reduce using rule 142 (expresion -> ID .)
    LISTOF          reduce using rule 142 (expresion -> ID .)
    SETOF           reduce using rule 142 (expresion -> ID .)
    $end            reduce using rule 142 (expresion -> ID .)
    DLLAVE          reduce using rule 142 (expresion -> ID .)
    RETURN          reduce using rule 142 (expresion -> ID .)
    AND             reduce using rule 159 (boolID -> ID .)
    OR              reduce using rule 159 (boolID -> ID .)
    EQUAL           reduce using rule 148 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 148 (elementoRelacional -> ID .)
    LARGE           reduce using rule 148 (elementoRelacional -> ID .)
    SMALL           reduce using rule 148 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 148 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 148 (elementoRelacional -> ID .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

    operadorMat                    shift and go to state 164

state 255

    (35) for -> FOR condicionFor ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 35 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)


state 256

    (36) condicionFor -> IPAR ID IN ID . DPAR

    DPAR            shift and go to state 297


state 257

    (37) condicionFor -> IPAR ID IN ENTERO . PUNTO PUNTO ENTERO DPAR
    (38) condicionFor -> IPAR ID IN ENTERO . PUNTO PUNTO ENTERO STEP ENTERO DPAR

    PUNTO           shift and go to state 298


state 258

    (28) while -> WHILE IPAR entradaIf DPAR ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresionRelacional
    (5) cuerpo -> . imprimir
    (6) cuerpo -> . readline
    (7) cuerpo -> . firstAndCap
    (8) cuerpo -> . list
    (9) cuerpo -> . conjuntos
    (10) cuerpo -> . tupla
    (11) cuerpo -> . maps
    (12) cuerpo -> . funColecciones
    (13) cuerpo -> . expLogicas
    (14) cuerpo -> . fun
    (15) cuerpo -> . if
    (16) cuerpo -> . for
    (17) cuerpo -> . while
    (18) cuerpo -> . valorIncDec
    (19) cuerpo -> . valorInDecAsignacion
    (20) cuerpo -> . definicionVariables
    (21) cuerpo -> . valor operadorMat expresion
    (22) cuerpo -> . ID operadorMat expresion
    (58) iniVariable -> . variable ID tipoDeDato
    (59) iniVariable -> . variable ID EQUALS valor
    (60) iniVariable -> . variable ID EQUALS valorBoolean
    (61) iniVariable -> . variable ID EQUALS expLogicas
    (62) iniVariable -> . variable ID EQUALS expresionRelacional
    (63) iniVariable -> . variable ID EQUALS funColecciones
    (64) iniVariable -> . variable ID EQUALS READLINE IPAR DPAR
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) imprimir -> . PRINT IPAR elementosPrint DPAR
    (66) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (124) readline -> . READLINE IPAR DPAR
    (125) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (108) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (23) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> . IF IPAR entradaIf DPAR return
    (41) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> . IF IPAR entradaIf DPAR return else
    (35) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (28) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (30) valorIncDec -> . ID incrementoDec
    (29) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (139) definicionVariables -> . ID EQUALS valor
    (140) definicionVariables -> . ID EQUALS valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (122) variable -> . VAR
    (123) variable -> . VAL
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 27
    PRINTLN         shift and go to state 28
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    VAR             shift and go to state 47
    VAL             shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 299
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresionRelacional            shift and go to state 4
    imprimir                       shift and go to state 5
    readline                       shift and go to state 6
    firstAndCap                    shift and go to state 7
    list                           shift and go to state 8
    conjuntos                      shift and go to state 9
    tupla                          shift and go to state 10
    maps                           shift and go to state 11
    funColecciones                 shift and go to state 12
    expLogicas                     shift and go to state 13
    fun                            shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    valorIncDec                    shift and go to state 18
    valorInDecAsignacion           shift and go to state 19
    definicionVariables            shift and go to state 20
    valor                          shift and go to state 21
    variable                       shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 259

    (92) isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .

    ID              reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    PRINT           reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    PRINTLN         reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    READLINE        reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    NEGATION        reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    FUN             reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    IF              reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    FOR             reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    WHILE           reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    ENTERO          reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DECIMAL         reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    VAR             reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    VAL             reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DOUBLE          reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    MAPOF           reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    TRUE            reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    FALSE           reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    LISTOF          reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    SETOF           reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    $end            reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DLLAVE          reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    RETURN          reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DPAR            reduce using rule 92 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)


state 260

    (88) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO . PUNTO ENTERO DPAR

    PUNTO           shift and go to state 300


state 261

    (93) getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .

    ID              reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINT           reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINTLN         reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    READLINE        reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    NEGATION        reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FUN             reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    IF              reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FOR             reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    WHILE           reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    ENTERO          reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DECIMAL         reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    CADENA_DE_CARACTERES reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAR             reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAL             reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DOUBLE          reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    MAPOF           reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    TRUE            reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FALSE           reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    LISTOF          reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    SETOF           reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    $end            reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DLLAVE          reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    RETURN          reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DPAR            reduce using rule 93 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)


state 262

    (64) iniVariable -> variable ID EQUALS READLINE IPAR DPAR .
    (125) readline -> variable ID EQUALS READLINE IPAR DPAR .

  ! reduce/reduce conflict for ID resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for READLINE resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for NEGATION resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for FUN resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for IF resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for FOR resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for WHILE resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for ENTERO resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for CADENA_DE_CARACTERES resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for VAR resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for VAL resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for MAPOF resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for TRUE resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for FALSE resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for LISTOF resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for SETOF resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for $end resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for DLLAVE resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
  ! reduce/reduce conflict for RETURN resolved using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    ID              reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    PRINT           reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    PRINTLN         reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    READLINE        reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    NEGATION        reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    FUN             reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    IF              reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    FOR             reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    WHILE           reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    ENTERO          reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    DECIMAL         reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    VAR             reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    VAL             reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    DOUBLE          reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    MAPOF           reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    TRUE            reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    FALSE           reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    LISTOF          reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    SETOF           reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    $end            reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    DLLAVE          reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)
    RETURN          reduce using rule 64 (iniVariable -> variable ID EQUALS READLINE IPAR DPAR .)

  ! ID              [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! PRINT           [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! PRINTLN         [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! READLINE        [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! NEGATION        [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! FUN             [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! IF              [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! FOR             [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! WHILE           [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! ENTERO          [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! DECIMAL         [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! CADENA_DE_CARACTERES [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! VAR             [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! VAL             [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! DOUBLE          [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! MAPOF           [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! TRUE            [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! FALSE           [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! LISTOF          [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! SETOF           [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! $end            [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! DLLAVE          [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]
  ! RETURN          [ reduce using rule 125 (readline -> variable ID EQUALS READLINE IPAR DPAR .) ]


state 263

    (108) list -> variable ID EQUALS LISTOF IPAR listElementos . DPAR
    (119) coleccion -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 301


state 264

    (107) conjuntos -> variable ID EQUALS SETOF IPAR listElementos . DPAR
    (120) coleccion -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 302


state 265

    (98) maps -> variable ID EQUALS MAPOF IPAR mapsElemento . DPAR
    (97) funMap -> MAPOF IPAR mapsElemento . DPAR PUNTO VALUES
    (94) getMap -> MAPOF IPAR mapsElemento . DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (121) coleccion -> MAPOF IPAR mapsElemento . DPAR

    DPAR            shift and go to state 303


state 266

    (128) tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .

    ID              reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    PRINT           reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    PRINTLN         reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    READLINE        reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    NEGATION        reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    FUN             reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    IF              reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    FOR             reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    WHILE           reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    ENTERO          reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    DECIMAL         reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    VAR             reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    VAL             reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    DOUBLE          reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    MAPOF           reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    TRUE            reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    FALSE           reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    LISTOF          reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    SETOF           reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    $end            reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    DLLAVE          reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    RETURN          reduce using rule 128 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)


state 267

    (129) tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .

    ID              reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    PRINT           reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    PRINTLN         reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    READLINE        reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    NEGATION        reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    FUN             reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    IF              reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    FOR             reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    WHILE           reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    ENTERO          reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    DECIMAL         reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    CADENA_DE_CARACTERES reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    VAR             reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    VAL             reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    DOUBLE          reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    MAPOF           reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    TRUE            reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    FALSE           reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    LISTOF          reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    SETOF           reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    $end            reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    DLLAVE          reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    RETURN          reduce using rule 129 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)


state 268

    (130) tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .

    ID              reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    PRINT           reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    PRINTLN         reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    READLINE        reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    NEGATION        reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    FUN             reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    IF              reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    FOR             reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    WHILE           reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    ENTERO          reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    DECIMAL         reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    CADENA_DE_CARACTERES reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    VAR             reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    VAL             reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    DOUBLE          reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    MAPOF           reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    TRUE            reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    FALSE           reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    LISTOF          reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    SETOF           reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    $end            reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    DLLAVE          reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    RETURN          reduce using rule 130 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)


state 269

    (131) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .
    (160) boolID -> valorBoolean .
    (149) elementoRelacional -> valorBoolean .

    ID              reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    PRINT           reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    PRINTLN         reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    READLINE        reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    NEGATION        reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    FUN             reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    IF              reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    FOR             reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    WHILE           reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    ENTERO          reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    DECIMAL         reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    VAR             reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    VAL             reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    DOUBLE          reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    MAPOF           reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    TRUE            reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    FALSE           reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    LISTOF          reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    SETOF           reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    $end            reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    DLLAVE          reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    RETURN          reduce using rule 131 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    AND             reduce using rule 160 (boolID -> valorBoolean .)
    OR              reduce using rule 160 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 149 (elementoRelacional -> valorBoolean .)


state 270

    (132) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .

    ID              reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    PRINT           reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    PRINTLN         reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    READLINE        reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    NEGATION        reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    FUN             reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    IF              reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    FOR             reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    WHILE           reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    ENTERO          reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    DECIMAL         reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    VAR             reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    VAL             reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    DOUBLE          reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    MAPOF           reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    TRUE            reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    FALSE           reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    LISTOF          reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    SETOF           reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    $end            reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    DLLAVE          reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    RETURN          reduce using rule 132 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)


state 271

    (133) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .

    ID              reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    PRINT           reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    PRINTLN         reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    READLINE        reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    NEGATION        reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    FUN             reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    IF              reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    FOR             reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    WHILE           reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    ENTERO          reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    DECIMAL         reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    VAR             reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    VAL             reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    DOUBLE          reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    MAPOF           reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    TRUE            reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    FALSE           reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    LISTOF          reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    SETOF           reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    $end            reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    DLLAVE          reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    RETURN          reduce using rule 133 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)


state 272

    (101) tupla -> variable IPAR ID COMA ID DPAR . EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    EQUALS          shift and go to state 304


state 273

    (119) coleccion -> LISTOF IPAR listElementos DPAR .
    (78) imprimirColecciones -> LISTOF IPAR listElementos DPAR .

  ! reduce/reduce conflict for DPAR resolved using rule 78 (imprimirColecciones -> LISTOF IPAR listElementos DPAR .)
    PUNTO           reduce using rule 119 (coleccion -> LISTOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 78 (imprimirColecciones -> LISTOF IPAR listElementos DPAR .)

  ! DPAR            [ reduce using rule 119 (coleccion -> LISTOF IPAR listElementos DPAR .) ]


state 274

    (120) coleccion -> SETOF IPAR listElementos DPAR .
    (79) imprimirColecciones -> SETOF IPAR listElementos DPAR .

  ! reduce/reduce conflict for DPAR resolved using rule 79 (imprimirColecciones -> SETOF IPAR listElementos DPAR .)
    PUNTO           reduce using rule 120 (coleccion -> SETOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 79 (imprimirColecciones -> SETOF IPAR listElementos DPAR .)

  ! DPAR            [ reduce using rule 120 (coleccion -> SETOF IPAR listElementos DPAR .) ]


state 275

    (121) coleccion -> MAPOF IPAR mapsElemento DPAR .
    (77) imprimirColecciones -> MAPOF IPAR mapsElemento DPAR .
    (94) getMap -> MAPOF IPAR mapsElemento DPAR . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (97) funMap -> MAPOF IPAR mapsElemento DPAR . PUNTO VALUES

  ! reduce/reduce conflict for DPAR resolved using rule 77 (imprimirColecciones -> MAPOF IPAR mapsElemento DPAR .)
  ! shift/reduce conflict for PUNTO resolved as shift
    DPAR            reduce using rule 77 (imprimirColecciones -> MAPOF IPAR mapsElemento DPAR .)
    PUNTO           shift and go to state 305

  ! PUNTO           [ reduce using rule 121 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]
  ! DPAR            [ reduce using rule 121 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]


state 276

    (76) imprimirColecciones -> PAIR IPAR tuplaElemento COMA . tuplaElemento DPAR
    (102) tuplaElemento -> . valor
    (103) tuplaElemento -> . ID
    (104) tuplaElemento -> . valorBoolean
    (105) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (106) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE

    ID              shift and go to state 233
    LISTOF          shift and go to state 235
    SETOF           shift and go to state 236
    ENTERO          shift and go to state 99
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    tuplaElemento                  shift and go to state 306
    valor                          shift and go to state 232
    valorBoolean                   shift and go to state 234

state 277

    (105) tuplaElemento -> LISTOF IPAR . listElementos DPAR
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 307
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 278

    (106) tuplaElemento -> SETOF IPAR . listElementos DPAR
    (109) listElementos -> . valor
    (110) listElementos -> . ID
    (111) listElementos -> . valorBoolean
    (112) listElementos -> . expresionRelacional
    (113) listElementos -> . expLogicas
    (114) listElementos -> . valorBoolean COMA listElementos
    (115) listElementos -> . valor COMA listElementos
    (116) listElementos -> . ID COMA listElementos
    (117) listElementos -> . LISTOF IPAR listElementos DPAR
    (118) listElementos -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean

    ID              shift and go to state 143
    LISTOF          shift and go to state 140
    SETOF           shift and go to state 147
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 308
    valor                          shift and go to state 142
    valorBoolean                   shift and go to state 144
    expresionRelacional            shift and go to state 145
    expLogicas                     shift and go to state 146
    elementoRelacional             shift and go to state 26
    boolID                         shift and go to state 38

state 279

    (117) listElementos -> LISTOF IPAR listElementos DPAR .

    DPAR            reduce using rule 117 (listElementos -> LISTOF IPAR listElementos DPAR .)


state 280

    (118) listElementos -> SETOF IPAR listElementos DPAR .

    DPAR            reduce using rule 118 (listElementos -> SETOF IPAR listElementos DPAR .)


state 281

    (97) funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .

    ID              reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    PRINT           reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    PRINTLN         reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    READLINE        reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    NEGATION        reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    FUN             reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    IF              reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    FOR             reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    WHILE           reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    ENTERO          reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DECIMAL         reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    CADENA_DE_CARACTERES reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    VAR             reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    VAL             reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DOUBLE          reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    MAPOF           reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    TRUE            reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    FALSE           reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    LISTOF          reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    SETOF           reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    $end            reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DLLAVE          reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    RETURN          reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DPAR            reduce using rule 97 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)


state 282

    (94) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET . IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 309


state 283

    (100) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA . mapsElemento
    (99) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (100) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 150

    mapsElemento                   shift and go to state 310

state 284

    (52) entrada_fun -> ID DOSPUNTOS tipos .
    (53) entrada_fun -> ID DOSPUNTOS tipos . COMA entrada_fun

    DPAR            reduce using rule 52 (entrada_fun -> ID DOSPUNTOS tipos .)
    COMA            shift and go to state 311


state 285

    (54) tipos -> INT .

    COMA            reduce using rule 54 (tipos -> INT .)
    DPAR            reduce using rule 54 (tipos -> INT .)
    ILLAVE          reduce using rule 54 (tipos -> INT .)


state 286

    (55) tipos -> DOUBLE .

    COMA            reduce using rule 55 (tipos -> DOUBLE .)
    DPAR            reduce using rule 55 (tipos -> DOUBLE .)
    ILLAVE          reduce using rule 55 (tipos -> DOUBLE .)


state 287

    (56) tipos -> BOOLEAN .

    COMA            reduce using rule 56 (tipos -> BOOLEAN .)
    DPAR            reduce using rule 56 (tipos -> BOOLEAN .)
    ILLAVE          reduce using rule 56 (tipos -> BOOLEAN .)


state 288

    (57) tipos -> STRING .

    COMA            reduce using rule 57 (tipos -> STRING .)
    DPAR            reduce using rule 57 (tipos -> STRING .)
    ILLAVE          reduce using rule 57 (tipos -> STRING .)


state 289

    (23) fun -> FUN ID IPAR DPAR ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 312


state 290

    (25) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos . ILLAVE algoritmo RETURN return DLLAVE

    ILLAVE          shift and go to state 313


state 291

    (24) fun -> FUN ID IPAR entrada_fun DPAR ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresionRelacional
    (5) cuerpo -> . imprimir
    (6) cuerpo -> . readline
    (7) cuerpo -> . firstAndCap
    (8) cuerpo -> . list
    (9) cuerpo -> . conjuntos
    (10) cuerpo -> . tupla
    (11) cuerpo -> . maps
    (12) cuerpo -> . funColecciones
    (13) cuerpo -> . expLogicas
    (14) cuerpo -> . fun
    (15) cuerpo -> . if
    (16) cuerpo -> . for
    (17) cuerpo -> . while
    (18) cuerpo -> . valorIncDec
    (19) cuerpo -> . valorInDecAsignacion
    (20) cuerpo -> . definicionVariables
    (21) cuerpo -> . valor operadorMat expresion
    (22) cuerpo -> . ID operadorMat expresion
    (58) iniVariable -> . variable ID tipoDeDato
    (59) iniVariable -> . variable ID EQUALS valor
    (60) iniVariable -> . variable ID EQUALS valorBoolean
    (61) iniVariable -> . variable ID EQUALS expLogicas
    (62) iniVariable -> . variable ID EQUALS expresionRelacional
    (63) iniVariable -> . variable ID EQUALS funColecciones
    (64) iniVariable -> . variable ID EQUALS READLINE IPAR DPAR
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) imprimir -> . PRINT IPAR elementosPrint DPAR
    (66) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (124) readline -> . READLINE IPAR DPAR
    (125) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (108) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (23) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> . IF IPAR entradaIf DPAR return
    (41) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> . IF IPAR entradaIf DPAR return else
    (35) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (28) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (30) valorIncDec -> . ID incrementoDec
    (29) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (139) definicionVariables -> . ID EQUALS valor
    (140) definicionVariables -> . ID EQUALS valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (122) variable -> . VAR
    (123) variable -> . VAL
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 27
    PRINTLN         shift and go to state 28
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    VAR             shift and go to state 47
    VAL             shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 314
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresionRelacional            shift and go to state 4
    imprimir                       shift and go to state 5
    readline                       shift and go to state 6
    firstAndCap                    shift and go to state 7
    list                           shift and go to state 8
    conjuntos                      shift and go to state 9
    tupla                          shift and go to state 10
    maps                           shift and go to state 11
    funColecciones                 shift and go to state 12
    expLogicas                     shift and go to state 13
    fun                            shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    valorIncDec                    shift and go to state 18
    valorInDecAsignacion           shift and go to state 19
    definicionVariables            shift and go to state 20
    valor                          shift and go to state 21
    variable                       shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 292

    (26) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS . tipos ILLAVE algoritmo RETURN return DLLAVE
    (54) tipos -> . INT
    (55) tipos -> . DOUBLE
    (56) tipos -> . BOOLEAN
    (57) tipos -> . STRING

    INT             shift and go to state 285
    DOUBLE          shift and go to state 286
    BOOLEAN         shift and go to state 287
    STRING          shift and go to state 288

    tipos                          shift and go to state 315

state 293

    (27) fun -> FUN ID IPAR entrada_fun DPAR EQUALS . return
    (48) return -> . expLogicas
    (49) return -> . expresion
    (50) return -> . valorBoolean
    (51) return -> . expresionRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean

    NEGATION        shift and go to state 39
    ID              shift and go to state 254
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    DOUBLE          shift and go to state 49

    return                         shift and go to state 316
    expLogicas                     shift and go to state 250
    expresion                      shift and go to state 251
    valorBoolean                   shift and go to state 252
    expresionRelacional            shift and go to state 253
    boolID                         shift and go to state 38
    valor                          shift and go to state 96
    elementoRelacional             shift and go to state 26

state 294

    (39) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo . DLLAVE
    (41) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo . DLLAVE else

    DLLAVE          shift and go to state 317


state 295

    (42) if -> IF IPAR entradaIf DPAR return else .

    ID              reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    PRINT           reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    PRINTLN         reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    READLINE        reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    NEGATION        reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    FUN             reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    IF              reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    FOR             reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    WHILE           reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    ENTERO          reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    DECIMAL         reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    CADENA_DE_CARACTERES reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    VAR             reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    VAL             reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    DOUBLE          reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    MAPOF           reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    TRUE            reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    FALSE           reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    LISTOF          reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    SETOF           reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    $end            reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    DLLAVE          reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)
    RETURN          reduce using rule 42 (if -> IF IPAR entradaIf DPAR return else .)


state 296

    (43) else -> ELSE . ILLAVE algoritmo DLLAVE
    (44) else -> ELSE . return
    (48) return -> . expLogicas
    (49) return -> . expresion
    (50) return -> . valorBoolean
    (51) return -> . expresionRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean

    ILLAVE          shift and go to state 318
    NEGATION        shift and go to state 39
    ID              shift and go to state 254
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    DOUBLE          shift and go to state 49

    return                         shift and go to state 319
    expLogicas                     shift and go to state 250
    expresion                      shift and go to state 251
    valorBoolean                   shift and go to state 252
    expresionRelacional            shift and go to state 253
    boolID                         shift and go to state 38
    valor                          shift and go to state 96
    elementoRelacional             shift and go to state 26

state 297

    (36) condicionFor -> IPAR ID IN ID DPAR .

    ILLAVE          reduce using rule 36 (condicionFor -> IPAR ID IN ID DPAR .)


state 298

    (37) condicionFor -> IPAR ID IN ENTERO PUNTO . PUNTO ENTERO DPAR
    (38) condicionFor -> IPAR ID IN ENTERO PUNTO . PUNTO ENTERO STEP ENTERO DPAR

    PUNTO           shift and go to state 320


state 299

    (28) while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 321


state 300

    (88) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO . ENTERO DPAR

    ENTERO          shift and go to state 322


state 301

    (108) list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .
    (119) coleccion -> LISTOF IPAR listElementos DPAR .

    ID              reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    PRINT           reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    PRINTLN         reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    READLINE        reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    NEGATION        reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    FUN             reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    IF              reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    FOR             reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    WHILE           reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    ENTERO          reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    DECIMAL         reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    CADENA_DE_CARACTERES reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    VAR             reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    VAL             reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    DOUBLE          reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    MAPOF           reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    TRUE            reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    FALSE           reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    LISTOF          reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    SETOF           reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    $end            reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    DLLAVE          reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    RETURN          reduce using rule 108 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    PUNTO           reduce using rule 119 (coleccion -> LISTOF IPAR listElementos DPAR .)


state 302

    (107) conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .
    (120) coleccion -> SETOF IPAR listElementos DPAR .

    ID              reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    PRINT           reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    PRINTLN         reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    READLINE        reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    NEGATION        reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    FUN             reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    IF              reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    FOR             reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    WHILE           reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    ENTERO          reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    DECIMAL         reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    CADENA_DE_CARACTERES reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    VAR             reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    VAL             reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    DOUBLE          reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    MAPOF           reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    TRUE            reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    FALSE           reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    LISTOF          reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    SETOF           reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    $end            reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    DLLAVE          reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    RETURN          reduce using rule 107 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    PUNTO           reduce using rule 120 (coleccion -> SETOF IPAR listElementos DPAR .)


state 303

    (98) maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .
    (97) funMap -> MAPOF IPAR mapsElemento DPAR . PUNTO VALUES
    (94) getMap -> MAPOF IPAR mapsElemento DPAR . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (121) coleccion -> MAPOF IPAR mapsElemento DPAR .

  ! shift/reduce conflict for PUNTO resolved as shift
    ID              reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    PRINT           reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    PRINTLN         reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    READLINE        reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    NEGATION        reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    FUN             reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    IF              reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    FOR             reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    WHILE           reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    ENTERO          reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    DECIMAL         reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    CADENA_DE_CARACTERES reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    VAR             reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    VAL             reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    DOUBLE          reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    MAPOF           reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    TRUE            reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    FALSE           reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    LISTOF          reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    SETOF           reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    $end            reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    DLLAVE          reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    RETURN          reduce using rule 98 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    PUNTO           shift and go to state 242

  ! PUNTO           [ reduce using rule 121 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]


state 304

    (101) tupla -> variable IPAR ID COMA ID DPAR EQUALS . PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    PAIR            shift and go to state 323


state 305

    (94) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR
    (97) funMap -> MAPOF IPAR mapsElemento DPAR PUNTO . VALUES

    GET             shift and go to state 282
    VALUES          shift and go to state 281


state 306

    (76) imprimirColecciones -> PAIR IPAR tuplaElemento COMA tuplaElemento . DPAR

    DPAR            shift and go to state 324


state 307

    (105) tuplaElemento -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 325


state 308

    (106) tuplaElemento -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 326


state 309

    (94) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR . CADENA_DE_CARACTERES DPAR

    CADENA_DE_CARACTERES shift and go to state 327


state 310

    (100) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento .

    DPAR            reduce using rule 100 (mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento .)


state 311

    (53) entrada_fun -> ID DOSPUNTOS tipos COMA . entrada_fun
    (52) entrada_fun -> . ID DOSPUNTOS tipos
    (53) entrada_fun -> . ID DOSPUNTOS tipos COMA entrada_fun

    ID              shift and go to state 203

    entrada_fun                    shift and go to state 328

state 312

    (23) fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 23 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)


state 313

    (25) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE . algoritmo RETURN return DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresionRelacional
    (5) cuerpo -> . imprimir
    (6) cuerpo -> . readline
    (7) cuerpo -> . firstAndCap
    (8) cuerpo -> . list
    (9) cuerpo -> . conjuntos
    (10) cuerpo -> . tupla
    (11) cuerpo -> . maps
    (12) cuerpo -> . funColecciones
    (13) cuerpo -> . expLogicas
    (14) cuerpo -> . fun
    (15) cuerpo -> . if
    (16) cuerpo -> . for
    (17) cuerpo -> . while
    (18) cuerpo -> . valorIncDec
    (19) cuerpo -> . valorInDecAsignacion
    (20) cuerpo -> . definicionVariables
    (21) cuerpo -> . valor operadorMat expresion
    (22) cuerpo -> . ID operadorMat expresion
    (58) iniVariable -> . variable ID tipoDeDato
    (59) iniVariable -> . variable ID EQUALS valor
    (60) iniVariable -> . variable ID EQUALS valorBoolean
    (61) iniVariable -> . variable ID EQUALS expLogicas
    (62) iniVariable -> . variable ID EQUALS expresionRelacional
    (63) iniVariable -> . variable ID EQUALS funColecciones
    (64) iniVariable -> . variable ID EQUALS READLINE IPAR DPAR
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) imprimir -> . PRINT IPAR elementosPrint DPAR
    (66) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (124) readline -> . READLINE IPAR DPAR
    (125) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (108) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (23) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> . IF IPAR entradaIf DPAR return
    (41) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> . IF IPAR entradaIf DPAR return else
    (35) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (28) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (30) valorIncDec -> . ID incrementoDec
    (29) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (139) definicionVariables -> . ID EQUALS valor
    (140) definicionVariables -> . ID EQUALS valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (122) variable -> . VAR
    (123) variable -> . VAL
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 27
    PRINTLN         shift and go to state 28
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    VAR             shift and go to state 47
    VAL             shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 329
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresionRelacional            shift and go to state 4
    imprimir                       shift and go to state 5
    readline                       shift and go to state 6
    firstAndCap                    shift and go to state 7
    list                           shift and go to state 8
    conjuntos                      shift and go to state 9
    tupla                          shift and go to state 10
    maps                           shift and go to state 11
    funColecciones                 shift and go to state 12
    expLogicas                     shift and go to state 13
    fun                            shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    valorIncDec                    shift and go to state 18
    valorInDecAsignacion           shift and go to state 19
    definicionVariables            shift and go to state 20
    valor                          shift and go to state 21
    variable                       shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 314

    (24) fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 330


state 315

    (26) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos . ILLAVE algoritmo RETURN return DLLAVE

    ILLAVE          shift and go to state 331


state 316

    (27) fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .

    ID              reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    PRINT           reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    PRINTLN         reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    READLINE        reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    NEGATION        reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    FUN             reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    IF              reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    FOR             reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    WHILE           reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    ENTERO          reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    DECIMAL         reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    CADENA_DE_CARACTERES reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    VAR             reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    VAL             reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    DOUBLE          reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    MAPOF           reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    TRUE            reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    FALSE           reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    LISTOF          reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    SETOF           reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    $end            reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    DLLAVE          reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    RETURN          reduce using rule 27 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)


state 317

    (39) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .
    (41) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE . else
    (43) else -> . ELSE ILLAVE algoritmo DLLAVE
    (44) else -> . ELSE return

    ID              reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    ELSE            shift and go to state 296

    else                           shift and go to state 332

state 318

    (43) else -> ELSE ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresionRelacional
    (5) cuerpo -> . imprimir
    (6) cuerpo -> . readline
    (7) cuerpo -> . firstAndCap
    (8) cuerpo -> . list
    (9) cuerpo -> . conjuntos
    (10) cuerpo -> . tupla
    (11) cuerpo -> . maps
    (12) cuerpo -> . funColecciones
    (13) cuerpo -> . expLogicas
    (14) cuerpo -> . fun
    (15) cuerpo -> . if
    (16) cuerpo -> . for
    (17) cuerpo -> . while
    (18) cuerpo -> . valorIncDec
    (19) cuerpo -> . valorInDecAsignacion
    (20) cuerpo -> . definicionVariables
    (21) cuerpo -> . valor operadorMat expresion
    (22) cuerpo -> . ID operadorMat expresion
    (58) iniVariable -> . variable ID tipoDeDato
    (59) iniVariable -> . variable ID EQUALS valor
    (60) iniVariable -> . variable ID EQUALS valorBoolean
    (61) iniVariable -> . variable ID EQUALS expLogicas
    (62) iniVariable -> . variable ID EQUALS expresionRelacional
    (63) iniVariable -> . variable ID EQUALS funColecciones
    (64) iniVariable -> . variable ID EQUALS READLINE IPAR DPAR
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) imprimir -> . PRINT IPAR elementosPrint DPAR
    (66) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (124) readline -> . READLINE IPAR DPAR
    (125) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (108) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (23) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> . IF IPAR entradaIf DPAR return
    (41) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> . IF IPAR entradaIf DPAR return else
    (35) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (28) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (30) valorIncDec -> . ID incrementoDec
    (29) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (139) definicionVariables -> . ID EQUALS valor
    (140) definicionVariables -> . ID EQUALS valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (122) variable -> . VAR
    (123) variable -> . VAL
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 27
    PRINTLN         shift and go to state 28
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    VAR             shift and go to state 47
    VAL             shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 333
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresionRelacional            shift and go to state 4
    imprimir                       shift and go to state 5
    readline                       shift and go to state 6
    firstAndCap                    shift and go to state 7
    list                           shift and go to state 8
    conjuntos                      shift and go to state 9
    tupla                          shift and go to state 10
    maps                           shift and go to state 11
    funColecciones                 shift and go to state 12
    expLogicas                     shift and go to state 13
    fun                            shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    valorIncDec                    shift and go to state 18
    valorInDecAsignacion           shift and go to state 19
    definicionVariables            shift and go to state 20
    valor                          shift and go to state 21
    variable                       shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 319

    (44) else -> ELSE return .

    ID              reduce using rule 44 (else -> ELSE return .)
    PRINT           reduce using rule 44 (else -> ELSE return .)
    PRINTLN         reduce using rule 44 (else -> ELSE return .)
    READLINE        reduce using rule 44 (else -> ELSE return .)
    NEGATION        reduce using rule 44 (else -> ELSE return .)
    FUN             reduce using rule 44 (else -> ELSE return .)
    IF              reduce using rule 44 (else -> ELSE return .)
    FOR             reduce using rule 44 (else -> ELSE return .)
    WHILE           reduce using rule 44 (else -> ELSE return .)
    ENTERO          reduce using rule 44 (else -> ELSE return .)
    DECIMAL         reduce using rule 44 (else -> ELSE return .)
    CADENA_DE_CARACTERES reduce using rule 44 (else -> ELSE return .)
    VAR             reduce using rule 44 (else -> ELSE return .)
    VAL             reduce using rule 44 (else -> ELSE return .)
    DOUBLE          reduce using rule 44 (else -> ELSE return .)
    MAPOF           reduce using rule 44 (else -> ELSE return .)
    TRUE            reduce using rule 44 (else -> ELSE return .)
    FALSE           reduce using rule 44 (else -> ELSE return .)
    LISTOF          reduce using rule 44 (else -> ELSE return .)
    SETOF           reduce using rule 44 (else -> ELSE return .)
    $end            reduce using rule 44 (else -> ELSE return .)
    DLLAVE          reduce using rule 44 (else -> ELSE return .)
    RETURN          reduce using rule 44 (else -> ELSE return .)


state 320

    (37) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO . ENTERO DPAR
    (38) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO . ENTERO STEP ENTERO DPAR

    ENTERO          shift and go to state 334


state 321

    (28) while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 28 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)


state 322

    (88) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO . DPAR

    DPAR            shift and go to state 335


state 323

    (101) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR . IPAR tuplaElemento COMA tuplaElemento DPAR

    IPAR            shift and go to state 336


state 324

    (76) imprimirColecciones -> PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .

    DPAR            reduce using rule 76 (imprimirColecciones -> PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)


state 325

    (105) tuplaElemento -> LISTOF IPAR listElementos DPAR .

    COMA            reduce using rule 105 (tuplaElemento -> LISTOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 105 (tuplaElemento -> LISTOF IPAR listElementos DPAR .)


state 326

    (106) tuplaElemento -> SETOF IPAR listElementos DPAR .

    COMA            reduce using rule 106 (tuplaElemento -> SETOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 106 (tuplaElemento -> SETOF IPAR listElementos DPAR .)


state 327

    (94) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES . DPAR

    DPAR            shift and go to state 337


state 328

    (53) entrada_fun -> ID DOSPUNTOS tipos COMA entrada_fun .

    DPAR            reduce using rule 53 (entrada_fun -> ID DOSPUNTOS tipos COMA entrada_fun .)


state 329

    (25) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo . RETURN return DLLAVE

    RETURN          shift and go to state 338


state 330

    (24) fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)


state 331

    (26) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE . algoritmo RETURN return DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresionRelacional
    (5) cuerpo -> . imprimir
    (6) cuerpo -> . readline
    (7) cuerpo -> . firstAndCap
    (8) cuerpo -> . list
    (9) cuerpo -> . conjuntos
    (10) cuerpo -> . tupla
    (11) cuerpo -> . maps
    (12) cuerpo -> . funColecciones
    (13) cuerpo -> . expLogicas
    (14) cuerpo -> . fun
    (15) cuerpo -> . if
    (16) cuerpo -> . for
    (17) cuerpo -> . while
    (18) cuerpo -> . valorIncDec
    (19) cuerpo -> . valorInDecAsignacion
    (20) cuerpo -> . definicionVariables
    (21) cuerpo -> . valor operadorMat expresion
    (22) cuerpo -> . ID operadorMat expresion
    (58) iniVariable -> . variable ID tipoDeDato
    (59) iniVariable -> . variable ID EQUALS valor
    (60) iniVariable -> . variable ID EQUALS valorBoolean
    (61) iniVariable -> . variable ID EQUALS expLogicas
    (62) iniVariable -> . variable ID EQUALS expresionRelacional
    (63) iniVariable -> . variable ID EQUALS funColecciones
    (64) iniVariable -> . variable ID EQUALS READLINE IPAR DPAR
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (65) imprimir -> . PRINT IPAR elementosPrint DPAR
    (66) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (124) readline -> . READLINE IPAR DPAR
    (125) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (126) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (127) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (108) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (107) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (101) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (98) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (80) funColecciones -> . indexCol
    (81) funColecciones -> . slice
    (82) funColecciones -> . size
    (83) funColecciones -> . isEmpty
    (84) funColecciones -> . funMap
    (85) funColecciones -> . getMap
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (23) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (25) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (26) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (27) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (40) if -> . IF IPAR entradaIf DPAR return
    (41) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (42) if -> . IF IPAR entradaIf DPAR return else
    (35) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (28) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (30) valorIncDec -> . ID incrementoDec
    (29) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (139) definicionVariables -> . ID EQUALS valor
    (140) definicionVariables -> . ID EQUALS valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (122) variable -> . VAR
    (123) variable -> . VAL
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean
    (86) indexCol -> . ID ICOR ENTERO DCOR
    (87) indexCol -> . ID ICOR ID DCOR
    (88) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (89) size -> . ID PUNTO SIZE
    (90) size -> . coleccion PUNTO SIZE
    (91) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (92) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (95) funMap -> . ID PUNTO KEYS
    (96) funMap -> . ID PUNTO VALUES
    (97) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (93) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (94) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (119) coleccion -> . LISTOF IPAR listElementos DPAR
    (120) coleccion -> . SETOF IPAR listElementos DPAR
    (121) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 27
    PRINTLN         shift and go to state 28
    READLINE        shift and go to state 25
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    VAR             shift and go to state 47
    VAL             shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 339
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresionRelacional            shift and go to state 4
    imprimir                       shift and go to state 5
    readline                       shift and go to state 6
    firstAndCap                    shift and go to state 7
    list                           shift and go to state 8
    conjuntos                      shift and go to state 9
    tupla                          shift and go to state 10
    maps                           shift and go to state 11
    funColecciones                 shift and go to state 12
    expLogicas                     shift and go to state 13
    fun                            shift and go to state 14
    if                             shift and go to state 15
    for                            shift and go to state 16
    while                          shift and go to state 17
    valorIncDec                    shift and go to state 18
    valorInDecAsignacion           shift and go to state 19
    definicionVariables            shift and go to state 20
    valor                          shift and go to state 21
    variable                       shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 26
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 332

    (41) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .

    ID              reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    PRINT           reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    PRINTLN         reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    READLINE        reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    NEGATION        reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    FUN             reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    IF              reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    FOR             reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    WHILE           reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    ENTERO          reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    DECIMAL         reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    CADENA_DE_CARACTERES reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    VAR             reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    VAL             reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    DOUBLE          reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    MAPOF           reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    TRUE            reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    FALSE           reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    LISTOF          reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    SETOF           reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    $end            reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    DLLAVE          reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    RETURN          reduce using rule 41 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)


state 333

    (43) else -> ELSE ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 340


state 334

    (37) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO . DPAR
    (38) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO . STEP ENTERO DPAR

    DPAR            shift and go to state 341
    STEP            shift and go to state 342


state 335

    (88) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .

    ID              reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    PRINT           reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    PRINTLN         reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    READLINE        reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    NEGATION        reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    FUN             reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    IF              reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    FOR             reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    WHILE           reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    ENTERO          reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DECIMAL         reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    CADENA_DE_CARACTERES reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    VAR             reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    VAL             reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DOUBLE          reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    MAPOF           reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    TRUE            reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    FALSE           reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    LISTOF          reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    SETOF           reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    $end            reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DLLAVE          reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    RETURN          reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DPAR            reduce using rule 88 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)


state 336

    (101) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR . tuplaElemento COMA tuplaElemento DPAR
    (102) tuplaElemento -> . valor
    (103) tuplaElemento -> . ID
    (104) tuplaElemento -> . valorBoolean
    (105) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (106) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE

    ID              shift and go to state 233
    LISTOF          shift and go to state 235
    SETOF           shift and go to state 236
    ENTERO          shift and go to state 99
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    tuplaElemento                  shift and go to state 343
    valor                          shift and go to state 232
    valorBoolean                   shift and go to state 234

state 337

    (94) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .

    ID              reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINT           reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINTLN         reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    READLINE        reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    NEGATION        reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FUN             reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    IF              reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FOR             reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    WHILE           reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    ENTERO          reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DECIMAL         reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    CADENA_DE_CARACTERES reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAR             reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAL             reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DOUBLE          reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    MAPOF           reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    TRUE            reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FALSE           reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    LISTOF          reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    SETOF           reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    $end            reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DLLAVE          reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    RETURN          reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DPAR            reduce using rule 94 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)


state 338

    (25) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN . return DLLAVE
    (48) return -> . expLogicas
    (49) return -> . expresion
    (50) return -> . valorBoolean
    (51) return -> . expresionRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean

    NEGATION        shift and go to state 39
    ID              shift and go to state 254
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    DOUBLE          shift and go to state 49

    return                         shift and go to state 344
    expLogicas                     shift and go to state 250
    expresion                      shift and go to state 251
    valorBoolean                   shift and go to state 252
    expresionRelacional            shift and go to state 253
    boolID                         shift and go to state 38
    valor                          shift and go to state 96
    elementoRelacional             shift and go to state 26

state 339

    (26) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo . RETURN return DLLAVE

    RETURN          shift and go to state 345


state 340

    (43) else -> ELSE ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 43 (else -> ELSE ILLAVE algoritmo DLLAVE .)


state 341

    (37) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR .

    ILLAVE          reduce using rule 37 (condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR .)


state 342

    (38) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP . ENTERO DPAR

    ENTERO          shift and go to state 346


state 343

    (101) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento . COMA tuplaElemento DPAR

    COMA            shift and go to state 347


state 344

    (25) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return . DLLAVE

    DLLAVE          shift and go to state 348


state 345

    (26) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN . return DLLAVE
    (48) return -> . expLogicas
    (49) return -> . expresion
    (50) return -> . valorBoolean
    (51) return -> . expresionRelacional
    (157) expLogicas -> . boolID opLogico boolID
    (158) expLogicas -> . NEGATION boolID
    (141) expresion -> . valor
    (142) expresion -> . ID
    (143) expresion -> . valor operadorMat expresion
    (144) expresion -> . ID operadorMat expresion
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE
    (145) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (159) boolID -> . ID
    (160) boolID -> . valorBoolean
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (146) elementoRelacional -> . ENTERO
    (147) elementoRelacional -> . DOUBLE
    (148) elementoRelacional -> . ID
    (149) elementoRelacional -> . valorBoolean

    NEGATION        shift and go to state 39
    ID              shift and go to state 254
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    DOUBLE          shift and go to state 49

    return                         shift and go to state 349
    expLogicas                     shift and go to state 250
    expresion                      shift and go to state 251
    valorBoolean                   shift and go to state 252
    expresionRelacional            shift and go to state 253
    boolID                         shift and go to state 38
    valor                          shift and go to state 96
    elementoRelacional             shift and go to state 26

state 346

    (38) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO . DPAR

    DPAR            shift and go to state 350


state 347

    (101) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA . tuplaElemento DPAR
    (102) tuplaElemento -> . valor
    (103) tuplaElemento -> . ID
    (104) tuplaElemento -> . valorBoolean
    (105) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (106) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (154) valor -> . ENTERO
    (155) valor -> . DECIMAL
    (156) valor -> . CADENA_DE_CARACTERES
    (163) valorBoolean -> . TRUE
    (164) valorBoolean -> . FALSE

    ID              shift and go to state 233
    LISTOF          shift and go to state 235
    SETOF           shift and go to state 236
    ENTERO          shift and go to state 99
    DECIMAL         shift and go to state 45
    CADENA_DE_CARACTERES shift and go to state 46
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    tuplaElemento                  shift and go to state 351
    valor                          shift and go to state 232
    valorBoolean                   shift and go to state 234

state 348

    (25) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .

    ID              reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINT           reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINTLN         reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    READLINE        reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    NEGATION        reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FUN             reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    IF              reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FOR             reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    WHILE           reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    ENTERO          reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DECIMAL         reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAR             reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAL             reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DOUBLE          reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    MAPOF           reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    TRUE            reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FALSE           reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    LISTOF          reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    SETOF           reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    $end            reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DLLAVE          reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    RETURN          reduce using rule 25 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)


state 349

    (26) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return . DLLAVE

    DLLAVE          shift and go to state 352


state 350

    (38) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR .

    ILLAVE          reduce using rule 38 (condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR .)


state 351

    (101) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento . DPAR

    DPAR            shift and go to state 353


state 352

    (26) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .

    ID              reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINT           reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINTLN         reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    READLINE        reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    NEGATION        reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FUN             reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    IF              reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FOR             reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    WHILE           reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    ENTERO          reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DECIMAL         reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAR             reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAL             reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DOUBLE          reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    MAPOF           reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    TRUE            reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FALSE           reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    LISTOF          reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    SETOF           reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    $end            reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DLLAVE          reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    RETURN          reduce using rule 26 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)


state 353

    (101) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .

    ID              reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    PRINT           reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    PRINTLN         reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    READLINE        reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    NEGATION        reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    FUN             reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    IF              reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    FOR             reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    WHILE           reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    ENTERO          reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    DECIMAL         reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    CADENA_DE_CARACTERES reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    VAR             reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    VAL             reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    DOUBLE          reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    MAPOF           reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    TRUE            reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    FALSE           reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    LISTOF          reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    SETOF           reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    $end            reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    DLLAVE          reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    RETURN          reduce using rule 101 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTO in state 201 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 275 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 303 resolved as shift
WARNING: reduce/reduce conflict in state 133 resolved using rule (elementosPrint -> getMap)
WARNING: rejected rule (funColecciones -> getMap) in state 133
WARNING: reduce/reduce conflict in state 262 resolved using rule (iniVariable -> variable ID EQUALS READLINE IPAR DPAR)
WARNING: rejected rule (readline -> variable ID EQUALS READLINE IPAR DPAR) in state 262
WARNING: reduce/reduce conflict in state 273 resolved using rule (imprimirColecciones -> LISTOF IPAR listElementos DPAR)
WARNING: rejected rule (coleccion -> LISTOF IPAR listElementos DPAR) in state 273
WARNING: reduce/reduce conflict in state 274 resolved using rule (imprimirColecciones -> SETOF IPAR listElementos DPAR)
WARNING: rejected rule (coleccion -> SETOF IPAR listElementos DPAR) in state 274
WARNING: reduce/reduce conflict in state 275 resolved using rule (imprimirColecciones -> MAPOF IPAR mapsElemento DPAR)
WARNING: rejected rule (coleccion -> MAPOF IPAR mapsElemento DPAR) in state 275
WARNING: Rule (readline -> variable ID EQUALS READLINE IPAR DPAR) is never reduced
WARNING: Rule (coleccion -> MAPOF IPAR mapsElemento DPAR) is never reduced
