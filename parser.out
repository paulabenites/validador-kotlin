Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    DCOR
    DLLAVE
    ELSE
    EQUAL
    FOR
    FUN
    ICOR
    IF
    ILLAVE
    IN
    INDENT
    ISEMPTY
    KEYS
    LARGE
    LRGEQ
    NEGATION
    NOT
    NOTEQ
    OR
    PUNTOS
    RETURN
    SIZE
    SLICE
    SMALL
    SMLEQ
    STEP
    TAB
    VALUES
    WHILE
    newline

Grammar

Rule 0     S' -> algoritmo
Rule 1     algoritmo -> iniVariable
Rule 2     algoritmo -> expresion
Rule 3     algoritmo -> imprimir
Rule 4     algoritmo -> readline
Rule 5     algoritmo -> firstAndCap
Rule 6     algoritmo -> list
Rule 7     algoritmo -> conjuntos
Rule 8     algoritmo -> tupla
Rule 9     algoritmo -> maps
Rule 10    iniVariable -> variable ID tipoDeDato
Rule 11    iniVariable -> variable ID EQUALS valor
Rule 12    iniVariable -> variable ID EQUALS valorBoolean
Rule 13    maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR
Rule 14    mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento
Rule 15    mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento
Rule 16    tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
Rule 17    tuplaElemento -> valor
Rule 18    tuplaElemento -> ID
Rule 19    tuplaElemento -> valorBoolean
Rule 20    tuplaElemento -> LISTOF IPAR listElementos DPAR
Rule 21    tuplaElemento -> SETOF IPAR listElementos DPAR
Rule 22    conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR
Rule 23    list -> variable ID EQUALS LISTOF IPAR listElementos DPAR
Rule 24    listElementos -> valor
Rule 25    listElementos -> ID
Rule 26    listElementos -> valorBoolean
Rule 27    listElementos -> valorBoolean COMA listElementos
Rule 28    listElementos -> valor COMA listElementos
Rule 29    listElementos -> ID COMA listElementos
Rule 30    listElementos -> LISTOF IPAR listElementos DPAR
Rule 31    listElementos -> SETOF IPAR listElementos DPAR
Rule 32    variable -> VAR
Rule 33    variable -> VAL
Rule 34    readline -> READLINE IPAR DPAR
Rule 35    readline -> variable ID EQUALS READLINE IPAR DPAR
Rule 36    firstAndCap -> ID PUNTO FIRST IPAR DPAR
Rule 37    firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR
Rule 38    tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO
Rule 39    tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL
Rule 40    tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES
Rule 41    tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean
Rule 42    imprimir -> PRINT IPAR expresion DPAR
Rule 43    imprimir -> PRINT IPAR valorBoolean DPAR
Rule 44    imprimir -> PRINTLN IPAR expresion DPAR
Rule 45    imprimir -> PRINTLN IPAR valorBoolean DPAR
Rule 46    expresion -> valor
Rule 47    expresion -> ID
Rule 48    expresion -> valor operadorMat expresion
Rule 49    expresion -> ID operadorMat expresion
Rule 50    operadorMat -> PLUS
Rule 51    operadorMat -> MINUS
Rule 52    operadorMat -> TIMES
Rule 53    operadorMat -> DIVIDE
Rule 54    valor -> ENTERO
Rule 55    valor -> DECIMAL
Rule 56    valor -> CADENA_DE_CARACTERES
Rule 57    valorBoolean -> TRUE
Rule 58    valorBoolean -> FALSE

Terminals, with rules where they appear

AND                  : 
BOOLEAN              : 41
CADENA_DE_CARACTERES : 14 15 40 56
CAPITALIZE           : 37
COMA                 : 15 16 16 27 28 29
DCOR                 : 
DECIMAL              : 39 55
DIVIDE               : 53
DLLAVE               : 
DOSPUNTOS            : 38 39 40 41
DOUBLE               : 39
DPAR                 : 13 16 16 20 21 22 23 30 31 34 35 36 37 42 43 44 45
ELSE                 : 
ENTERO               : 38 54
EQUAL                : 
EQUALS               : 11 12 13 16 22 23 35 38 39 40 41
FALSE                : 58
FIRST                : 36
FOR                  : 
FUN                  : 
ICOR                 : 
ID                   : 10 11 12 13 16 16 18 22 23 25 29 35 36 37 47 49
IF                   : 
ILLAVE               : 
IN                   : 
INDENT               : 
INT                  : 38
IPAR                 : 13 16 16 20 21 22 23 30 31 34 35 36 37 42 43 44 45
ISEMPTY              : 
KEYS                 : 
LARGE                : 
LISTOF               : 20 23 30
LRGEQ                : 
MAPOF                : 13
MINUS                : 51
NEGATION             : 
NOT                  : 
NOTEQ                : 
OR                   : 
PAIR                 : 16
PLUS                 : 50
PRINT                : 42 43
PRINTLN              : 44 45
PUNTO                : 36 37
PUNTOS               : 
READLINE             : 34 35
RETURN               : 
SETOF                : 21 22 31
SIZE                 : 
SLICE                : 
SMALL                : 
SMLEQ                : 
STEP                 : 
STRING               : 40
TAB                  : 
TIMES                : 52
TO                   : 14 15
TRUE                 : 57
VAL                  : 33
VALUES               : 
VAR                  : 32
WHILE                : 
error                : 
newline              : 

Nonterminals, with rules where they appear

algoritmo            : 0
conjuntos            : 7
expresion            : 2 42 44 48 49
firstAndCap          : 5
imprimir             : 3
iniVariable          : 1
list                 : 6
listElementos        : 20 21 22 23 27 28 29 30 31
maps                 : 9
mapsElemento         : 13 15
operadorMat          : 48 49
readline             : 4
tipoDeDato           : 10
tupla                : 8
tuplaElemento        : 14 15 16 16
valor                : 11 17 24 28 46 48
valorBoolean         : 12 19 26 27 41 43 45
variable             : 10 11 12 13 16 22 23 35

Parsing method: LALR

state 0

    (0) S' -> . algoritmo
    (1) algoritmo -> . iniVariable
    (2) algoritmo -> . expresion
    (3) algoritmo -> . imprimir
    (4) algoritmo -> . readline
    (5) algoritmo -> . firstAndCap
    (6) algoritmo -> . list
    (7) algoritmo -> . conjuntos
    (8) algoritmo -> . tupla
    (9) algoritmo -> . maps
    (10) iniVariable -> . variable ID tipoDeDato
    (11) iniVariable -> . variable ID EQUALS valor
    (12) iniVariable -> . variable ID EQUALS valorBoolean
    (46) expresion -> . valor
    (47) expresion -> . ID
    (48) expresion -> . valor operadorMat expresion
    (49) expresion -> . ID operadorMat expresion
    (42) imprimir -> . PRINT IPAR expresion DPAR
    (43) imprimir -> . PRINT IPAR valorBoolean DPAR
    (44) imprimir -> . PRINTLN IPAR expresion DPAR
    (45) imprimir -> . PRINTLN IPAR valorBoolean DPAR
    (34) readline -> . READLINE IPAR DPAR
    (35) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (36) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (37) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (23) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (22) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (16) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (13) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (32) variable -> . VAR
    (33) variable -> . VAL
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 12
    PRINT           shift and go to state 14
    PRINTLN         shift and go to state 15
    READLINE        shift and go to state 16
    VAR             shift and go to state 17
    VAL             shift and go to state 18
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21

    algoritmo                      shift and go to state 1
    iniVariable                    shift and go to state 2
    expresion                      shift and go to state 3
    imprimir                       shift and go to state 4
    readline                       shift and go to state 5
    firstAndCap                    shift and go to state 6
    list                           shift and go to state 7
    conjuntos                      shift and go to state 8
    tupla                          shift and go to state 9
    maps                           shift and go to state 10
    variable                       shift and go to state 11
    valor                          shift and go to state 13

state 1

    (0) S' -> algoritmo .



state 2

    (1) algoritmo -> iniVariable .

    $end            reduce using rule 1 (algoritmo -> iniVariable .)


state 3

    (2) algoritmo -> expresion .

    $end            reduce using rule 2 (algoritmo -> expresion .)


state 4

    (3) algoritmo -> imprimir .

    $end            reduce using rule 3 (algoritmo -> imprimir .)


state 5

    (4) algoritmo -> readline .

    $end            reduce using rule 4 (algoritmo -> readline .)


state 6

    (5) algoritmo -> firstAndCap .

    $end            reduce using rule 5 (algoritmo -> firstAndCap .)


state 7

    (6) algoritmo -> list .

    $end            reduce using rule 6 (algoritmo -> list .)


state 8

    (7) algoritmo -> conjuntos .

    $end            reduce using rule 7 (algoritmo -> conjuntos .)


state 9

    (8) algoritmo -> tupla .

    $end            reduce using rule 8 (algoritmo -> tupla .)


state 10

    (9) algoritmo -> maps .

    $end            reduce using rule 9 (algoritmo -> maps .)


state 11

    (10) iniVariable -> variable . ID tipoDeDato
    (11) iniVariable -> variable . ID EQUALS valor
    (12) iniVariable -> variable . ID EQUALS valorBoolean
    (35) readline -> variable . ID EQUALS READLINE IPAR DPAR
    (23) list -> variable . ID EQUALS LISTOF IPAR listElementos DPAR
    (22) conjuntos -> variable . ID EQUALS SETOF IPAR listElementos DPAR
    (16) tupla -> variable . IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (13) maps -> variable . ID EQUALS MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    IPAR            shift and go to state 23


state 12

    (47) expresion -> ID .
    (49) expresion -> ID . operadorMat expresion
    (36) firstAndCap -> ID . PUNTO FIRST IPAR DPAR
    (37) firstAndCap -> ID . PUNTO CAPITALIZE IPAR DPAR
    (50) operadorMat -> . PLUS
    (51) operadorMat -> . MINUS
    (52) operadorMat -> . TIMES
    (53) operadorMat -> . DIVIDE

    $end            reduce using rule 47 (expresion -> ID .)
    PUNTO           shift and go to state 25
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

    operadorMat                    shift and go to state 24

state 13

    (46) expresion -> valor .
    (48) expresion -> valor . operadorMat expresion
    (50) operadorMat -> . PLUS
    (51) operadorMat -> . MINUS
    (52) operadorMat -> . TIMES
    (53) operadorMat -> . DIVIDE

    $end            reduce using rule 46 (expresion -> valor .)
    DPAR            reduce using rule 46 (expresion -> valor .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

    operadorMat                    shift and go to state 30

state 14

    (42) imprimir -> PRINT . IPAR expresion DPAR
    (43) imprimir -> PRINT . IPAR valorBoolean DPAR

    IPAR            shift and go to state 31


state 15

    (44) imprimir -> PRINTLN . IPAR expresion DPAR
    (45) imprimir -> PRINTLN . IPAR valorBoolean DPAR

    IPAR            shift and go to state 32


state 16

    (34) readline -> READLINE . IPAR DPAR

    IPAR            shift and go to state 33


state 17

    (32) variable -> VAR .

    ID              reduce using rule 32 (variable -> VAR .)
    IPAR            reduce using rule 32 (variable -> VAR .)


state 18

    (33) variable -> VAL .

    ID              reduce using rule 33 (variable -> VAL .)
    IPAR            reduce using rule 33 (variable -> VAL .)


state 19

    (54) valor -> ENTERO .

    PLUS            reduce using rule 54 (valor -> ENTERO .)
    MINUS           reduce using rule 54 (valor -> ENTERO .)
    TIMES           reduce using rule 54 (valor -> ENTERO .)
    DIVIDE          reduce using rule 54 (valor -> ENTERO .)
    $end            reduce using rule 54 (valor -> ENTERO .)
    DPAR            reduce using rule 54 (valor -> ENTERO .)
    COMA            reduce using rule 54 (valor -> ENTERO .)


state 20

    (55) valor -> DECIMAL .

    PLUS            reduce using rule 55 (valor -> DECIMAL .)
    MINUS           reduce using rule 55 (valor -> DECIMAL .)
    TIMES           reduce using rule 55 (valor -> DECIMAL .)
    DIVIDE          reduce using rule 55 (valor -> DECIMAL .)
    $end            reduce using rule 55 (valor -> DECIMAL .)
    DPAR            reduce using rule 55 (valor -> DECIMAL .)
    COMA            reduce using rule 55 (valor -> DECIMAL .)


state 21

    (56) valor -> CADENA_DE_CARACTERES .

    PLUS            reduce using rule 56 (valor -> CADENA_DE_CARACTERES .)
    MINUS           reduce using rule 56 (valor -> CADENA_DE_CARACTERES .)
    TIMES           reduce using rule 56 (valor -> CADENA_DE_CARACTERES .)
    DIVIDE          reduce using rule 56 (valor -> CADENA_DE_CARACTERES .)
    $end            reduce using rule 56 (valor -> CADENA_DE_CARACTERES .)
    DPAR            reduce using rule 56 (valor -> CADENA_DE_CARACTERES .)
    COMA            reduce using rule 56 (valor -> CADENA_DE_CARACTERES .)


state 22

    (10) iniVariable -> variable ID . tipoDeDato
    (11) iniVariable -> variable ID . EQUALS valor
    (12) iniVariable -> variable ID . EQUALS valorBoolean
    (35) readline -> variable ID . EQUALS READLINE IPAR DPAR
    (23) list -> variable ID . EQUALS LISTOF IPAR listElementos DPAR
    (22) conjuntos -> variable ID . EQUALS SETOF IPAR listElementos DPAR
    (13) maps -> variable ID . EQUALS MAPOF IPAR mapsElemento DPAR
    (38) tipoDeDato -> . DOSPUNTOS INT EQUALS ENTERO
    (39) tipoDeDato -> . DOSPUNTOS DOUBLE EQUALS DECIMAL
    (40) tipoDeDato -> . DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES
    (41) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS valorBoolean

    EQUALS          shift and go to state 35
    DOSPUNTOS       shift and go to state 36

    tipoDeDato                     shift and go to state 34

state 23

    (16) tupla -> variable IPAR . ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    ID              shift and go to state 37


state 24

    (49) expresion -> ID operadorMat . expresion
    (46) expresion -> . valor
    (47) expresion -> . ID
    (48) expresion -> . valor operadorMat expresion
    (49) expresion -> . ID operadorMat expresion
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 38
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21

    expresion                      shift and go to state 39
    valor                          shift and go to state 13

state 25

    (36) firstAndCap -> ID PUNTO . FIRST IPAR DPAR
    (37) firstAndCap -> ID PUNTO . CAPITALIZE IPAR DPAR

    FIRST           shift and go to state 40
    CAPITALIZE      shift and go to state 41


state 26

    (50) operadorMat -> PLUS .

    ID              reduce using rule 50 (operadorMat -> PLUS .)
    ENTERO          reduce using rule 50 (operadorMat -> PLUS .)
    DECIMAL         reduce using rule 50 (operadorMat -> PLUS .)
    CADENA_DE_CARACTERES reduce using rule 50 (operadorMat -> PLUS .)


state 27

    (51) operadorMat -> MINUS .

    ID              reduce using rule 51 (operadorMat -> MINUS .)
    ENTERO          reduce using rule 51 (operadorMat -> MINUS .)
    DECIMAL         reduce using rule 51 (operadorMat -> MINUS .)
    CADENA_DE_CARACTERES reduce using rule 51 (operadorMat -> MINUS .)


state 28

    (52) operadorMat -> TIMES .

    ID              reduce using rule 52 (operadorMat -> TIMES .)
    ENTERO          reduce using rule 52 (operadorMat -> TIMES .)
    DECIMAL         reduce using rule 52 (operadorMat -> TIMES .)
    CADENA_DE_CARACTERES reduce using rule 52 (operadorMat -> TIMES .)


state 29

    (53) operadorMat -> DIVIDE .

    ID              reduce using rule 53 (operadorMat -> DIVIDE .)
    ENTERO          reduce using rule 53 (operadorMat -> DIVIDE .)
    DECIMAL         reduce using rule 53 (operadorMat -> DIVIDE .)
    CADENA_DE_CARACTERES reduce using rule 53 (operadorMat -> DIVIDE .)


state 30

    (48) expresion -> valor operadorMat . expresion
    (46) expresion -> . valor
    (47) expresion -> . ID
    (48) expresion -> . valor operadorMat expresion
    (49) expresion -> . ID operadorMat expresion
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 38
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21

    valor                          shift and go to state 13
    expresion                      shift and go to state 42

state 31

    (42) imprimir -> PRINT IPAR . expresion DPAR
    (43) imprimir -> PRINT IPAR . valorBoolean DPAR
    (46) expresion -> . valor
    (47) expresion -> . ID
    (48) expresion -> . valor operadorMat expresion
    (49) expresion -> . ID operadorMat expresion
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 38
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21

    expresion                      shift and go to state 43
    valorBoolean                   shift and go to state 44
    valor                          shift and go to state 13

state 32

    (44) imprimir -> PRINTLN IPAR . expresion DPAR
    (45) imprimir -> PRINTLN IPAR . valorBoolean DPAR
    (46) expresion -> . valor
    (47) expresion -> . ID
    (48) expresion -> . valor operadorMat expresion
    (49) expresion -> . ID operadorMat expresion
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 38
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21

    expresion                      shift and go to state 47
    valorBoolean                   shift and go to state 48
    valor                          shift and go to state 13

state 33

    (34) readline -> READLINE IPAR . DPAR

    DPAR            shift and go to state 49


state 34

    (10) iniVariable -> variable ID tipoDeDato .

    $end            reduce using rule 10 (iniVariable -> variable ID tipoDeDato .)


state 35

    (11) iniVariable -> variable ID EQUALS . valor
    (12) iniVariable -> variable ID EQUALS . valorBoolean
    (35) readline -> variable ID EQUALS . READLINE IPAR DPAR
    (23) list -> variable ID EQUALS . LISTOF IPAR listElementos DPAR
    (22) conjuntos -> variable ID EQUALS . SETOF IPAR listElementos DPAR
    (13) maps -> variable ID EQUALS . MAPOF IPAR mapsElemento DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    READLINE        shift and go to state 52
    LISTOF          shift and go to state 53
    SETOF           shift and go to state 54
    MAPOF           shift and go to state 55
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    valor                          shift and go to state 50
    valorBoolean                   shift and go to state 51

state 36

    (38) tipoDeDato -> DOSPUNTOS . INT EQUALS ENTERO
    (39) tipoDeDato -> DOSPUNTOS . DOUBLE EQUALS DECIMAL
    (40) tipoDeDato -> DOSPUNTOS . STRING EQUALS CADENA_DE_CARACTERES
    (41) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS valorBoolean

    INT             shift and go to state 56
    DOUBLE          shift and go to state 57
    STRING          shift and go to state 58
    BOOLEAN         shift and go to state 59


state 37

    (16) tupla -> variable IPAR ID . COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    COMA            shift and go to state 60


state 38

    (47) expresion -> ID .
    (49) expresion -> ID . operadorMat expresion
    (50) operadorMat -> . PLUS
    (51) operadorMat -> . MINUS
    (52) operadorMat -> . TIMES
    (53) operadorMat -> . DIVIDE

    $end            reduce using rule 47 (expresion -> ID .)
    DPAR            reduce using rule 47 (expresion -> ID .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

    operadorMat                    shift and go to state 24

state 39

    (49) expresion -> ID operadorMat expresion .

    $end            reduce using rule 49 (expresion -> ID operadorMat expresion .)
    DPAR            reduce using rule 49 (expresion -> ID operadorMat expresion .)


state 40

    (36) firstAndCap -> ID PUNTO FIRST . IPAR DPAR

    IPAR            shift and go to state 61


state 41

    (37) firstAndCap -> ID PUNTO CAPITALIZE . IPAR DPAR

    IPAR            shift and go to state 62


state 42

    (48) expresion -> valor operadorMat expresion .

    $end            reduce using rule 48 (expresion -> valor operadorMat expresion .)
    DPAR            reduce using rule 48 (expresion -> valor operadorMat expresion .)


state 43

    (42) imprimir -> PRINT IPAR expresion . DPAR

    DPAR            shift and go to state 63


state 44

    (43) imprimir -> PRINT IPAR valorBoolean . DPAR

    DPAR            shift and go to state 64


state 45

    (57) valorBoolean -> TRUE .

    DPAR            reduce using rule 57 (valorBoolean -> TRUE .)
    $end            reduce using rule 57 (valorBoolean -> TRUE .)
    COMA            reduce using rule 57 (valorBoolean -> TRUE .)


state 46

    (58) valorBoolean -> FALSE .

    DPAR            reduce using rule 58 (valorBoolean -> FALSE .)
    $end            reduce using rule 58 (valorBoolean -> FALSE .)
    COMA            reduce using rule 58 (valorBoolean -> FALSE .)


state 47

    (44) imprimir -> PRINTLN IPAR expresion . DPAR

    DPAR            shift and go to state 65


state 48

    (45) imprimir -> PRINTLN IPAR valorBoolean . DPAR

    DPAR            shift and go to state 66


state 49

    (34) readline -> READLINE IPAR DPAR .

    $end            reduce using rule 34 (readline -> READLINE IPAR DPAR .)


state 50

    (11) iniVariable -> variable ID EQUALS valor .

    $end            reduce using rule 11 (iniVariable -> variable ID EQUALS valor .)


state 51

    (12) iniVariable -> variable ID EQUALS valorBoolean .

    $end            reduce using rule 12 (iniVariable -> variable ID EQUALS valorBoolean .)


state 52

    (35) readline -> variable ID EQUALS READLINE . IPAR DPAR

    IPAR            shift and go to state 67


state 53

    (23) list -> variable ID EQUALS LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 68


state 54

    (22) conjuntos -> variable ID EQUALS SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 69


state 55

    (13) maps -> variable ID EQUALS MAPOF . IPAR mapsElemento DPAR

    IPAR            shift and go to state 70


state 56

    (38) tipoDeDato -> DOSPUNTOS INT . EQUALS ENTERO

    EQUALS          shift and go to state 71


state 57

    (39) tipoDeDato -> DOSPUNTOS DOUBLE . EQUALS DECIMAL

    EQUALS          shift and go to state 72


state 58

    (40) tipoDeDato -> DOSPUNTOS STRING . EQUALS CADENA_DE_CARACTERES

    EQUALS          shift and go to state 73


state 59

    (41) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS valorBoolean

    EQUALS          shift and go to state 74


state 60

    (16) tupla -> variable IPAR ID COMA . ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    ID              shift and go to state 75


state 61

    (36) firstAndCap -> ID PUNTO FIRST IPAR . DPAR

    DPAR            shift and go to state 76


state 62

    (37) firstAndCap -> ID PUNTO CAPITALIZE IPAR . DPAR

    DPAR            shift and go to state 77


state 63

    (42) imprimir -> PRINT IPAR expresion DPAR .

    $end            reduce using rule 42 (imprimir -> PRINT IPAR expresion DPAR .)


state 64

    (43) imprimir -> PRINT IPAR valorBoolean DPAR .

    $end            reduce using rule 43 (imprimir -> PRINT IPAR valorBoolean DPAR .)


state 65

    (44) imprimir -> PRINTLN IPAR expresion DPAR .

    $end            reduce using rule 44 (imprimir -> PRINTLN IPAR expresion DPAR .)


state 66

    (45) imprimir -> PRINTLN IPAR valorBoolean DPAR .

    $end            reduce using rule 45 (imprimir -> PRINTLN IPAR valorBoolean DPAR .)


state 67

    (35) readline -> variable ID EQUALS READLINE IPAR . DPAR

    DPAR            shift and go to state 78


state 68

    (23) list -> variable ID EQUALS LISTOF IPAR . listElementos DPAR
    (24) listElementos -> . valor
    (25) listElementos -> . ID
    (26) listElementos -> . valorBoolean
    (27) listElementos -> . valorBoolean COMA listElementos
    (28) listElementos -> . valor COMA listElementos
    (29) listElementos -> . ID COMA listElementos
    (30) listElementos -> . LISTOF IPAR listElementos DPAR
    (31) listElementos -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 79
    LISTOF          shift and go to state 80
    SETOF           shift and go to state 84
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    listElementos                  shift and go to state 81
    valor                          shift and go to state 82
    valorBoolean                   shift and go to state 83

state 69

    (22) conjuntos -> variable ID EQUALS SETOF IPAR . listElementos DPAR
    (24) listElementos -> . valor
    (25) listElementos -> . ID
    (26) listElementos -> . valorBoolean
    (27) listElementos -> . valorBoolean COMA listElementos
    (28) listElementos -> . valor COMA listElementos
    (29) listElementos -> . ID COMA listElementos
    (30) listElementos -> . LISTOF IPAR listElementos DPAR
    (31) listElementos -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 79
    LISTOF          shift and go to state 80
    SETOF           shift and go to state 84
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    listElementos                  shift and go to state 85
    valor                          shift and go to state 82
    valorBoolean                   shift and go to state 83

state 70

    (13) maps -> variable ID EQUALS MAPOF IPAR . mapsElemento DPAR
    (14) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (15) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 87

    mapsElemento                   shift and go to state 86

state 71

    (38) tipoDeDato -> DOSPUNTOS INT EQUALS . ENTERO

    ENTERO          shift and go to state 88


state 72

    (39) tipoDeDato -> DOSPUNTOS DOUBLE EQUALS . DECIMAL

    DECIMAL         shift and go to state 89


state 73

    (40) tipoDeDato -> DOSPUNTOS STRING EQUALS . CADENA_DE_CARACTERES

    CADENA_DE_CARACTERES shift and go to state 90


state 74

    (41) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . valorBoolean
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    valorBoolean                   shift and go to state 91

state 75

    (16) tupla -> variable IPAR ID COMA ID . DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    DPAR            shift and go to state 92


state 76

    (36) firstAndCap -> ID PUNTO FIRST IPAR DPAR .

    $end            reduce using rule 36 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)


state 77

    (37) firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .

    $end            reduce using rule 37 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)


state 78

    (35) readline -> variable ID EQUALS READLINE IPAR DPAR .

    $end            reduce using rule 35 (readline -> variable ID EQUALS READLINE IPAR DPAR .)


state 79

    (25) listElementos -> ID .
    (29) listElementos -> ID . COMA listElementos

    DPAR            reduce using rule 25 (listElementos -> ID .)
    COMA            shift and go to state 93


state 80

    (30) listElementos -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 94


state 81

    (23) list -> variable ID EQUALS LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 95


state 82

    (24) listElementos -> valor .
    (28) listElementos -> valor . COMA listElementos

    DPAR            reduce using rule 24 (listElementos -> valor .)
    COMA            shift and go to state 96


state 83

    (26) listElementos -> valorBoolean .
    (27) listElementos -> valorBoolean . COMA listElementos

    DPAR            reduce using rule 26 (listElementos -> valorBoolean .)
    COMA            shift and go to state 97


state 84

    (31) listElementos -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 98


state 85

    (22) conjuntos -> variable ID EQUALS SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 99


state 86

    (13) maps -> variable ID EQUALS MAPOF IPAR mapsElemento . DPAR

    DPAR            shift and go to state 100


state 87

    (14) mapsElemento -> CADENA_DE_CARACTERES . TO tuplaElemento
    (15) mapsElemento -> CADENA_DE_CARACTERES . TO tuplaElemento COMA mapsElemento

    TO              shift and go to state 101


state 88

    (38) tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .

    $end            reduce using rule 38 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)


state 89

    (39) tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .

    $end            reduce using rule 39 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)


state 90

    (40) tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .

    $end            reduce using rule 40 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)


state 91

    (41) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .

    $end            reduce using rule 41 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)


state 92

    (16) tupla -> variable IPAR ID COMA ID DPAR . EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    EQUALS          shift and go to state 102


state 93

    (29) listElementos -> ID COMA . listElementos
    (24) listElementos -> . valor
    (25) listElementos -> . ID
    (26) listElementos -> . valorBoolean
    (27) listElementos -> . valorBoolean COMA listElementos
    (28) listElementos -> . valor COMA listElementos
    (29) listElementos -> . ID COMA listElementos
    (30) listElementos -> . LISTOF IPAR listElementos DPAR
    (31) listElementos -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 79
    LISTOF          shift and go to state 80
    SETOF           shift and go to state 84
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    listElementos                  shift and go to state 103
    valor                          shift and go to state 82
    valorBoolean                   shift and go to state 83

state 94

    (30) listElementos -> LISTOF IPAR . listElementos DPAR
    (24) listElementos -> . valor
    (25) listElementos -> . ID
    (26) listElementos -> . valorBoolean
    (27) listElementos -> . valorBoolean COMA listElementos
    (28) listElementos -> . valor COMA listElementos
    (29) listElementos -> . ID COMA listElementos
    (30) listElementos -> . LISTOF IPAR listElementos DPAR
    (31) listElementos -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 79
    LISTOF          shift and go to state 80
    SETOF           shift and go to state 84
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    listElementos                  shift and go to state 104
    valor                          shift and go to state 82
    valorBoolean                   shift and go to state 83

state 95

    (23) list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .

    $end            reduce using rule 23 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)


state 96

    (28) listElementos -> valor COMA . listElementos
    (24) listElementos -> . valor
    (25) listElementos -> . ID
    (26) listElementos -> . valorBoolean
    (27) listElementos -> . valorBoolean COMA listElementos
    (28) listElementos -> . valor COMA listElementos
    (29) listElementos -> . ID COMA listElementos
    (30) listElementos -> . LISTOF IPAR listElementos DPAR
    (31) listElementos -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 79
    LISTOF          shift and go to state 80
    SETOF           shift and go to state 84
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    valor                          shift and go to state 82
    listElementos                  shift and go to state 105
    valorBoolean                   shift and go to state 83

state 97

    (27) listElementos -> valorBoolean COMA . listElementos
    (24) listElementos -> . valor
    (25) listElementos -> . ID
    (26) listElementos -> . valorBoolean
    (27) listElementos -> . valorBoolean COMA listElementos
    (28) listElementos -> . valor COMA listElementos
    (29) listElementos -> . ID COMA listElementos
    (30) listElementos -> . LISTOF IPAR listElementos DPAR
    (31) listElementos -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 79
    LISTOF          shift and go to state 80
    SETOF           shift and go to state 84
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    valorBoolean                   shift and go to state 83
    listElementos                  shift and go to state 106
    valor                          shift and go to state 82

state 98

    (31) listElementos -> SETOF IPAR . listElementos DPAR
    (24) listElementos -> . valor
    (25) listElementos -> . ID
    (26) listElementos -> . valorBoolean
    (27) listElementos -> . valorBoolean COMA listElementos
    (28) listElementos -> . valor COMA listElementos
    (29) listElementos -> . ID COMA listElementos
    (30) listElementos -> . LISTOF IPAR listElementos DPAR
    (31) listElementos -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 79
    LISTOF          shift and go to state 80
    SETOF           shift and go to state 84
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    listElementos                  shift and go to state 107
    valor                          shift and go to state 82
    valorBoolean                   shift and go to state 83

state 99

    (22) conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .

    $end            reduce using rule 22 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)


state 100

    (13) maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .

    $end            reduce using rule 13 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)


state 101

    (14) mapsElemento -> CADENA_DE_CARACTERES TO . tuplaElemento
    (15) mapsElemento -> CADENA_DE_CARACTERES TO . tuplaElemento COMA mapsElemento
    (17) tuplaElemento -> . valor
    (18) tuplaElemento -> . ID
    (19) tuplaElemento -> . valorBoolean
    (20) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (21) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 110
    LISTOF          shift and go to state 112
    SETOF           shift and go to state 113
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    tuplaElemento                  shift and go to state 108
    valor                          shift and go to state 109
    valorBoolean                   shift and go to state 111

state 102

    (16) tupla -> variable IPAR ID COMA ID DPAR EQUALS . PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    PAIR            shift and go to state 114


state 103

    (29) listElementos -> ID COMA listElementos .

    DPAR            reduce using rule 29 (listElementos -> ID COMA listElementos .)


state 104

    (30) listElementos -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 115


state 105

    (28) listElementos -> valor COMA listElementos .

    DPAR            reduce using rule 28 (listElementos -> valor COMA listElementos .)


state 106

    (27) listElementos -> valorBoolean COMA listElementos .

    DPAR            reduce using rule 27 (listElementos -> valorBoolean COMA listElementos .)


state 107

    (31) listElementos -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 116


state 108

    (14) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento .
    (15) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento . COMA mapsElemento

    DPAR            reduce using rule 14 (mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento .)
    COMA            shift and go to state 117


state 109

    (17) tuplaElemento -> valor .

    COMA            reduce using rule 17 (tuplaElemento -> valor .)
    DPAR            reduce using rule 17 (tuplaElemento -> valor .)


state 110

    (18) tuplaElemento -> ID .

    COMA            reduce using rule 18 (tuplaElemento -> ID .)
    DPAR            reduce using rule 18 (tuplaElemento -> ID .)


state 111

    (19) tuplaElemento -> valorBoolean .

    COMA            reduce using rule 19 (tuplaElemento -> valorBoolean .)
    DPAR            reduce using rule 19 (tuplaElemento -> valorBoolean .)


state 112

    (20) tuplaElemento -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 118


state 113

    (21) tuplaElemento -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 119


state 114

    (16) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR . IPAR tuplaElemento COMA tuplaElemento DPAR

    IPAR            shift and go to state 120


state 115

    (30) listElementos -> LISTOF IPAR listElementos DPAR .

    DPAR            reduce using rule 30 (listElementos -> LISTOF IPAR listElementos DPAR .)


state 116

    (31) listElementos -> SETOF IPAR listElementos DPAR .

    DPAR            reduce using rule 31 (listElementos -> SETOF IPAR listElementos DPAR .)


state 117

    (15) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA . mapsElemento
    (14) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (15) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 87

    mapsElemento                   shift and go to state 121

state 118

    (20) tuplaElemento -> LISTOF IPAR . listElementos DPAR
    (24) listElementos -> . valor
    (25) listElementos -> . ID
    (26) listElementos -> . valorBoolean
    (27) listElementos -> . valorBoolean COMA listElementos
    (28) listElementos -> . valor COMA listElementos
    (29) listElementos -> . ID COMA listElementos
    (30) listElementos -> . LISTOF IPAR listElementos DPAR
    (31) listElementos -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 79
    LISTOF          shift and go to state 80
    SETOF           shift and go to state 84
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    listElementos                  shift and go to state 122
    valor                          shift and go to state 82
    valorBoolean                   shift and go to state 83

state 119

    (21) tuplaElemento -> SETOF IPAR . listElementos DPAR
    (24) listElementos -> . valor
    (25) listElementos -> . ID
    (26) listElementos -> . valorBoolean
    (27) listElementos -> . valorBoolean COMA listElementos
    (28) listElementos -> . valor COMA listElementos
    (29) listElementos -> . ID COMA listElementos
    (30) listElementos -> . LISTOF IPAR listElementos DPAR
    (31) listElementos -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 79
    LISTOF          shift and go to state 80
    SETOF           shift and go to state 84
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    listElementos                  shift and go to state 123
    valor                          shift and go to state 82
    valorBoolean                   shift and go to state 83

state 120

    (16) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR . tuplaElemento COMA tuplaElemento DPAR
    (17) tuplaElemento -> . valor
    (18) tuplaElemento -> . ID
    (19) tuplaElemento -> . valorBoolean
    (20) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (21) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 110
    LISTOF          shift and go to state 112
    SETOF           shift and go to state 113
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    tuplaElemento                  shift and go to state 124
    valor                          shift and go to state 109
    valorBoolean                   shift and go to state 111

state 121

    (15) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento .

    DPAR            reduce using rule 15 (mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento .)


state 122

    (20) tuplaElemento -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 125


state 123

    (21) tuplaElemento -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 126


state 124

    (16) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento . COMA tuplaElemento DPAR

    COMA            shift and go to state 127


state 125

    (20) tuplaElemento -> LISTOF IPAR listElementos DPAR .

    COMA            reduce using rule 20 (tuplaElemento -> LISTOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 20 (tuplaElemento -> LISTOF IPAR listElementos DPAR .)


state 126

    (21) tuplaElemento -> SETOF IPAR listElementos DPAR .

    COMA            reduce using rule 21 (tuplaElemento -> SETOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 21 (tuplaElemento -> SETOF IPAR listElementos DPAR .)


state 127

    (16) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA . tuplaElemento DPAR
    (17) tuplaElemento -> . valor
    (18) tuplaElemento -> . ID
    (19) tuplaElemento -> . valorBoolean
    (20) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (21) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (54) valor -> . ENTERO
    (55) valor -> . DECIMAL
    (56) valor -> . CADENA_DE_CARACTERES
    (57) valorBoolean -> . TRUE
    (58) valorBoolean -> . FALSE

    ID              shift and go to state 110
    LISTOF          shift and go to state 112
    SETOF           shift and go to state 113
    ENTERO          shift and go to state 19
    DECIMAL         shift and go to state 20
    CADENA_DE_CARACTERES shift and go to state 21
    TRUE            shift and go to state 45
    FALSE           shift and go to state 46

    tuplaElemento                  shift and go to state 128
    valor                          shift and go to state 109
    valorBoolean                   shift and go to state 111

state 128

    (16) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento . DPAR

    DPAR            shift and go to state 129


state 129

    (16) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .

    $end            reduce using rule 16 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)

