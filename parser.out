Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT
    PUNTOS

Grammar

Rule 0     S' -> algoritmo
Rule 1     algoritmo -> cuerpo
Rule 2     algoritmo -> cuerpo algoritmo
Rule 3     cuerpo -> iniVariable
Rule 4     cuerpo -> expresion
Rule 5     cuerpo -> expresionRelacional
Rule 6     cuerpo -> imprimir
Rule 7     cuerpo -> readline
Rule 8     cuerpo -> firstAndCap
Rule 9     cuerpo -> list
Rule 10    cuerpo -> conjuntos
Rule 11    cuerpo -> tupla
Rule 12    cuerpo -> maps
Rule 13    cuerpo -> funColecciones
Rule 14    cuerpo -> expLogicas
Rule 15    cuerpo -> fun
Rule 16    cuerpo -> if
Rule 17    cuerpo -> for
Rule 18    cuerpo -> while
Rule 19    cuerpo -> valorIncDec
Rule 20    cuerpo -> valorInDecAsignacion
Rule 21    fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
Rule 22    fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
Rule 23    fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
Rule 24    fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
Rule 25    fun -> FUN ID IPAR entrada_fun DPAR EQUALS return
Rule 26    while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
Rule 27    valorInDecAsignacion -> ID incDecAsignaacion ENTERO
Rule 28    valorIncDec -> ID incrementoDec
Rule 29    incrementoDec -> MASMAS
Rule 30    incrementoDec -> MENOSMENOS
Rule 31    incDecAsignaacion -> MASIGUAL
Rule 32    incDecAsignaacion -> MENOSIGUAL
Rule 33    for -> FOR condicionFor ILLAVE algoritmo DLLAVE
Rule 34    condicionFor -> IPAR ID IN ID DPAR
Rule 35    condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR
Rule 36    condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR
Rule 37    if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
Rule 38    if -> IF IPAR entradaIf DPAR return
Rule 39    if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
Rule 40    if -> IF IPAR entradaIf DPAR return else
Rule 41    else -> ELSE ILLAVE algoritmo DLLAVE
Rule 42    else -> ELSE return
Rule 43    entradaIf -> valorBoolean
Rule 44    entradaIf -> expLogicas
Rule 45    entradaIf -> expresionRelacional
Rule 46    return -> expLogicas
Rule 47    return -> expresion
Rule 48    return -> valorBoolean
Rule 49    return -> expresionRelacional
Rule 50    entrada_fun -> ID DOSPUNTOS tipos
Rule 51    entrada_fun -> ID DOSPUNTOS tipos COMA entrada_fun
Rule 52    tipos -> INT
Rule 53    tipos -> DOUBLE
Rule 54    tipos -> BOOLEAN
Rule 55    tipos -> STRING
Rule 56    iniVariable -> variable ID tipoDeDato
Rule 57    iniVariable -> variable ID EQUALS valor
Rule 58    iniVariable -> variable ID EQUALS valorBoolean
Rule 59    iniVariable -> variable ID EQUALS expLogicas
Rule 60    iniVariable -> variable ID EQUALS expresionRelacional
Rule 61    imprimir -> PRINT IPAR elementosPrint DPAR
Rule 62    imprimir -> PRINTLN IPAR elementosPrint DPAR
Rule 63    elementosPrint -> funColecciones
Rule 64    elementosPrint -> coleccion
Rule 65    elementosPrint -> expresion
Rule 66    elementosPrint -> valorBoolean
Rule 67    elementosPrint -> expLogicas
Rule 68    elementosPrint -> expresionRelacional
Rule 69    elementosPrint -> imprimirColecciones
Rule 70    imprimirColecciones -> PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
Rule 71    imprimirColecciones -> MAPOF IPAR mapsElemento DPAR
Rule 72    imprimirColecciones -> LISTOF IPAR listElementos DPAR
Rule 73    imprimirColecciones -> SETOF IPAR listElementos DPAR
Rule 74    funColecciones -> indexCol
Rule 75    funColecciones -> slice
Rule 76    funColecciones -> size
Rule 77    funColecciones -> isEmpty
Rule 78    funColecciones -> funMap
Rule 79    funColecciones -> getMap
Rule 80    indexCol -> ID ICOR ENTERO DCOR
Rule 81    indexCol -> ID ICOR ID DCOR
Rule 82    slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
Rule 83    size -> ID PUNTO SIZE
Rule 84    size -> coleccion PUNTO SIZE
Rule 85    isEmpty -> ID PUNTO ISEMPTY IPAR DPAR
Rule 86    isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR
Rule 87    getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
Rule 88    getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
Rule 89    funMap -> ID PUNTO KEYS
Rule 90    funMap -> ID PUNTO VALUES
Rule 91    funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES
Rule 92    maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR
Rule 93    mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento
Rule 94    mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento
Rule 95    tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
Rule 96    tuplaElemento -> valor
Rule 97    tuplaElemento -> ID
Rule 98    tuplaElemento -> valorBoolean
Rule 99    tuplaElemento -> LISTOF IPAR listElementos DPAR
Rule 100   tuplaElemento -> SETOF IPAR listElementos DPAR
Rule 101   conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR
Rule 102   list -> variable ID EQUALS LISTOF IPAR listElementos DPAR
Rule 103   listElementos -> valor
Rule 104   listElementos -> ID
Rule 105   listElementos -> valorBoolean
Rule 106   listElementos -> expresionRelacional
Rule 107   listElementos -> expLogicas
Rule 108   listElementos -> valorBoolean COMA listElementos
Rule 109   listElementos -> valor COMA listElementos
Rule 110   listElementos -> ID COMA listElementos
Rule 111   listElementos -> LISTOF IPAR listElementos DPAR
Rule 112   listElementos -> SETOF IPAR listElementos DPAR
Rule 113   variable -> VAR
Rule 114   variable -> VAL
Rule 115   readline -> READLINE IPAR DPAR
Rule 116   readline -> variable ID EQUALS READLINE IPAR DPAR
Rule 117   firstAndCap -> ID PUNTO FIRST IPAR DPAR
Rule 118   firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR
Rule 119   tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO
Rule 120   tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL
Rule 121   tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES
Rule 122   tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean
Rule 123   tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas
Rule 124   tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional
Rule 125   coleccion -> LISTOF IPAR listElementos DPAR
Rule 126   coleccion -> SETOF IPAR listElementos DPAR
Rule 127   coleccion -> MAPOF IPAR mapsElemento DPAR
Rule 128   expresion -> valor
Rule 129   expresion -> ID
Rule 130   expresion -> valor operadorMat expresion
Rule 131   expresion -> ID operadorMat expresion
Rule 132   expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional
Rule 133   elementoRelacional -> ENTERO
Rule 134   elementoRelacional -> DOUBLE
Rule 135   elementoRelacional -> ID
Rule 136   elementoRelacional -> valorBoolean
Rule 137   operadorMat -> PLUS
Rule 138   operadorMat -> MINUS
Rule 139   operadorMat -> TIMES
Rule 140   operadorMat -> DIVIDE
Rule 141   valor -> ENTERO
Rule 142   valor -> DECIMAL
Rule 143   valor -> CADENA_DE_CARACTERES
Rule 144   expLogicas -> boolID opLogico boolID
Rule 145   expLogicas -> NEGATION boolID
Rule 146   boolID -> ID
Rule 147   boolID -> valorBoolean
Rule 148   opLogico -> AND
Rule 149   opLogico -> OR
Rule 150   valorBoolean -> TRUE
Rule 151   valorBoolean -> FALSE
Rule 152   operadorRelacional -> EQUAL
Rule 153   operadorRelacional -> NOTEQ
Rule 154   operadorRelacional -> LARGE
Rule 155   operadorRelacional -> SMALL
Rule 156   operadorRelacional -> LRGEQ
Rule 157   operadorRelacional -> SMLEQ

Terminals, with rules where they appear

AND                  : 148
BOOLEAN              : 54 122 123 124
CADENA_DE_CARACTERES : 87 88 93 94 121 143
CAPITALIZE           : 118
COMA                 : 51 70 94 95 95 108 109 110
DCOR                 : 80 81
DECIMAL              : 120 142
DIVIDE               : 140
DLLAVE               : 21 22 23 24 26 33 37 39 41
DOSPUNTOS            : 23 24 50 51 119 120 121 122 123 124
DOUBLE               : 53 120 134
DPAR                 : 21 22 23 24 25 26 34 35 36 37 38 39 40 61 62 70 71 72 73 82 85 86 87 88 88 91 92 95 95 99 100 101 102 111 112 115 116 117 118 125 126 127
ELSE                 : 41 42
ENTERO               : 27 35 35 36 36 36 80 82 82 119 133 141
EQUAL                : 152
EQUALS               : 25 57 58 59 60 92 95 101 102 116 119 120 121 122 123 124
FALSE                : 151
FIRST                : 117
FOR                  : 33
FUN                  : 21 22 23 24 25
GET                  : 87 88
ICOR                 : 80 81
ID                   : 21 22 23 24 25 27 28 34 34 35 36 50 51 56 57 58 59 60 80 81 81 82 83 85 87 89 90 92 95 95 97 101 102 104 110 116 117 118 129 131 135 146
IF                   : 37 38 39 40
ILLAVE               : 21 22 23 24 26 33 37 39 41
IN                   : 34 35 36
INT                  : 52 119
IPAR                 : 21 22 23 24 25 26 34 35 36 37 38 39 40 61 62 70 71 72 73 82 85 86 87 88 88 91 92 95 95 99 100 101 102 111 112 115 116 117 118 125 126 127
ISEMPTY              : 85 86
KEYS                 : 89
LARGE                : 154
LISTOF               : 72 99 102 111 125
LRGEQ                : 156
MAPOF                : 71 88 91 92 127
MASIGUAL             : 31
MASMAS               : 29
MENOSIGUAL           : 32
MENOSMENOS           : 30
MINUS                : 138
NEGATION             : 145
NOT                  : 
NOTEQ                : 153
OR                   : 149
PAIR                 : 70 95
PLUS                 : 137
PRINT                : 61
PRINTLN              : 62
PUNTO                : 35 35 36 36 82 82 82 83 84 85 86 87 88 89 90 91 117 118
PUNTOS               : 
READLINE             : 115 116
RETURN               : 23 24
SETOF                : 73 100 101 112 126
SIZE                 : 83 84
SLICE                : 82
SMALL                : 155
SMLEQ                : 157
STEP                 : 36
STRING               : 55 121
TIMES                : 139
TO                   : 93 94
TRUE                 : 150
VAL                  : 114
VALUES               : 90 91
VAR                  : 113
WHILE                : 26
error                : 

Nonterminals, with rules where they appear

algoritmo            : 2 21 22 23 24 26 33 37 39 41 0
boolID               : 144 144 145
coleccion            : 64 84 86
condicionFor         : 33
conjuntos            : 10
cuerpo               : 1 2
elementoRelacional   : 132 132
elementosPrint       : 61 62
else                 : 39 40
entradaIf            : 26 37 38 39 40
entrada_fun          : 22 24 25 51
expLogicas           : 14 44 46 59 67 107 123
expresion            : 4 47 65 130 131
expresionRelacional  : 5 45 49 60 68 106 124
firstAndCap          : 8
for                  : 17
fun                  : 15
funColecciones       : 13 63
funMap               : 78
getMap               : 79
if                   : 16
imprimir             : 6
imprimirColecciones  : 69
incDecAsignaacion    : 27
incrementoDec        : 28
indexCol             : 74
iniVariable          : 3
isEmpty              : 77
list                 : 9
listElementos        : 72 73 99 100 101 102 108 109 110 111 112 125 126
maps                 : 12
mapsElemento         : 71 88 91 92 94 127
opLogico             : 144
operadorMat          : 130 131
operadorRelacional   : 132
readline             : 7
return               : 23 24 25 38 40 42
size                 : 76
slice                : 75
tipoDeDato           : 56
tipos                : 23 24 50 51
tupla                : 11
tuplaElemento        : 70 70 93 94 95 95
valor                : 57 96 103 109 128 130
valorBoolean         : 43 48 58 66 98 105 108 122 136 147
valorInDecAsignacion : 20
valorIncDec          : 19
variable             : 56 57 58 59 60 92 95 101 102 116
while                : 18

Parsing method: LALR

state 0

    (0) S' -> . algoritmo
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (18) cuerpo -> . while
    (19) cuerpo -> . valorIncDec
    (20) cuerpo -> . valorInDecAsignacion
    (56) iniVariable -> . variable ID tipoDeDato
    (57) iniVariable -> . variable ID EQUALS valor
    (58) iniVariable -> . variable ID EQUALS valorBoolean
    (59) iniVariable -> . variable ID EQUALS expLogicas
    (60) iniVariable -> . variable ID EQUALS expresionRelacional
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (61) imprimir -> . PRINT IPAR elementosPrint DPAR
    (62) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (115) readline -> . READLINE IPAR DPAR
    (116) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (117) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (102) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (21) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (37) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> . IF IPAR entradaIf DPAR return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> . IF IPAR entradaIf DPAR return else
    (33) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (26) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) valorIncDec -> . ID incrementoDec
    (27) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (113) variable -> . VAR
    (114) variable -> . VAL
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 26
    PRINTLN         shift and go to state 27
    READLINE        shift and go to state 28
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 1
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    valorIncDec                    shift and go to state 19
    valorInDecAsignacion           shift and go to state 20
    variable                       shift and go to state 21
    valor                          shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 25
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 1

    (0) S' -> algoritmo .



state 2

    (1) algoritmo -> cuerpo .
    (2) algoritmo -> cuerpo . algoritmo
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (18) cuerpo -> . while
    (19) cuerpo -> . valorIncDec
    (20) cuerpo -> . valorInDecAsignacion
    (56) iniVariable -> . variable ID tipoDeDato
    (57) iniVariable -> . variable ID EQUALS valor
    (58) iniVariable -> . variable ID EQUALS valorBoolean
    (59) iniVariable -> . variable ID EQUALS expLogicas
    (60) iniVariable -> . variable ID EQUALS expresionRelacional
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (61) imprimir -> . PRINT IPAR elementosPrint DPAR
    (62) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (115) readline -> . READLINE IPAR DPAR
    (116) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (117) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (102) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (21) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (37) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> . IF IPAR entradaIf DPAR return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> . IF IPAR entradaIf DPAR return else
    (33) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (26) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) valorIncDec -> . ID incrementoDec
    (27) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (113) variable -> . VAR
    (114) variable -> . VAL
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR

    $end            reduce using rule 1 (algoritmo -> cuerpo .)
    DLLAVE          reduce using rule 1 (algoritmo -> cuerpo .)
    RETURN          reduce using rule 1 (algoritmo -> cuerpo .)
    ID              shift and go to state 22
    PRINT           shift and go to state 26
    PRINTLN         shift and go to state 27
    READLINE        shift and go to state 28
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    cuerpo                         shift and go to state 2
    algoritmo                      shift and go to state 53
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    valorIncDec                    shift and go to state 19
    valorInDecAsignacion           shift and go to state 20
    variable                       shift and go to state 21
    valor                          shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 25
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 3

    (3) cuerpo -> iniVariable .

    ID              reduce using rule 3 (cuerpo -> iniVariable .)
    PRINT           reduce using rule 3 (cuerpo -> iniVariable .)
    PRINTLN         reduce using rule 3 (cuerpo -> iniVariable .)
    READLINE        reduce using rule 3 (cuerpo -> iniVariable .)
    NEGATION        reduce using rule 3 (cuerpo -> iniVariable .)
    FUN             reduce using rule 3 (cuerpo -> iniVariable .)
    IF              reduce using rule 3 (cuerpo -> iniVariable .)
    FOR             reduce using rule 3 (cuerpo -> iniVariable .)
    WHILE           reduce using rule 3 (cuerpo -> iniVariable .)
    VAR             reduce using rule 3 (cuerpo -> iniVariable .)
    VAL             reduce using rule 3 (cuerpo -> iniVariable .)
    ENTERO          reduce using rule 3 (cuerpo -> iniVariable .)
    DECIMAL         reduce using rule 3 (cuerpo -> iniVariable .)
    CADENA_DE_CARACTERES reduce using rule 3 (cuerpo -> iniVariable .)
    DOUBLE          reduce using rule 3 (cuerpo -> iniVariable .)
    MAPOF           reduce using rule 3 (cuerpo -> iniVariable .)
    TRUE            reduce using rule 3 (cuerpo -> iniVariable .)
    FALSE           reduce using rule 3 (cuerpo -> iniVariable .)
    LISTOF          reduce using rule 3 (cuerpo -> iniVariable .)
    SETOF           reduce using rule 3 (cuerpo -> iniVariable .)
    $end            reduce using rule 3 (cuerpo -> iniVariable .)
    DLLAVE          reduce using rule 3 (cuerpo -> iniVariable .)
    RETURN          reduce using rule 3 (cuerpo -> iniVariable .)


state 4

    (4) cuerpo -> expresion .

    ID              reduce using rule 4 (cuerpo -> expresion .)
    PRINT           reduce using rule 4 (cuerpo -> expresion .)
    PRINTLN         reduce using rule 4 (cuerpo -> expresion .)
    READLINE        reduce using rule 4 (cuerpo -> expresion .)
    NEGATION        reduce using rule 4 (cuerpo -> expresion .)
    FUN             reduce using rule 4 (cuerpo -> expresion .)
    IF              reduce using rule 4 (cuerpo -> expresion .)
    FOR             reduce using rule 4 (cuerpo -> expresion .)
    WHILE           reduce using rule 4 (cuerpo -> expresion .)
    VAR             reduce using rule 4 (cuerpo -> expresion .)
    VAL             reduce using rule 4 (cuerpo -> expresion .)
    ENTERO          reduce using rule 4 (cuerpo -> expresion .)
    DECIMAL         reduce using rule 4 (cuerpo -> expresion .)
    CADENA_DE_CARACTERES reduce using rule 4 (cuerpo -> expresion .)
    DOUBLE          reduce using rule 4 (cuerpo -> expresion .)
    MAPOF           reduce using rule 4 (cuerpo -> expresion .)
    TRUE            reduce using rule 4 (cuerpo -> expresion .)
    FALSE           reduce using rule 4 (cuerpo -> expresion .)
    LISTOF          reduce using rule 4 (cuerpo -> expresion .)
    SETOF           reduce using rule 4 (cuerpo -> expresion .)
    $end            reduce using rule 4 (cuerpo -> expresion .)
    DLLAVE          reduce using rule 4 (cuerpo -> expresion .)
    RETURN          reduce using rule 4 (cuerpo -> expresion .)


state 5

    (5) cuerpo -> expresionRelacional .

    ID              reduce using rule 5 (cuerpo -> expresionRelacional .)
    PRINT           reduce using rule 5 (cuerpo -> expresionRelacional .)
    PRINTLN         reduce using rule 5 (cuerpo -> expresionRelacional .)
    READLINE        reduce using rule 5 (cuerpo -> expresionRelacional .)
    NEGATION        reduce using rule 5 (cuerpo -> expresionRelacional .)
    FUN             reduce using rule 5 (cuerpo -> expresionRelacional .)
    IF              reduce using rule 5 (cuerpo -> expresionRelacional .)
    FOR             reduce using rule 5 (cuerpo -> expresionRelacional .)
    WHILE           reduce using rule 5 (cuerpo -> expresionRelacional .)
    VAR             reduce using rule 5 (cuerpo -> expresionRelacional .)
    VAL             reduce using rule 5 (cuerpo -> expresionRelacional .)
    ENTERO          reduce using rule 5 (cuerpo -> expresionRelacional .)
    DECIMAL         reduce using rule 5 (cuerpo -> expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 5 (cuerpo -> expresionRelacional .)
    DOUBLE          reduce using rule 5 (cuerpo -> expresionRelacional .)
    MAPOF           reduce using rule 5 (cuerpo -> expresionRelacional .)
    TRUE            reduce using rule 5 (cuerpo -> expresionRelacional .)
    FALSE           reduce using rule 5 (cuerpo -> expresionRelacional .)
    LISTOF          reduce using rule 5 (cuerpo -> expresionRelacional .)
    SETOF           reduce using rule 5 (cuerpo -> expresionRelacional .)
    $end            reduce using rule 5 (cuerpo -> expresionRelacional .)
    DLLAVE          reduce using rule 5 (cuerpo -> expresionRelacional .)
    RETURN          reduce using rule 5 (cuerpo -> expresionRelacional .)


state 6

    (6) cuerpo -> imprimir .

    ID              reduce using rule 6 (cuerpo -> imprimir .)
    PRINT           reduce using rule 6 (cuerpo -> imprimir .)
    PRINTLN         reduce using rule 6 (cuerpo -> imprimir .)
    READLINE        reduce using rule 6 (cuerpo -> imprimir .)
    NEGATION        reduce using rule 6 (cuerpo -> imprimir .)
    FUN             reduce using rule 6 (cuerpo -> imprimir .)
    IF              reduce using rule 6 (cuerpo -> imprimir .)
    FOR             reduce using rule 6 (cuerpo -> imprimir .)
    WHILE           reduce using rule 6 (cuerpo -> imprimir .)
    VAR             reduce using rule 6 (cuerpo -> imprimir .)
    VAL             reduce using rule 6 (cuerpo -> imprimir .)
    ENTERO          reduce using rule 6 (cuerpo -> imprimir .)
    DECIMAL         reduce using rule 6 (cuerpo -> imprimir .)
    CADENA_DE_CARACTERES reduce using rule 6 (cuerpo -> imprimir .)
    DOUBLE          reduce using rule 6 (cuerpo -> imprimir .)
    MAPOF           reduce using rule 6 (cuerpo -> imprimir .)
    TRUE            reduce using rule 6 (cuerpo -> imprimir .)
    FALSE           reduce using rule 6 (cuerpo -> imprimir .)
    LISTOF          reduce using rule 6 (cuerpo -> imprimir .)
    SETOF           reduce using rule 6 (cuerpo -> imprimir .)
    $end            reduce using rule 6 (cuerpo -> imprimir .)
    DLLAVE          reduce using rule 6 (cuerpo -> imprimir .)
    RETURN          reduce using rule 6 (cuerpo -> imprimir .)


state 7

    (7) cuerpo -> readline .

    ID              reduce using rule 7 (cuerpo -> readline .)
    PRINT           reduce using rule 7 (cuerpo -> readline .)
    PRINTLN         reduce using rule 7 (cuerpo -> readline .)
    READLINE        reduce using rule 7 (cuerpo -> readline .)
    NEGATION        reduce using rule 7 (cuerpo -> readline .)
    FUN             reduce using rule 7 (cuerpo -> readline .)
    IF              reduce using rule 7 (cuerpo -> readline .)
    FOR             reduce using rule 7 (cuerpo -> readline .)
    WHILE           reduce using rule 7 (cuerpo -> readline .)
    VAR             reduce using rule 7 (cuerpo -> readline .)
    VAL             reduce using rule 7 (cuerpo -> readline .)
    ENTERO          reduce using rule 7 (cuerpo -> readline .)
    DECIMAL         reduce using rule 7 (cuerpo -> readline .)
    CADENA_DE_CARACTERES reduce using rule 7 (cuerpo -> readline .)
    DOUBLE          reduce using rule 7 (cuerpo -> readline .)
    MAPOF           reduce using rule 7 (cuerpo -> readline .)
    TRUE            reduce using rule 7 (cuerpo -> readline .)
    FALSE           reduce using rule 7 (cuerpo -> readline .)
    LISTOF          reduce using rule 7 (cuerpo -> readline .)
    SETOF           reduce using rule 7 (cuerpo -> readline .)
    $end            reduce using rule 7 (cuerpo -> readline .)
    DLLAVE          reduce using rule 7 (cuerpo -> readline .)
    RETURN          reduce using rule 7 (cuerpo -> readline .)


state 8

    (8) cuerpo -> firstAndCap .

    ID              reduce using rule 8 (cuerpo -> firstAndCap .)
    PRINT           reduce using rule 8 (cuerpo -> firstAndCap .)
    PRINTLN         reduce using rule 8 (cuerpo -> firstAndCap .)
    READLINE        reduce using rule 8 (cuerpo -> firstAndCap .)
    NEGATION        reduce using rule 8 (cuerpo -> firstAndCap .)
    FUN             reduce using rule 8 (cuerpo -> firstAndCap .)
    IF              reduce using rule 8 (cuerpo -> firstAndCap .)
    FOR             reduce using rule 8 (cuerpo -> firstAndCap .)
    WHILE           reduce using rule 8 (cuerpo -> firstAndCap .)
    VAR             reduce using rule 8 (cuerpo -> firstAndCap .)
    VAL             reduce using rule 8 (cuerpo -> firstAndCap .)
    ENTERO          reduce using rule 8 (cuerpo -> firstAndCap .)
    DECIMAL         reduce using rule 8 (cuerpo -> firstAndCap .)
    CADENA_DE_CARACTERES reduce using rule 8 (cuerpo -> firstAndCap .)
    DOUBLE          reduce using rule 8 (cuerpo -> firstAndCap .)
    MAPOF           reduce using rule 8 (cuerpo -> firstAndCap .)
    TRUE            reduce using rule 8 (cuerpo -> firstAndCap .)
    FALSE           reduce using rule 8 (cuerpo -> firstAndCap .)
    LISTOF          reduce using rule 8 (cuerpo -> firstAndCap .)
    SETOF           reduce using rule 8 (cuerpo -> firstAndCap .)
    $end            reduce using rule 8 (cuerpo -> firstAndCap .)
    DLLAVE          reduce using rule 8 (cuerpo -> firstAndCap .)
    RETURN          reduce using rule 8 (cuerpo -> firstAndCap .)


state 9

    (9) cuerpo -> list .

    ID              reduce using rule 9 (cuerpo -> list .)
    PRINT           reduce using rule 9 (cuerpo -> list .)
    PRINTLN         reduce using rule 9 (cuerpo -> list .)
    READLINE        reduce using rule 9 (cuerpo -> list .)
    NEGATION        reduce using rule 9 (cuerpo -> list .)
    FUN             reduce using rule 9 (cuerpo -> list .)
    IF              reduce using rule 9 (cuerpo -> list .)
    FOR             reduce using rule 9 (cuerpo -> list .)
    WHILE           reduce using rule 9 (cuerpo -> list .)
    VAR             reduce using rule 9 (cuerpo -> list .)
    VAL             reduce using rule 9 (cuerpo -> list .)
    ENTERO          reduce using rule 9 (cuerpo -> list .)
    DECIMAL         reduce using rule 9 (cuerpo -> list .)
    CADENA_DE_CARACTERES reduce using rule 9 (cuerpo -> list .)
    DOUBLE          reduce using rule 9 (cuerpo -> list .)
    MAPOF           reduce using rule 9 (cuerpo -> list .)
    TRUE            reduce using rule 9 (cuerpo -> list .)
    FALSE           reduce using rule 9 (cuerpo -> list .)
    LISTOF          reduce using rule 9 (cuerpo -> list .)
    SETOF           reduce using rule 9 (cuerpo -> list .)
    $end            reduce using rule 9 (cuerpo -> list .)
    DLLAVE          reduce using rule 9 (cuerpo -> list .)
    RETURN          reduce using rule 9 (cuerpo -> list .)


state 10

    (10) cuerpo -> conjuntos .

    ID              reduce using rule 10 (cuerpo -> conjuntos .)
    PRINT           reduce using rule 10 (cuerpo -> conjuntos .)
    PRINTLN         reduce using rule 10 (cuerpo -> conjuntos .)
    READLINE        reduce using rule 10 (cuerpo -> conjuntos .)
    NEGATION        reduce using rule 10 (cuerpo -> conjuntos .)
    FUN             reduce using rule 10 (cuerpo -> conjuntos .)
    IF              reduce using rule 10 (cuerpo -> conjuntos .)
    FOR             reduce using rule 10 (cuerpo -> conjuntos .)
    WHILE           reduce using rule 10 (cuerpo -> conjuntos .)
    VAR             reduce using rule 10 (cuerpo -> conjuntos .)
    VAL             reduce using rule 10 (cuerpo -> conjuntos .)
    ENTERO          reduce using rule 10 (cuerpo -> conjuntos .)
    DECIMAL         reduce using rule 10 (cuerpo -> conjuntos .)
    CADENA_DE_CARACTERES reduce using rule 10 (cuerpo -> conjuntos .)
    DOUBLE          reduce using rule 10 (cuerpo -> conjuntos .)
    MAPOF           reduce using rule 10 (cuerpo -> conjuntos .)
    TRUE            reduce using rule 10 (cuerpo -> conjuntos .)
    FALSE           reduce using rule 10 (cuerpo -> conjuntos .)
    LISTOF          reduce using rule 10 (cuerpo -> conjuntos .)
    SETOF           reduce using rule 10 (cuerpo -> conjuntos .)
    $end            reduce using rule 10 (cuerpo -> conjuntos .)
    DLLAVE          reduce using rule 10 (cuerpo -> conjuntos .)
    RETURN          reduce using rule 10 (cuerpo -> conjuntos .)


state 11

    (11) cuerpo -> tupla .

    ID              reduce using rule 11 (cuerpo -> tupla .)
    PRINT           reduce using rule 11 (cuerpo -> tupla .)
    PRINTLN         reduce using rule 11 (cuerpo -> tupla .)
    READLINE        reduce using rule 11 (cuerpo -> tupla .)
    NEGATION        reduce using rule 11 (cuerpo -> tupla .)
    FUN             reduce using rule 11 (cuerpo -> tupla .)
    IF              reduce using rule 11 (cuerpo -> tupla .)
    FOR             reduce using rule 11 (cuerpo -> tupla .)
    WHILE           reduce using rule 11 (cuerpo -> tupla .)
    VAR             reduce using rule 11 (cuerpo -> tupla .)
    VAL             reduce using rule 11 (cuerpo -> tupla .)
    ENTERO          reduce using rule 11 (cuerpo -> tupla .)
    DECIMAL         reduce using rule 11 (cuerpo -> tupla .)
    CADENA_DE_CARACTERES reduce using rule 11 (cuerpo -> tupla .)
    DOUBLE          reduce using rule 11 (cuerpo -> tupla .)
    MAPOF           reduce using rule 11 (cuerpo -> tupla .)
    TRUE            reduce using rule 11 (cuerpo -> tupla .)
    FALSE           reduce using rule 11 (cuerpo -> tupla .)
    LISTOF          reduce using rule 11 (cuerpo -> tupla .)
    SETOF           reduce using rule 11 (cuerpo -> tupla .)
    $end            reduce using rule 11 (cuerpo -> tupla .)
    DLLAVE          reduce using rule 11 (cuerpo -> tupla .)
    RETURN          reduce using rule 11 (cuerpo -> tupla .)


state 12

    (12) cuerpo -> maps .

    ID              reduce using rule 12 (cuerpo -> maps .)
    PRINT           reduce using rule 12 (cuerpo -> maps .)
    PRINTLN         reduce using rule 12 (cuerpo -> maps .)
    READLINE        reduce using rule 12 (cuerpo -> maps .)
    NEGATION        reduce using rule 12 (cuerpo -> maps .)
    FUN             reduce using rule 12 (cuerpo -> maps .)
    IF              reduce using rule 12 (cuerpo -> maps .)
    FOR             reduce using rule 12 (cuerpo -> maps .)
    WHILE           reduce using rule 12 (cuerpo -> maps .)
    VAR             reduce using rule 12 (cuerpo -> maps .)
    VAL             reduce using rule 12 (cuerpo -> maps .)
    ENTERO          reduce using rule 12 (cuerpo -> maps .)
    DECIMAL         reduce using rule 12 (cuerpo -> maps .)
    CADENA_DE_CARACTERES reduce using rule 12 (cuerpo -> maps .)
    DOUBLE          reduce using rule 12 (cuerpo -> maps .)
    MAPOF           reduce using rule 12 (cuerpo -> maps .)
    TRUE            reduce using rule 12 (cuerpo -> maps .)
    FALSE           reduce using rule 12 (cuerpo -> maps .)
    LISTOF          reduce using rule 12 (cuerpo -> maps .)
    SETOF           reduce using rule 12 (cuerpo -> maps .)
    $end            reduce using rule 12 (cuerpo -> maps .)
    DLLAVE          reduce using rule 12 (cuerpo -> maps .)
    RETURN          reduce using rule 12 (cuerpo -> maps .)


state 13

    (13) cuerpo -> funColecciones .

    ID              reduce using rule 13 (cuerpo -> funColecciones .)
    PRINT           reduce using rule 13 (cuerpo -> funColecciones .)
    PRINTLN         reduce using rule 13 (cuerpo -> funColecciones .)
    READLINE        reduce using rule 13 (cuerpo -> funColecciones .)
    NEGATION        reduce using rule 13 (cuerpo -> funColecciones .)
    FUN             reduce using rule 13 (cuerpo -> funColecciones .)
    IF              reduce using rule 13 (cuerpo -> funColecciones .)
    FOR             reduce using rule 13 (cuerpo -> funColecciones .)
    WHILE           reduce using rule 13 (cuerpo -> funColecciones .)
    VAR             reduce using rule 13 (cuerpo -> funColecciones .)
    VAL             reduce using rule 13 (cuerpo -> funColecciones .)
    ENTERO          reduce using rule 13 (cuerpo -> funColecciones .)
    DECIMAL         reduce using rule 13 (cuerpo -> funColecciones .)
    CADENA_DE_CARACTERES reduce using rule 13 (cuerpo -> funColecciones .)
    DOUBLE          reduce using rule 13 (cuerpo -> funColecciones .)
    MAPOF           reduce using rule 13 (cuerpo -> funColecciones .)
    TRUE            reduce using rule 13 (cuerpo -> funColecciones .)
    FALSE           reduce using rule 13 (cuerpo -> funColecciones .)
    LISTOF          reduce using rule 13 (cuerpo -> funColecciones .)
    SETOF           reduce using rule 13 (cuerpo -> funColecciones .)
    $end            reduce using rule 13 (cuerpo -> funColecciones .)
    DLLAVE          reduce using rule 13 (cuerpo -> funColecciones .)
    RETURN          reduce using rule 13 (cuerpo -> funColecciones .)


state 14

    (14) cuerpo -> expLogicas .

    ID              reduce using rule 14 (cuerpo -> expLogicas .)
    PRINT           reduce using rule 14 (cuerpo -> expLogicas .)
    PRINTLN         reduce using rule 14 (cuerpo -> expLogicas .)
    READLINE        reduce using rule 14 (cuerpo -> expLogicas .)
    NEGATION        reduce using rule 14 (cuerpo -> expLogicas .)
    FUN             reduce using rule 14 (cuerpo -> expLogicas .)
    IF              reduce using rule 14 (cuerpo -> expLogicas .)
    FOR             reduce using rule 14 (cuerpo -> expLogicas .)
    WHILE           reduce using rule 14 (cuerpo -> expLogicas .)
    VAR             reduce using rule 14 (cuerpo -> expLogicas .)
    VAL             reduce using rule 14 (cuerpo -> expLogicas .)
    ENTERO          reduce using rule 14 (cuerpo -> expLogicas .)
    DECIMAL         reduce using rule 14 (cuerpo -> expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 14 (cuerpo -> expLogicas .)
    DOUBLE          reduce using rule 14 (cuerpo -> expLogicas .)
    MAPOF           reduce using rule 14 (cuerpo -> expLogicas .)
    TRUE            reduce using rule 14 (cuerpo -> expLogicas .)
    FALSE           reduce using rule 14 (cuerpo -> expLogicas .)
    LISTOF          reduce using rule 14 (cuerpo -> expLogicas .)
    SETOF           reduce using rule 14 (cuerpo -> expLogicas .)
    $end            reduce using rule 14 (cuerpo -> expLogicas .)
    DLLAVE          reduce using rule 14 (cuerpo -> expLogicas .)
    RETURN          reduce using rule 14 (cuerpo -> expLogicas .)


state 15

    (15) cuerpo -> fun .

    ID              reduce using rule 15 (cuerpo -> fun .)
    PRINT           reduce using rule 15 (cuerpo -> fun .)
    PRINTLN         reduce using rule 15 (cuerpo -> fun .)
    READLINE        reduce using rule 15 (cuerpo -> fun .)
    NEGATION        reduce using rule 15 (cuerpo -> fun .)
    FUN             reduce using rule 15 (cuerpo -> fun .)
    IF              reduce using rule 15 (cuerpo -> fun .)
    FOR             reduce using rule 15 (cuerpo -> fun .)
    WHILE           reduce using rule 15 (cuerpo -> fun .)
    VAR             reduce using rule 15 (cuerpo -> fun .)
    VAL             reduce using rule 15 (cuerpo -> fun .)
    ENTERO          reduce using rule 15 (cuerpo -> fun .)
    DECIMAL         reduce using rule 15 (cuerpo -> fun .)
    CADENA_DE_CARACTERES reduce using rule 15 (cuerpo -> fun .)
    DOUBLE          reduce using rule 15 (cuerpo -> fun .)
    MAPOF           reduce using rule 15 (cuerpo -> fun .)
    TRUE            reduce using rule 15 (cuerpo -> fun .)
    FALSE           reduce using rule 15 (cuerpo -> fun .)
    LISTOF          reduce using rule 15 (cuerpo -> fun .)
    SETOF           reduce using rule 15 (cuerpo -> fun .)
    $end            reduce using rule 15 (cuerpo -> fun .)
    DLLAVE          reduce using rule 15 (cuerpo -> fun .)
    RETURN          reduce using rule 15 (cuerpo -> fun .)


state 16

    (16) cuerpo -> if .

    ID              reduce using rule 16 (cuerpo -> if .)
    PRINT           reduce using rule 16 (cuerpo -> if .)
    PRINTLN         reduce using rule 16 (cuerpo -> if .)
    READLINE        reduce using rule 16 (cuerpo -> if .)
    NEGATION        reduce using rule 16 (cuerpo -> if .)
    FUN             reduce using rule 16 (cuerpo -> if .)
    IF              reduce using rule 16 (cuerpo -> if .)
    FOR             reduce using rule 16 (cuerpo -> if .)
    WHILE           reduce using rule 16 (cuerpo -> if .)
    VAR             reduce using rule 16 (cuerpo -> if .)
    VAL             reduce using rule 16 (cuerpo -> if .)
    ENTERO          reduce using rule 16 (cuerpo -> if .)
    DECIMAL         reduce using rule 16 (cuerpo -> if .)
    CADENA_DE_CARACTERES reduce using rule 16 (cuerpo -> if .)
    DOUBLE          reduce using rule 16 (cuerpo -> if .)
    MAPOF           reduce using rule 16 (cuerpo -> if .)
    TRUE            reduce using rule 16 (cuerpo -> if .)
    FALSE           reduce using rule 16 (cuerpo -> if .)
    LISTOF          reduce using rule 16 (cuerpo -> if .)
    SETOF           reduce using rule 16 (cuerpo -> if .)
    $end            reduce using rule 16 (cuerpo -> if .)
    DLLAVE          reduce using rule 16 (cuerpo -> if .)
    RETURN          reduce using rule 16 (cuerpo -> if .)


state 17

    (17) cuerpo -> for .

    ID              reduce using rule 17 (cuerpo -> for .)
    PRINT           reduce using rule 17 (cuerpo -> for .)
    PRINTLN         reduce using rule 17 (cuerpo -> for .)
    READLINE        reduce using rule 17 (cuerpo -> for .)
    NEGATION        reduce using rule 17 (cuerpo -> for .)
    FUN             reduce using rule 17 (cuerpo -> for .)
    IF              reduce using rule 17 (cuerpo -> for .)
    FOR             reduce using rule 17 (cuerpo -> for .)
    WHILE           reduce using rule 17 (cuerpo -> for .)
    VAR             reduce using rule 17 (cuerpo -> for .)
    VAL             reduce using rule 17 (cuerpo -> for .)
    ENTERO          reduce using rule 17 (cuerpo -> for .)
    DECIMAL         reduce using rule 17 (cuerpo -> for .)
    CADENA_DE_CARACTERES reduce using rule 17 (cuerpo -> for .)
    DOUBLE          reduce using rule 17 (cuerpo -> for .)
    MAPOF           reduce using rule 17 (cuerpo -> for .)
    TRUE            reduce using rule 17 (cuerpo -> for .)
    FALSE           reduce using rule 17 (cuerpo -> for .)
    LISTOF          reduce using rule 17 (cuerpo -> for .)
    SETOF           reduce using rule 17 (cuerpo -> for .)
    $end            reduce using rule 17 (cuerpo -> for .)
    DLLAVE          reduce using rule 17 (cuerpo -> for .)
    RETURN          reduce using rule 17 (cuerpo -> for .)


state 18

    (18) cuerpo -> while .

    ID              reduce using rule 18 (cuerpo -> while .)
    PRINT           reduce using rule 18 (cuerpo -> while .)
    PRINTLN         reduce using rule 18 (cuerpo -> while .)
    READLINE        reduce using rule 18 (cuerpo -> while .)
    NEGATION        reduce using rule 18 (cuerpo -> while .)
    FUN             reduce using rule 18 (cuerpo -> while .)
    IF              reduce using rule 18 (cuerpo -> while .)
    FOR             reduce using rule 18 (cuerpo -> while .)
    WHILE           reduce using rule 18 (cuerpo -> while .)
    VAR             reduce using rule 18 (cuerpo -> while .)
    VAL             reduce using rule 18 (cuerpo -> while .)
    ENTERO          reduce using rule 18 (cuerpo -> while .)
    DECIMAL         reduce using rule 18 (cuerpo -> while .)
    CADENA_DE_CARACTERES reduce using rule 18 (cuerpo -> while .)
    DOUBLE          reduce using rule 18 (cuerpo -> while .)
    MAPOF           reduce using rule 18 (cuerpo -> while .)
    TRUE            reduce using rule 18 (cuerpo -> while .)
    FALSE           reduce using rule 18 (cuerpo -> while .)
    LISTOF          reduce using rule 18 (cuerpo -> while .)
    SETOF           reduce using rule 18 (cuerpo -> while .)
    $end            reduce using rule 18 (cuerpo -> while .)
    DLLAVE          reduce using rule 18 (cuerpo -> while .)
    RETURN          reduce using rule 18 (cuerpo -> while .)


state 19

    (19) cuerpo -> valorIncDec .

    ID              reduce using rule 19 (cuerpo -> valorIncDec .)
    PRINT           reduce using rule 19 (cuerpo -> valorIncDec .)
    PRINTLN         reduce using rule 19 (cuerpo -> valorIncDec .)
    READLINE        reduce using rule 19 (cuerpo -> valorIncDec .)
    NEGATION        reduce using rule 19 (cuerpo -> valorIncDec .)
    FUN             reduce using rule 19 (cuerpo -> valorIncDec .)
    IF              reduce using rule 19 (cuerpo -> valorIncDec .)
    FOR             reduce using rule 19 (cuerpo -> valorIncDec .)
    WHILE           reduce using rule 19 (cuerpo -> valorIncDec .)
    VAR             reduce using rule 19 (cuerpo -> valorIncDec .)
    VAL             reduce using rule 19 (cuerpo -> valorIncDec .)
    ENTERO          reduce using rule 19 (cuerpo -> valorIncDec .)
    DECIMAL         reduce using rule 19 (cuerpo -> valorIncDec .)
    CADENA_DE_CARACTERES reduce using rule 19 (cuerpo -> valorIncDec .)
    DOUBLE          reduce using rule 19 (cuerpo -> valorIncDec .)
    MAPOF           reduce using rule 19 (cuerpo -> valorIncDec .)
    TRUE            reduce using rule 19 (cuerpo -> valorIncDec .)
    FALSE           reduce using rule 19 (cuerpo -> valorIncDec .)
    LISTOF          reduce using rule 19 (cuerpo -> valorIncDec .)
    SETOF           reduce using rule 19 (cuerpo -> valorIncDec .)
    $end            reduce using rule 19 (cuerpo -> valorIncDec .)
    DLLAVE          reduce using rule 19 (cuerpo -> valorIncDec .)
    RETURN          reduce using rule 19 (cuerpo -> valorIncDec .)


state 20

    (20) cuerpo -> valorInDecAsignacion .

    ID              reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    PRINT           reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    PRINTLN         reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    READLINE        reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    NEGATION        reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    FUN             reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    IF              reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    FOR             reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    WHILE           reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    VAR             reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    VAL             reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    ENTERO          reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    DECIMAL         reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    CADENA_DE_CARACTERES reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    DOUBLE          reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    MAPOF           reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    TRUE            reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    FALSE           reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    LISTOF          reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    SETOF           reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    $end            reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    DLLAVE          reduce using rule 20 (cuerpo -> valorInDecAsignacion .)
    RETURN          reduce using rule 20 (cuerpo -> valorInDecAsignacion .)


state 21

    (56) iniVariable -> variable . ID tipoDeDato
    (57) iniVariable -> variable . ID EQUALS valor
    (58) iniVariable -> variable . ID EQUALS valorBoolean
    (59) iniVariable -> variable . ID EQUALS expLogicas
    (60) iniVariable -> variable . ID EQUALS expresionRelacional
    (116) readline -> variable . ID EQUALS READLINE IPAR DPAR
    (102) list -> variable . ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> variable . ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> variable . IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> variable . ID EQUALS MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 54
    IPAR            shift and go to state 55


state 22

    (129) expresion -> ID .
    (131) expresion -> ID . operadorMat expresion
    (117) firstAndCap -> ID . PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> ID . PUNTO CAPITALIZE IPAR DPAR
    (28) valorIncDec -> ID . incrementoDec
    (27) valorInDecAsignacion -> ID . incDecAsignaacion ENTERO
    (135) elementoRelacional -> ID .
    (80) indexCol -> ID . ICOR ENTERO DCOR
    (81) indexCol -> ID . ICOR ID DCOR
    (82) slice -> ID . PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> ID . PUNTO SIZE
    (85) isEmpty -> ID . PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> ID . PUNTO KEYS
    (90) funMap -> ID . PUNTO VALUES
    (87) getMap -> ID . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> ID .
    (137) operadorMat -> . PLUS
    (138) operadorMat -> . MINUS
    (139) operadorMat -> . TIMES
    (140) operadorMat -> . DIVIDE
    (29) incrementoDec -> . MASMAS
    (30) incrementoDec -> . MENOSMENOS
    (31) incDecAsignaacion -> . MASIGUAL
    (32) incDecAsignaacion -> . MENOSIGUAL

    ID              reduce using rule 129 (expresion -> ID .)
    PRINT           reduce using rule 129 (expresion -> ID .)
    PRINTLN         reduce using rule 129 (expresion -> ID .)
    READLINE        reduce using rule 129 (expresion -> ID .)
    NEGATION        reduce using rule 129 (expresion -> ID .)
    FUN             reduce using rule 129 (expresion -> ID .)
    IF              reduce using rule 129 (expresion -> ID .)
    FOR             reduce using rule 129 (expresion -> ID .)
    WHILE           reduce using rule 129 (expresion -> ID .)
    VAR             reduce using rule 129 (expresion -> ID .)
    VAL             reduce using rule 129 (expresion -> ID .)
    ENTERO          reduce using rule 129 (expresion -> ID .)
    DECIMAL         reduce using rule 129 (expresion -> ID .)
    CADENA_DE_CARACTERES reduce using rule 129 (expresion -> ID .)
    DOUBLE          reduce using rule 129 (expresion -> ID .)
    MAPOF           reduce using rule 129 (expresion -> ID .)
    TRUE            reduce using rule 129 (expresion -> ID .)
    FALSE           reduce using rule 129 (expresion -> ID .)
    LISTOF          reduce using rule 129 (expresion -> ID .)
    SETOF           reduce using rule 129 (expresion -> ID .)
    $end            reduce using rule 129 (expresion -> ID .)
    DLLAVE          reduce using rule 129 (expresion -> ID .)
    RETURN          reduce using rule 129 (expresion -> ID .)
    PUNTO           shift and go to state 57
    EQUAL           reduce using rule 135 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 135 (elementoRelacional -> ID .)
    LARGE           reduce using rule 135 (elementoRelacional -> ID .)
    SMALL           reduce using rule 135 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 135 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 135 (elementoRelacional -> ID .)
    ICOR            shift and go to state 60
    AND             reduce using rule 146 (boolID -> ID .)
    OR              reduce using rule 146 (boolID -> ID .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 64
    MASMAS          shift and go to state 65
    MENOSMENOS      shift and go to state 66
    MASIGUAL        shift and go to state 67
    MENOSIGUAL      shift and go to state 68

    operadorMat                    shift and go to state 56
    incrementoDec                  shift and go to state 58
    incDecAsignaacion              shift and go to state 59

state 23

    (128) expresion -> valor .
    (130) expresion -> valor . operadorMat expresion
    (137) operadorMat -> . PLUS
    (138) operadorMat -> . MINUS
    (139) operadorMat -> . TIMES
    (140) operadorMat -> . DIVIDE

    ID              reduce using rule 128 (expresion -> valor .)
    PRINT           reduce using rule 128 (expresion -> valor .)
    PRINTLN         reduce using rule 128 (expresion -> valor .)
    READLINE        reduce using rule 128 (expresion -> valor .)
    NEGATION        reduce using rule 128 (expresion -> valor .)
    FUN             reduce using rule 128 (expresion -> valor .)
    IF              reduce using rule 128 (expresion -> valor .)
    FOR             reduce using rule 128 (expresion -> valor .)
    WHILE           reduce using rule 128 (expresion -> valor .)
    VAR             reduce using rule 128 (expresion -> valor .)
    VAL             reduce using rule 128 (expresion -> valor .)
    ENTERO          reduce using rule 128 (expresion -> valor .)
    DECIMAL         reduce using rule 128 (expresion -> valor .)
    CADENA_DE_CARACTERES reduce using rule 128 (expresion -> valor .)
    DOUBLE          reduce using rule 128 (expresion -> valor .)
    MAPOF           reduce using rule 128 (expresion -> valor .)
    TRUE            reduce using rule 128 (expresion -> valor .)
    FALSE           reduce using rule 128 (expresion -> valor .)
    LISTOF          reduce using rule 128 (expresion -> valor .)
    SETOF           reduce using rule 128 (expresion -> valor .)
    $end            reduce using rule 128 (expresion -> valor .)
    DLLAVE          reduce using rule 128 (expresion -> valor .)
    RETURN          reduce using rule 128 (expresion -> valor .)
    DPAR            reduce using rule 128 (expresion -> valor .)
    ELSE            reduce using rule 128 (expresion -> valor .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 64

    operadorMat                    shift and go to state 69

state 24

    (136) elementoRelacional -> valorBoolean .
    (147) boolID -> valorBoolean .

    EQUAL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    AND             reduce using rule 147 (boolID -> valorBoolean .)
    OR              reduce using rule 147 (boolID -> valorBoolean .)


state 25

    (132) expresionRelacional -> elementoRelacional . operadorRelacional elementoRelacional
    (152) operadorRelacional -> . EQUAL
    (153) operadorRelacional -> . NOTEQ
    (154) operadorRelacional -> . LARGE
    (155) operadorRelacional -> . SMALL
    (156) operadorRelacional -> . LRGEQ
    (157) operadorRelacional -> . SMLEQ

    EQUAL           shift and go to state 71
    NOTEQ           shift and go to state 72
    LARGE           shift and go to state 73
    SMALL           shift and go to state 74
    LRGEQ           shift and go to state 75
    SMLEQ           shift and go to state 76

    operadorRelacional             shift and go to state 70

state 26

    (61) imprimir -> PRINT . IPAR elementosPrint DPAR

    IPAR            shift and go to state 77


state 27

    (62) imprimir -> PRINTLN . IPAR elementosPrint DPAR

    IPAR            shift and go to state 78


state 28

    (115) readline -> READLINE . IPAR DPAR

    IPAR            shift and go to state 79


state 29

    (125) coleccion -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 80


state 30

    (126) coleccion -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 81


state 31

    (91) funMap -> MAPOF . IPAR mapsElemento DPAR PUNTO VALUES
    (88) getMap -> MAPOF . IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (127) coleccion -> MAPOF . IPAR mapsElemento DPAR

    IPAR            shift and go to state 82


state 32

    (74) funColecciones -> indexCol .

    ID              reduce using rule 74 (funColecciones -> indexCol .)
    PRINT           reduce using rule 74 (funColecciones -> indexCol .)
    PRINTLN         reduce using rule 74 (funColecciones -> indexCol .)
    READLINE        reduce using rule 74 (funColecciones -> indexCol .)
    NEGATION        reduce using rule 74 (funColecciones -> indexCol .)
    FUN             reduce using rule 74 (funColecciones -> indexCol .)
    IF              reduce using rule 74 (funColecciones -> indexCol .)
    FOR             reduce using rule 74 (funColecciones -> indexCol .)
    WHILE           reduce using rule 74 (funColecciones -> indexCol .)
    VAR             reduce using rule 74 (funColecciones -> indexCol .)
    VAL             reduce using rule 74 (funColecciones -> indexCol .)
    ENTERO          reduce using rule 74 (funColecciones -> indexCol .)
    DECIMAL         reduce using rule 74 (funColecciones -> indexCol .)
    CADENA_DE_CARACTERES reduce using rule 74 (funColecciones -> indexCol .)
    DOUBLE          reduce using rule 74 (funColecciones -> indexCol .)
    MAPOF           reduce using rule 74 (funColecciones -> indexCol .)
    TRUE            reduce using rule 74 (funColecciones -> indexCol .)
    FALSE           reduce using rule 74 (funColecciones -> indexCol .)
    LISTOF          reduce using rule 74 (funColecciones -> indexCol .)
    SETOF           reduce using rule 74 (funColecciones -> indexCol .)
    $end            reduce using rule 74 (funColecciones -> indexCol .)
    DLLAVE          reduce using rule 74 (funColecciones -> indexCol .)
    RETURN          reduce using rule 74 (funColecciones -> indexCol .)
    DPAR            reduce using rule 74 (funColecciones -> indexCol .)


state 33

    (75) funColecciones -> slice .

    ID              reduce using rule 75 (funColecciones -> slice .)
    PRINT           reduce using rule 75 (funColecciones -> slice .)
    PRINTLN         reduce using rule 75 (funColecciones -> slice .)
    READLINE        reduce using rule 75 (funColecciones -> slice .)
    NEGATION        reduce using rule 75 (funColecciones -> slice .)
    FUN             reduce using rule 75 (funColecciones -> slice .)
    IF              reduce using rule 75 (funColecciones -> slice .)
    FOR             reduce using rule 75 (funColecciones -> slice .)
    WHILE           reduce using rule 75 (funColecciones -> slice .)
    VAR             reduce using rule 75 (funColecciones -> slice .)
    VAL             reduce using rule 75 (funColecciones -> slice .)
    ENTERO          reduce using rule 75 (funColecciones -> slice .)
    DECIMAL         reduce using rule 75 (funColecciones -> slice .)
    CADENA_DE_CARACTERES reduce using rule 75 (funColecciones -> slice .)
    DOUBLE          reduce using rule 75 (funColecciones -> slice .)
    MAPOF           reduce using rule 75 (funColecciones -> slice .)
    TRUE            reduce using rule 75 (funColecciones -> slice .)
    FALSE           reduce using rule 75 (funColecciones -> slice .)
    LISTOF          reduce using rule 75 (funColecciones -> slice .)
    SETOF           reduce using rule 75 (funColecciones -> slice .)
    $end            reduce using rule 75 (funColecciones -> slice .)
    DLLAVE          reduce using rule 75 (funColecciones -> slice .)
    RETURN          reduce using rule 75 (funColecciones -> slice .)
    DPAR            reduce using rule 75 (funColecciones -> slice .)


state 34

    (76) funColecciones -> size .

    ID              reduce using rule 76 (funColecciones -> size .)
    PRINT           reduce using rule 76 (funColecciones -> size .)
    PRINTLN         reduce using rule 76 (funColecciones -> size .)
    READLINE        reduce using rule 76 (funColecciones -> size .)
    NEGATION        reduce using rule 76 (funColecciones -> size .)
    FUN             reduce using rule 76 (funColecciones -> size .)
    IF              reduce using rule 76 (funColecciones -> size .)
    FOR             reduce using rule 76 (funColecciones -> size .)
    WHILE           reduce using rule 76 (funColecciones -> size .)
    VAR             reduce using rule 76 (funColecciones -> size .)
    VAL             reduce using rule 76 (funColecciones -> size .)
    ENTERO          reduce using rule 76 (funColecciones -> size .)
    DECIMAL         reduce using rule 76 (funColecciones -> size .)
    CADENA_DE_CARACTERES reduce using rule 76 (funColecciones -> size .)
    DOUBLE          reduce using rule 76 (funColecciones -> size .)
    MAPOF           reduce using rule 76 (funColecciones -> size .)
    TRUE            reduce using rule 76 (funColecciones -> size .)
    FALSE           reduce using rule 76 (funColecciones -> size .)
    LISTOF          reduce using rule 76 (funColecciones -> size .)
    SETOF           reduce using rule 76 (funColecciones -> size .)
    $end            reduce using rule 76 (funColecciones -> size .)
    DLLAVE          reduce using rule 76 (funColecciones -> size .)
    RETURN          reduce using rule 76 (funColecciones -> size .)
    DPAR            reduce using rule 76 (funColecciones -> size .)


state 35

    (77) funColecciones -> isEmpty .

    ID              reduce using rule 77 (funColecciones -> isEmpty .)
    PRINT           reduce using rule 77 (funColecciones -> isEmpty .)
    PRINTLN         reduce using rule 77 (funColecciones -> isEmpty .)
    READLINE        reduce using rule 77 (funColecciones -> isEmpty .)
    NEGATION        reduce using rule 77 (funColecciones -> isEmpty .)
    FUN             reduce using rule 77 (funColecciones -> isEmpty .)
    IF              reduce using rule 77 (funColecciones -> isEmpty .)
    FOR             reduce using rule 77 (funColecciones -> isEmpty .)
    WHILE           reduce using rule 77 (funColecciones -> isEmpty .)
    VAR             reduce using rule 77 (funColecciones -> isEmpty .)
    VAL             reduce using rule 77 (funColecciones -> isEmpty .)
    ENTERO          reduce using rule 77 (funColecciones -> isEmpty .)
    DECIMAL         reduce using rule 77 (funColecciones -> isEmpty .)
    CADENA_DE_CARACTERES reduce using rule 77 (funColecciones -> isEmpty .)
    DOUBLE          reduce using rule 77 (funColecciones -> isEmpty .)
    MAPOF           reduce using rule 77 (funColecciones -> isEmpty .)
    TRUE            reduce using rule 77 (funColecciones -> isEmpty .)
    FALSE           reduce using rule 77 (funColecciones -> isEmpty .)
    LISTOF          reduce using rule 77 (funColecciones -> isEmpty .)
    SETOF           reduce using rule 77 (funColecciones -> isEmpty .)
    $end            reduce using rule 77 (funColecciones -> isEmpty .)
    DLLAVE          reduce using rule 77 (funColecciones -> isEmpty .)
    RETURN          reduce using rule 77 (funColecciones -> isEmpty .)
    DPAR            reduce using rule 77 (funColecciones -> isEmpty .)


state 36

    (78) funColecciones -> funMap .

    ID              reduce using rule 78 (funColecciones -> funMap .)
    PRINT           reduce using rule 78 (funColecciones -> funMap .)
    PRINTLN         reduce using rule 78 (funColecciones -> funMap .)
    READLINE        reduce using rule 78 (funColecciones -> funMap .)
    NEGATION        reduce using rule 78 (funColecciones -> funMap .)
    FUN             reduce using rule 78 (funColecciones -> funMap .)
    IF              reduce using rule 78 (funColecciones -> funMap .)
    FOR             reduce using rule 78 (funColecciones -> funMap .)
    WHILE           reduce using rule 78 (funColecciones -> funMap .)
    VAR             reduce using rule 78 (funColecciones -> funMap .)
    VAL             reduce using rule 78 (funColecciones -> funMap .)
    ENTERO          reduce using rule 78 (funColecciones -> funMap .)
    DECIMAL         reduce using rule 78 (funColecciones -> funMap .)
    CADENA_DE_CARACTERES reduce using rule 78 (funColecciones -> funMap .)
    DOUBLE          reduce using rule 78 (funColecciones -> funMap .)
    MAPOF           reduce using rule 78 (funColecciones -> funMap .)
    TRUE            reduce using rule 78 (funColecciones -> funMap .)
    FALSE           reduce using rule 78 (funColecciones -> funMap .)
    LISTOF          reduce using rule 78 (funColecciones -> funMap .)
    SETOF           reduce using rule 78 (funColecciones -> funMap .)
    $end            reduce using rule 78 (funColecciones -> funMap .)
    DLLAVE          reduce using rule 78 (funColecciones -> funMap .)
    RETURN          reduce using rule 78 (funColecciones -> funMap .)
    DPAR            reduce using rule 78 (funColecciones -> funMap .)


state 37

    (79) funColecciones -> getMap .

    ID              reduce using rule 79 (funColecciones -> getMap .)
    PRINT           reduce using rule 79 (funColecciones -> getMap .)
    PRINTLN         reduce using rule 79 (funColecciones -> getMap .)
    READLINE        reduce using rule 79 (funColecciones -> getMap .)
    NEGATION        reduce using rule 79 (funColecciones -> getMap .)
    FUN             reduce using rule 79 (funColecciones -> getMap .)
    IF              reduce using rule 79 (funColecciones -> getMap .)
    FOR             reduce using rule 79 (funColecciones -> getMap .)
    WHILE           reduce using rule 79 (funColecciones -> getMap .)
    VAR             reduce using rule 79 (funColecciones -> getMap .)
    VAL             reduce using rule 79 (funColecciones -> getMap .)
    ENTERO          reduce using rule 79 (funColecciones -> getMap .)
    DECIMAL         reduce using rule 79 (funColecciones -> getMap .)
    CADENA_DE_CARACTERES reduce using rule 79 (funColecciones -> getMap .)
    DOUBLE          reduce using rule 79 (funColecciones -> getMap .)
    MAPOF           reduce using rule 79 (funColecciones -> getMap .)
    TRUE            reduce using rule 79 (funColecciones -> getMap .)
    FALSE           reduce using rule 79 (funColecciones -> getMap .)
    LISTOF          reduce using rule 79 (funColecciones -> getMap .)
    SETOF           reduce using rule 79 (funColecciones -> getMap .)
    $end            reduce using rule 79 (funColecciones -> getMap .)
    DLLAVE          reduce using rule 79 (funColecciones -> getMap .)
    RETURN          reduce using rule 79 (funColecciones -> getMap .)
    DPAR            reduce using rule 79 (funColecciones -> getMap .)


state 38

    (144) expLogicas -> boolID . opLogico boolID
    (148) opLogico -> . AND
    (149) opLogico -> . OR

    AND             shift and go to state 84
    OR              shift and go to state 85

    opLogico                       shift and go to state 83

state 39

    (145) expLogicas -> NEGATION . boolID
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE

    ID              shift and go to state 87
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    boolID                         shift and go to state 86
    valorBoolean                   shift and go to state 88

state 40

    (21) fun -> FUN . ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> FUN . ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> FUN . ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> FUN . ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> FUN . ID IPAR entrada_fun DPAR EQUALS return

    ID              shift and go to state 89


state 41

    (37) if -> IF . IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> IF . IPAR entradaIf DPAR return
    (39) if -> IF . IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> IF . IPAR entradaIf DPAR return else

    IPAR            shift and go to state 90


state 42

    (33) for -> FOR . condicionFor ILLAVE algoritmo DLLAVE
    (34) condicionFor -> . IPAR ID IN ID DPAR
    (35) condicionFor -> . IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR
    (36) condicionFor -> . IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    IPAR            shift and go to state 92

    condicionFor                   shift and go to state 91

state 43

    (26) while -> WHILE . IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE

    IPAR            shift and go to state 93


state 44

    (141) valor -> ENTERO .
    (133) elementoRelacional -> ENTERO .

    PLUS            reduce using rule 141 (valor -> ENTERO .)
    MINUS           reduce using rule 141 (valor -> ENTERO .)
    TIMES           reduce using rule 141 (valor -> ENTERO .)
    DIVIDE          reduce using rule 141 (valor -> ENTERO .)
    ID              reduce using rule 141 (valor -> ENTERO .)
    PRINT           reduce using rule 141 (valor -> ENTERO .)
    PRINTLN         reduce using rule 141 (valor -> ENTERO .)
    READLINE        reduce using rule 141 (valor -> ENTERO .)
    NEGATION        reduce using rule 141 (valor -> ENTERO .)
    FUN             reduce using rule 141 (valor -> ENTERO .)
    IF              reduce using rule 141 (valor -> ENTERO .)
    FOR             reduce using rule 141 (valor -> ENTERO .)
    WHILE           reduce using rule 141 (valor -> ENTERO .)
    VAR             reduce using rule 141 (valor -> ENTERO .)
    VAL             reduce using rule 141 (valor -> ENTERO .)
    ENTERO          reduce using rule 141 (valor -> ENTERO .)
    DECIMAL         reduce using rule 141 (valor -> ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 141 (valor -> ENTERO .)
    DOUBLE          reduce using rule 141 (valor -> ENTERO .)
    MAPOF           reduce using rule 141 (valor -> ENTERO .)
    TRUE            reduce using rule 141 (valor -> ENTERO .)
    FALSE           reduce using rule 141 (valor -> ENTERO .)
    LISTOF          reduce using rule 141 (valor -> ENTERO .)
    SETOF           reduce using rule 141 (valor -> ENTERO .)
    $end            reduce using rule 141 (valor -> ENTERO .)
    DLLAVE          reduce using rule 141 (valor -> ENTERO .)
    RETURN          reduce using rule 141 (valor -> ENTERO .)
    DPAR            reduce using rule 141 (valor -> ENTERO .)
    COMA            reduce using rule 141 (valor -> ENTERO .)
    ELSE            reduce using rule 141 (valor -> ENTERO .)
    EQUAL           reduce using rule 133 (elementoRelacional -> ENTERO .)
    NOTEQ           reduce using rule 133 (elementoRelacional -> ENTERO .)
    LARGE           reduce using rule 133 (elementoRelacional -> ENTERO .)
    SMALL           reduce using rule 133 (elementoRelacional -> ENTERO .)
    LRGEQ           reduce using rule 133 (elementoRelacional -> ENTERO .)
    SMLEQ           reduce using rule 133 (elementoRelacional -> ENTERO .)


state 45

    (113) variable -> VAR .

    ID              reduce using rule 113 (variable -> VAR .)
    IPAR            reduce using rule 113 (variable -> VAR .)


state 46

    (114) variable -> VAL .

    ID              reduce using rule 114 (variable -> VAL .)
    IPAR            reduce using rule 114 (variable -> VAL .)


state 47

    (142) valor -> DECIMAL .

    PLUS            reduce using rule 142 (valor -> DECIMAL .)
    MINUS           reduce using rule 142 (valor -> DECIMAL .)
    TIMES           reduce using rule 142 (valor -> DECIMAL .)
    DIVIDE          reduce using rule 142 (valor -> DECIMAL .)
    ID              reduce using rule 142 (valor -> DECIMAL .)
    PRINT           reduce using rule 142 (valor -> DECIMAL .)
    PRINTLN         reduce using rule 142 (valor -> DECIMAL .)
    READLINE        reduce using rule 142 (valor -> DECIMAL .)
    NEGATION        reduce using rule 142 (valor -> DECIMAL .)
    FUN             reduce using rule 142 (valor -> DECIMAL .)
    IF              reduce using rule 142 (valor -> DECIMAL .)
    FOR             reduce using rule 142 (valor -> DECIMAL .)
    WHILE           reduce using rule 142 (valor -> DECIMAL .)
    VAR             reduce using rule 142 (valor -> DECIMAL .)
    VAL             reduce using rule 142 (valor -> DECIMAL .)
    ENTERO          reduce using rule 142 (valor -> DECIMAL .)
    DECIMAL         reduce using rule 142 (valor -> DECIMAL .)
    CADENA_DE_CARACTERES reduce using rule 142 (valor -> DECIMAL .)
    DOUBLE          reduce using rule 142 (valor -> DECIMAL .)
    MAPOF           reduce using rule 142 (valor -> DECIMAL .)
    TRUE            reduce using rule 142 (valor -> DECIMAL .)
    FALSE           reduce using rule 142 (valor -> DECIMAL .)
    LISTOF          reduce using rule 142 (valor -> DECIMAL .)
    SETOF           reduce using rule 142 (valor -> DECIMAL .)
    $end            reduce using rule 142 (valor -> DECIMAL .)
    DLLAVE          reduce using rule 142 (valor -> DECIMAL .)
    RETURN          reduce using rule 142 (valor -> DECIMAL .)
    DPAR            reduce using rule 142 (valor -> DECIMAL .)
    ELSE            reduce using rule 142 (valor -> DECIMAL .)
    COMA            reduce using rule 142 (valor -> DECIMAL .)


state 48

    (143) valor -> CADENA_DE_CARACTERES .

    PLUS            reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    MINUS           reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    TIMES           reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    DIVIDE          reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    ID              reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    PRINT           reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    PRINTLN         reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    READLINE        reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    NEGATION        reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    FUN             reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    IF              reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    FOR             reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    WHILE           reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    VAR             reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    VAL             reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    ENTERO          reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    DECIMAL         reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    CADENA_DE_CARACTERES reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    DOUBLE          reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    MAPOF           reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    TRUE            reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    FALSE           reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    LISTOF          reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    SETOF           reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    $end            reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    DLLAVE          reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    RETURN          reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    DPAR            reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    ELSE            reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)
    COMA            reduce using rule 143 (valor -> CADENA_DE_CARACTERES .)


state 49

    (134) elementoRelacional -> DOUBLE .

    EQUAL           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    NOTEQ           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    LARGE           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    SMALL           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    LRGEQ           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    SMLEQ           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    ID              reduce using rule 134 (elementoRelacional -> DOUBLE .)
    PRINT           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    PRINTLN         reduce using rule 134 (elementoRelacional -> DOUBLE .)
    READLINE        reduce using rule 134 (elementoRelacional -> DOUBLE .)
    NEGATION        reduce using rule 134 (elementoRelacional -> DOUBLE .)
    FUN             reduce using rule 134 (elementoRelacional -> DOUBLE .)
    IF              reduce using rule 134 (elementoRelacional -> DOUBLE .)
    FOR             reduce using rule 134 (elementoRelacional -> DOUBLE .)
    WHILE           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    VAR             reduce using rule 134 (elementoRelacional -> DOUBLE .)
    VAL             reduce using rule 134 (elementoRelacional -> DOUBLE .)
    ENTERO          reduce using rule 134 (elementoRelacional -> DOUBLE .)
    DECIMAL         reduce using rule 134 (elementoRelacional -> DOUBLE .)
    CADENA_DE_CARACTERES reduce using rule 134 (elementoRelacional -> DOUBLE .)
    DOUBLE          reduce using rule 134 (elementoRelacional -> DOUBLE .)
    MAPOF           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    TRUE            reduce using rule 134 (elementoRelacional -> DOUBLE .)
    FALSE           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    LISTOF          reduce using rule 134 (elementoRelacional -> DOUBLE .)
    SETOF           reduce using rule 134 (elementoRelacional -> DOUBLE .)
    $end            reduce using rule 134 (elementoRelacional -> DOUBLE .)
    DLLAVE          reduce using rule 134 (elementoRelacional -> DOUBLE .)
    RETURN          reduce using rule 134 (elementoRelacional -> DOUBLE .)
    DPAR            reduce using rule 134 (elementoRelacional -> DOUBLE .)
    ELSE            reduce using rule 134 (elementoRelacional -> DOUBLE .)


state 50

    (84) size -> coleccion . PUNTO SIZE
    (86) isEmpty -> coleccion . PUNTO ISEMPTY IPAR DPAR

    PUNTO           shift and go to state 94


state 51

    (150) valorBoolean -> TRUE .

    EQUAL           reduce using rule 150 (valorBoolean -> TRUE .)
    NOTEQ           reduce using rule 150 (valorBoolean -> TRUE .)
    LARGE           reduce using rule 150 (valorBoolean -> TRUE .)
    SMALL           reduce using rule 150 (valorBoolean -> TRUE .)
    LRGEQ           reduce using rule 150 (valorBoolean -> TRUE .)
    SMLEQ           reduce using rule 150 (valorBoolean -> TRUE .)
    AND             reduce using rule 150 (valorBoolean -> TRUE .)
    OR              reduce using rule 150 (valorBoolean -> TRUE .)
    ID              reduce using rule 150 (valorBoolean -> TRUE .)
    PRINT           reduce using rule 150 (valorBoolean -> TRUE .)
    PRINTLN         reduce using rule 150 (valorBoolean -> TRUE .)
    READLINE        reduce using rule 150 (valorBoolean -> TRUE .)
    NEGATION        reduce using rule 150 (valorBoolean -> TRUE .)
    FUN             reduce using rule 150 (valorBoolean -> TRUE .)
    IF              reduce using rule 150 (valorBoolean -> TRUE .)
    FOR             reduce using rule 150 (valorBoolean -> TRUE .)
    WHILE           reduce using rule 150 (valorBoolean -> TRUE .)
    VAR             reduce using rule 150 (valorBoolean -> TRUE .)
    VAL             reduce using rule 150 (valorBoolean -> TRUE .)
    ENTERO          reduce using rule 150 (valorBoolean -> TRUE .)
    DECIMAL         reduce using rule 150 (valorBoolean -> TRUE .)
    CADENA_DE_CARACTERES reduce using rule 150 (valorBoolean -> TRUE .)
    DOUBLE          reduce using rule 150 (valorBoolean -> TRUE .)
    MAPOF           reduce using rule 150 (valorBoolean -> TRUE .)
    TRUE            reduce using rule 150 (valorBoolean -> TRUE .)
    FALSE           reduce using rule 150 (valorBoolean -> TRUE .)
    LISTOF          reduce using rule 150 (valorBoolean -> TRUE .)
    SETOF           reduce using rule 150 (valorBoolean -> TRUE .)
    $end            reduce using rule 150 (valorBoolean -> TRUE .)
    DLLAVE          reduce using rule 150 (valorBoolean -> TRUE .)
    RETURN          reduce using rule 150 (valorBoolean -> TRUE .)
    DPAR            reduce using rule 150 (valorBoolean -> TRUE .)
    ELSE            reduce using rule 150 (valorBoolean -> TRUE .)
    COMA            reduce using rule 150 (valorBoolean -> TRUE .)


state 52

    (151) valorBoolean -> FALSE .

    EQUAL           reduce using rule 151 (valorBoolean -> FALSE .)
    NOTEQ           reduce using rule 151 (valorBoolean -> FALSE .)
    LARGE           reduce using rule 151 (valorBoolean -> FALSE .)
    SMALL           reduce using rule 151 (valorBoolean -> FALSE .)
    LRGEQ           reduce using rule 151 (valorBoolean -> FALSE .)
    SMLEQ           reduce using rule 151 (valorBoolean -> FALSE .)
    AND             reduce using rule 151 (valorBoolean -> FALSE .)
    OR              reduce using rule 151 (valorBoolean -> FALSE .)
    ID              reduce using rule 151 (valorBoolean -> FALSE .)
    PRINT           reduce using rule 151 (valorBoolean -> FALSE .)
    PRINTLN         reduce using rule 151 (valorBoolean -> FALSE .)
    READLINE        reduce using rule 151 (valorBoolean -> FALSE .)
    NEGATION        reduce using rule 151 (valorBoolean -> FALSE .)
    FUN             reduce using rule 151 (valorBoolean -> FALSE .)
    IF              reduce using rule 151 (valorBoolean -> FALSE .)
    FOR             reduce using rule 151 (valorBoolean -> FALSE .)
    WHILE           reduce using rule 151 (valorBoolean -> FALSE .)
    VAR             reduce using rule 151 (valorBoolean -> FALSE .)
    VAL             reduce using rule 151 (valorBoolean -> FALSE .)
    ENTERO          reduce using rule 151 (valorBoolean -> FALSE .)
    DECIMAL         reduce using rule 151 (valorBoolean -> FALSE .)
    CADENA_DE_CARACTERES reduce using rule 151 (valorBoolean -> FALSE .)
    DOUBLE          reduce using rule 151 (valorBoolean -> FALSE .)
    MAPOF           reduce using rule 151 (valorBoolean -> FALSE .)
    TRUE            reduce using rule 151 (valorBoolean -> FALSE .)
    FALSE           reduce using rule 151 (valorBoolean -> FALSE .)
    LISTOF          reduce using rule 151 (valorBoolean -> FALSE .)
    SETOF           reduce using rule 151 (valorBoolean -> FALSE .)
    $end            reduce using rule 151 (valorBoolean -> FALSE .)
    DLLAVE          reduce using rule 151 (valorBoolean -> FALSE .)
    RETURN          reduce using rule 151 (valorBoolean -> FALSE .)
    DPAR            reduce using rule 151 (valorBoolean -> FALSE .)
    ELSE            reduce using rule 151 (valorBoolean -> FALSE .)
    COMA            reduce using rule 151 (valorBoolean -> FALSE .)


state 53

    (2) algoritmo -> cuerpo algoritmo .

    $end            reduce using rule 2 (algoritmo -> cuerpo algoritmo .)
    DLLAVE          reduce using rule 2 (algoritmo -> cuerpo algoritmo .)
    RETURN          reduce using rule 2 (algoritmo -> cuerpo algoritmo .)


state 54

    (56) iniVariable -> variable ID . tipoDeDato
    (57) iniVariable -> variable ID . EQUALS valor
    (58) iniVariable -> variable ID . EQUALS valorBoolean
    (59) iniVariable -> variable ID . EQUALS expLogicas
    (60) iniVariable -> variable ID . EQUALS expresionRelacional
    (116) readline -> variable ID . EQUALS READLINE IPAR DPAR
    (102) list -> variable ID . EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> variable ID . EQUALS SETOF IPAR listElementos DPAR
    (92) maps -> variable ID . EQUALS MAPOF IPAR mapsElemento DPAR
    (119) tipoDeDato -> . DOSPUNTOS INT EQUALS ENTERO
    (120) tipoDeDato -> . DOSPUNTOS DOUBLE EQUALS DECIMAL
    (121) tipoDeDato -> . DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES
    (122) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS valorBoolean
    (123) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS expLogicas
    (124) tipoDeDato -> . DOSPUNTOS BOOLEAN EQUALS expresionRelacional

    EQUALS          shift and go to state 96
    DOSPUNTOS       shift and go to state 97

    tipoDeDato                     shift and go to state 95

state 55

    (95) tupla -> variable IPAR . ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    ID              shift and go to state 98


state 56

    (131) expresion -> ID operadorMat . expresion
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 99
    ENTERO          shift and go to state 101
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48

    expresion                      shift and go to state 100
    valor                          shift and go to state 23

state 57

    (117) firstAndCap -> ID PUNTO . FIRST IPAR DPAR
    (118) firstAndCap -> ID PUNTO . CAPITALIZE IPAR DPAR
    (82) slice -> ID PUNTO . SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> ID PUNTO . SIZE
    (85) isEmpty -> ID PUNTO . ISEMPTY IPAR DPAR
    (89) funMap -> ID PUNTO . KEYS
    (90) funMap -> ID PUNTO . VALUES
    (87) getMap -> ID PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    FIRST           shift and go to state 102
    CAPITALIZE      shift and go to state 103
    SLICE           shift and go to state 104
    SIZE            shift and go to state 105
    ISEMPTY         shift and go to state 106
    KEYS            shift and go to state 107
    VALUES          shift and go to state 108
    GET             shift and go to state 109


state 58

    (28) valorIncDec -> ID incrementoDec .

    ID              reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    PRINT           reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    PRINTLN         reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    READLINE        reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    NEGATION        reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    FUN             reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    IF              reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    FOR             reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    WHILE           reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    VAR             reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    VAL             reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    ENTERO          reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    DECIMAL         reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    CADENA_DE_CARACTERES reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    DOUBLE          reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    MAPOF           reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    TRUE            reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    FALSE           reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    LISTOF          reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    SETOF           reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    $end            reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    DLLAVE          reduce using rule 28 (valorIncDec -> ID incrementoDec .)
    RETURN          reduce using rule 28 (valorIncDec -> ID incrementoDec .)


state 59

    (27) valorInDecAsignacion -> ID incDecAsignaacion . ENTERO

    ENTERO          shift and go to state 110


state 60

    (80) indexCol -> ID ICOR . ENTERO DCOR
    (81) indexCol -> ID ICOR . ID DCOR

    ENTERO          shift and go to state 112
    ID              shift and go to state 111


state 61

    (137) operadorMat -> PLUS .

    ID              reduce using rule 137 (operadorMat -> PLUS .)
    ENTERO          reduce using rule 137 (operadorMat -> PLUS .)
    DECIMAL         reduce using rule 137 (operadorMat -> PLUS .)
    CADENA_DE_CARACTERES reduce using rule 137 (operadorMat -> PLUS .)


state 62

    (138) operadorMat -> MINUS .

    ID              reduce using rule 138 (operadorMat -> MINUS .)
    ENTERO          reduce using rule 138 (operadorMat -> MINUS .)
    DECIMAL         reduce using rule 138 (operadorMat -> MINUS .)
    CADENA_DE_CARACTERES reduce using rule 138 (operadorMat -> MINUS .)


state 63

    (139) operadorMat -> TIMES .

    ID              reduce using rule 139 (operadorMat -> TIMES .)
    ENTERO          reduce using rule 139 (operadorMat -> TIMES .)
    DECIMAL         reduce using rule 139 (operadorMat -> TIMES .)
    CADENA_DE_CARACTERES reduce using rule 139 (operadorMat -> TIMES .)


state 64

    (140) operadorMat -> DIVIDE .

    ID              reduce using rule 140 (operadorMat -> DIVIDE .)
    ENTERO          reduce using rule 140 (operadorMat -> DIVIDE .)
    DECIMAL         reduce using rule 140 (operadorMat -> DIVIDE .)
    CADENA_DE_CARACTERES reduce using rule 140 (operadorMat -> DIVIDE .)


state 65

    (29) incrementoDec -> MASMAS .

    ID              reduce using rule 29 (incrementoDec -> MASMAS .)
    PRINT           reduce using rule 29 (incrementoDec -> MASMAS .)
    PRINTLN         reduce using rule 29 (incrementoDec -> MASMAS .)
    READLINE        reduce using rule 29 (incrementoDec -> MASMAS .)
    NEGATION        reduce using rule 29 (incrementoDec -> MASMAS .)
    FUN             reduce using rule 29 (incrementoDec -> MASMAS .)
    IF              reduce using rule 29 (incrementoDec -> MASMAS .)
    FOR             reduce using rule 29 (incrementoDec -> MASMAS .)
    WHILE           reduce using rule 29 (incrementoDec -> MASMAS .)
    VAR             reduce using rule 29 (incrementoDec -> MASMAS .)
    VAL             reduce using rule 29 (incrementoDec -> MASMAS .)
    ENTERO          reduce using rule 29 (incrementoDec -> MASMAS .)
    DECIMAL         reduce using rule 29 (incrementoDec -> MASMAS .)
    CADENA_DE_CARACTERES reduce using rule 29 (incrementoDec -> MASMAS .)
    DOUBLE          reduce using rule 29 (incrementoDec -> MASMAS .)
    MAPOF           reduce using rule 29 (incrementoDec -> MASMAS .)
    TRUE            reduce using rule 29 (incrementoDec -> MASMAS .)
    FALSE           reduce using rule 29 (incrementoDec -> MASMAS .)
    LISTOF          reduce using rule 29 (incrementoDec -> MASMAS .)
    SETOF           reduce using rule 29 (incrementoDec -> MASMAS .)
    $end            reduce using rule 29 (incrementoDec -> MASMAS .)
    DLLAVE          reduce using rule 29 (incrementoDec -> MASMAS .)
    RETURN          reduce using rule 29 (incrementoDec -> MASMAS .)


state 66

    (30) incrementoDec -> MENOSMENOS .

    ID              reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    PRINT           reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    PRINTLN         reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    READLINE        reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    NEGATION        reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    FUN             reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    IF              reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    FOR             reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    WHILE           reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    VAR             reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    VAL             reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    ENTERO          reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    DECIMAL         reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    CADENA_DE_CARACTERES reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    DOUBLE          reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    MAPOF           reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    TRUE            reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    FALSE           reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    LISTOF          reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    SETOF           reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    $end            reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    DLLAVE          reduce using rule 30 (incrementoDec -> MENOSMENOS .)
    RETURN          reduce using rule 30 (incrementoDec -> MENOSMENOS .)


state 67

    (31) incDecAsignaacion -> MASIGUAL .

    ENTERO          reduce using rule 31 (incDecAsignaacion -> MASIGUAL .)


state 68

    (32) incDecAsignaacion -> MENOSIGUAL .

    ENTERO          reduce using rule 32 (incDecAsignaacion -> MENOSIGUAL .)


state 69

    (130) expresion -> valor operadorMat . expresion
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES

    ID              shift and go to state 99
    ENTERO          shift and go to state 101
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48

    valor                          shift and go to state 23
    expresion                      shift and go to state 113

state 70

    (132) expresionRelacional -> elementoRelacional operadorRelacional . elementoRelacional
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE

    ENTERO          shift and go to state 115
    DOUBLE          shift and go to state 49
    ID              shift and go to state 116
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    elementoRelacional             shift and go to state 114
    valorBoolean                   shift and go to state 117

state 71

    (152) operadorRelacional -> EQUAL .

    ENTERO          reduce using rule 152 (operadorRelacional -> EQUAL .)
    DOUBLE          reduce using rule 152 (operadorRelacional -> EQUAL .)
    ID              reduce using rule 152 (operadorRelacional -> EQUAL .)
    TRUE            reduce using rule 152 (operadorRelacional -> EQUAL .)
    FALSE           reduce using rule 152 (operadorRelacional -> EQUAL .)


state 72

    (153) operadorRelacional -> NOTEQ .

    ENTERO          reduce using rule 153 (operadorRelacional -> NOTEQ .)
    DOUBLE          reduce using rule 153 (operadorRelacional -> NOTEQ .)
    ID              reduce using rule 153 (operadorRelacional -> NOTEQ .)
    TRUE            reduce using rule 153 (operadorRelacional -> NOTEQ .)
    FALSE           reduce using rule 153 (operadorRelacional -> NOTEQ .)


state 73

    (154) operadorRelacional -> LARGE .

    ENTERO          reduce using rule 154 (operadorRelacional -> LARGE .)
    DOUBLE          reduce using rule 154 (operadorRelacional -> LARGE .)
    ID              reduce using rule 154 (operadorRelacional -> LARGE .)
    TRUE            reduce using rule 154 (operadorRelacional -> LARGE .)
    FALSE           reduce using rule 154 (operadorRelacional -> LARGE .)


state 74

    (155) operadorRelacional -> SMALL .

    ENTERO          reduce using rule 155 (operadorRelacional -> SMALL .)
    DOUBLE          reduce using rule 155 (operadorRelacional -> SMALL .)
    ID              reduce using rule 155 (operadorRelacional -> SMALL .)
    TRUE            reduce using rule 155 (operadorRelacional -> SMALL .)
    FALSE           reduce using rule 155 (operadorRelacional -> SMALL .)


state 75

    (156) operadorRelacional -> LRGEQ .

    ENTERO          reduce using rule 156 (operadorRelacional -> LRGEQ .)
    DOUBLE          reduce using rule 156 (operadorRelacional -> LRGEQ .)
    ID              reduce using rule 156 (operadorRelacional -> LRGEQ .)
    TRUE            reduce using rule 156 (operadorRelacional -> LRGEQ .)
    FALSE           reduce using rule 156 (operadorRelacional -> LRGEQ .)


state 76

    (157) operadorRelacional -> SMLEQ .

    ENTERO          reduce using rule 157 (operadorRelacional -> SMLEQ .)
    DOUBLE          reduce using rule 157 (operadorRelacional -> SMLEQ .)
    ID              reduce using rule 157 (operadorRelacional -> SMLEQ .)
    TRUE            reduce using rule 157 (operadorRelacional -> SMLEQ .)
    FALSE           reduce using rule 157 (operadorRelacional -> SMLEQ .)


state 77

    (61) imprimir -> PRINT IPAR . elementosPrint DPAR
    (63) elementosPrint -> . funColecciones
    (64) elementosPrint -> . coleccion
    (65) elementosPrint -> . expresion
    (66) elementosPrint -> . valorBoolean
    (67) elementosPrint -> . expLogicas
    (68) elementosPrint -> . expresionRelacional
    (69) elementosPrint -> . imprimirColecciones
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (70) imprimirColecciones -> . PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (71) imprimirColecciones -> . MAPOF IPAR mapsElemento DPAR
    (72) imprimirColecciones -> . LISTOF IPAR listElementos DPAR
    (73) imprimirColecciones -> . SETOF IPAR listElementos DPAR
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    LISTOF          shift and go to state 126
    SETOF           shift and go to state 127
    MAPOF           shift and go to state 128
    ID              shift and go to state 129
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    PAIR            shift and go to state 130
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49

    elementosPrint                 shift and go to state 118
    funColecciones                 shift and go to state 119
    coleccion                      shift and go to state 120
    expresion                      shift and go to state 121
    valorBoolean                   shift and go to state 122
    expLogicas                     shift and go to state 123
    expresionRelacional            shift and go to state 124
    imprimirColecciones            shift and go to state 125
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    valor                          shift and go to state 23
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 25

state 78

    (62) imprimir -> PRINTLN IPAR . elementosPrint DPAR
    (63) elementosPrint -> . funColecciones
    (64) elementosPrint -> . coleccion
    (65) elementosPrint -> . expresion
    (66) elementosPrint -> . valorBoolean
    (67) elementosPrint -> . expLogicas
    (68) elementosPrint -> . expresionRelacional
    (69) elementosPrint -> . imprimirColecciones
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (70) imprimirColecciones -> . PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (71) imprimirColecciones -> . MAPOF IPAR mapsElemento DPAR
    (72) imprimirColecciones -> . LISTOF IPAR listElementos DPAR
    (73) imprimirColecciones -> . SETOF IPAR listElementos DPAR
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    LISTOF          shift and go to state 126
    SETOF           shift and go to state 127
    MAPOF           shift and go to state 128
    ID              shift and go to state 129
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    PAIR            shift and go to state 130
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49

    elementosPrint                 shift and go to state 131
    funColecciones                 shift and go to state 119
    coleccion                      shift and go to state 120
    expresion                      shift and go to state 121
    valorBoolean                   shift and go to state 122
    expLogicas                     shift and go to state 123
    expresionRelacional            shift and go to state 124
    imprimirColecciones            shift and go to state 125
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    valor                          shift and go to state 23
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 25

state 79

    (115) readline -> READLINE IPAR . DPAR

    DPAR            shift and go to state 132


state 80

    (125) coleccion -> LISTOF IPAR . listElementos DPAR
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 134
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 81

    (126) coleccion -> SETOF IPAR . listElementos DPAR
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 141
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 82

    (91) funMap -> MAPOF IPAR . mapsElemento DPAR PUNTO VALUES
    (88) getMap -> MAPOF IPAR . mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (127) coleccion -> MAPOF IPAR . mapsElemento DPAR
    (93) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (94) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 143

    mapsElemento                   shift and go to state 142

state 83

    (144) expLogicas -> boolID opLogico . boolID
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE

    ID              shift and go to state 87
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    boolID                         shift and go to state 144
    valorBoolean                   shift and go to state 88

state 84

    (148) opLogico -> AND .

    ID              reduce using rule 148 (opLogico -> AND .)
    TRUE            reduce using rule 148 (opLogico -> AND .)
    FALSE           reduce using rule 148 (opLogico -> AND .)


state 85

    (149) opLogico -> OR .

    ID              reduce using rule 149 (opLogico -> OR .)
    TRUE            reduce using rule 149 (opLogico -> OR .)
    FALSE           reduce using rule 149 (opLogico -> OR .)


state 86

    (145) expLogicas -> NEGATION boolID .

    ID              reduce using rule 145 (expLogicas -> NEGATION boolID .)
    PRINT           reduce using rule 145 (expLogicas -> NEGATION boolID .)
    PRINTLN         reduce using rule 145 (expLogicas -> NEGATION boolID .)
    READLINE        reduce using rule 145 (expLogicas -> NEGATION boolID .)
    NEGATION        reduce using rule 145 (expLogicas -> NEGATION boolID .)
    FUN             reduce using rule 145 (expLogicas -> NEGATION boolID .)
    IF              reduce using rule 145 (expLogicas -> NEGATION boolID .)
    FOR             reduce using rule 145 (expLogicas -> NEGATION boolID .)
    WHILE           reduce using rule 145 (expLogicas -> NEGATION boolID .)
    VAR             reduce using rule 145 (expLogicas -> NEGATION boolID .)
    VAL             reduce using rule 145 (expLogicas -> NEGATION boolID .)
    ENTERO          reduce using rule 145 (expLogicas -> NEGATION boolID .)
    DECIMAL         reduce using rule 145 (expLogicas -> NEGATION boolID .)
    CADENA_DE_CARACTERES reduce using rule 145 (expLogicas -> NEGATION boolID .)
    DOUBLE          reduce using rule 145 (expLogicas -> NEGATION boolID .)
    MAPOF           reduce using rule 145 (expLogicas -> NEGATION boolID .)
    TRUE            reduce using rule 145 (expLogicas -> NEGATION boolID .)
    FALSE           reduce using rule 145 (expLogicas -> NEGATION boolID .)
    LISTOF          reduce using rule 145 (expLogicas -> NEGATION boolID .)
    SETOF           reduce using rule 145 (expLogicas -> NEGATION boolID .)
    $end            reduce using rule 145 (expLogicas -> NEGATION boolID .)
    DLLAVE          reduce using rule 145 (expLogicas -> NEGATION boolID .)
    RETURN          reduce using rule 145 (expLogicas -> NEGATION boolID .)
    DPAR            reduce using rule 145 (expLogicas -> NEGATION boolID .)
    ELSE            reduce using rule 145 (expLogicas -> NEGATION boolID .)


state 87

    (146) boolID -> ID .

    ID              reduce using rule 146 (boolID -> ID .)
    PRINT           reduce using rule 146 (boolID -> ID .)
    PRINTLN         reduce using rule 146 (boolID -> ID .)
    READLINE        reduce using rule 146 (boolID -> ID .)
    NEGATION        reduce using rule 146 (boolID -> ID .)
    FUN             reduce using rule 146 (boolID -> ID .)
    IF              reduce using rule 146 (boolID -> ID .)
    FOR             reduce using rule 146 (boolID -> ID .)
    WHILE           reduce using rule 146 (boolID -> ID .)
    VAR             reduce using rule 146 (boolID -> ID .)
    VAL             reduce using rule 146 (boolID -> ID .)
    ENTERO          reduce using rule 146 (boolID -> ID .)
    DECIMAL         reduce using rule 146 (boolID -> ID .)
    CADENA_DE_CARACTERES reduce using rule 146 (boolID -> ID .)
    DOUBLE          reduce using rule 146 (boolID -> ID .)
    MAPOF           reduce using rule 146 (boolID -> ID .)
    TRUE            reduce using rule 146 (boolID -> ID .)
    FALSE           reduce using rule 146 (boolID -> ID .)
    LISTOF          reduce using rule 146 (boolID -> ID .)
    SETOF           reduce using rule 146 (boolID -> ID .)
    $end            reduce using rule 146 (boolID -> ID .)
    DLLAVE          reduce using rule 146 (boolID -> ID .)
    RETURN          reduce using rule 146 (boolID -> ID .)
    DPAR            reduce using rule 146 (boolID -> ID .)
    ELSE            reduce using rule 146 (boolID -> ID .)


state 88

    (147) boolID -> valorBoolean .

    ID              reduce using rule 147 (boolID -> valorBoolean .)
    PRINT           reduce using rule 147 (boolID -> valorBoolean .)
    PRINTLN         reduce using rule 147 (boolID -> valorBoolean .)
    READLINE        reduce using rule 147 (boolID -> valorBoolean .)
    NEGATION        reduce using rule 147 (boolID -> valorBoolean .)
    FUN             reduce using rule 147 (boolID -> valorBoolean .)
    IF              reduce using rule 147 (boolID -> valorBoolean .)
    FOR             reduce using rule 147 (boolID -> valorBoolean .)
    WHILE           reduce using rule 147 (boolID -> valorBoolean .)
    VAR             reduce using rule 147 (boolID -> valorBoolean .)
    VAL             reduce using rule 147 (boolID -> valorBoolean .)
    ENTERO          reduce using rule 147 (boolID -> valorBoolean .)
    DECIMAL         reduce using rule 147 (boolID -> valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 147 (boolID -> valorBoolean .)
    DOUBLE          reduce using rule 147 (boolID -> valorBoolean .)
    MAPOF           reduce using rule 147 (boolID -> valorBoolean .)
    TRUE            reduce using rule 147 (boolID -> valorBoolean .)
    FALSE           reduce using rule 147 (boolID -> valorBoolean .)
    LISTOF          reduce using rule 147 (boolID -> valorBoolean .)
    SETOF           reduce using rule 147 (boolID -> valorBoolean .)
    $end            reduce using rule 147 (boolID -> valorBoolean .)
    DLLAVE          reduce using rule 147 (boolID -> valorBoolean .)
    RETURN          reduce using rule 147 (boolID -> valorBoolean .)
    DPAR            reduce using rule 147 (boolID -> valorBoolean .)
    ELSE            reduce using rule 147 (boolID -> valorBoolean .)


state 89

    (21) fun -> FUN ID . IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> FUN ID . IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> FUN ID . IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> FUN ID . IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> FUN ID . IPAR entrada_fun DPAR EQUALS return

    IPAR            shift and go to state 145


state 90

    (37) if -> IF IPAR . entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> IF IPAR . entradaIf DPAR return
    (39) if -> IF IPAR . entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> IF IPAR . entradaIf DPAR return else
    (43) entradaIf -> . valorBoolean
    (44) entradaIf -> . expLogicas
    (45) entradaIf -> . expresionRelacional
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    ID              shift and go to state 150
    ENTERO          shift and go to state 115
    DOUBLE          shift and go to state 49

    entradaIf                      shift and go to state 146
    valorBoolean                   shift and go to state 147
    expLogicas                     shift and go to state 148
    expresionRelacional            shift and go to state 149
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 25

state 91

    (33) for -> FOR condicionFor . ILLAVE algoritmo DLLAVE

    ILLAVE          shift and go to state 151


state 92

    (34) condicionFor -> IPAR . ID IN ID DPAR
    (35) condicionFor -> IPAR . ID IN ENTERO PUNTO PUNTO ENTERO DPAR
    (36) condicionFor -> IPAR . ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    ID              shift and go to state 152


state 93

    (26) while -> WHILE IPAR . entradaIf DPAR ILLAVE algoritmo DLLAVE
    (43) entradaIf -> . valorBoolean
    (44) entradaIf -> . expLogicas
    (45) entradaIf -> . expresionRelacional
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    ID              shift and go to state 150
    ENTERO          shift and go to state 115
    DOUBLE          shift and go to state 49

    entradaIf                      shift and go to state 153
    valorBoolean                   shift and go to state 147
    expLogicas                     shift and go to state 148
    expresionRelacional            shift and go to state 149
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 25

state 94

    (84) size -> coleccion PUNTO . SIZE
    (86) isEmpty -> coleccion PUNTO . ISEMPTY IPAR DPAR

    SIZE            shift and go to state 154
    ISEMPTY         shift and go to state 155


state 95

    (56) iniVariable -> variable ID tipoDeDato .

    ID              reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    PRINT           reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    PRINTLN         reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    READLINE        reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    NEGATION        reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    FUN             reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    IF              reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    FOR             reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    WHILE           reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    VAR             reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    VAL             reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    ENTERO          reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    DECIMAL         reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    CADENA_DE_CARACTERES reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    DOUBLE          reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    MAPOF           reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    TRUE            reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    FALSE           reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    LISTOF          reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    SETOF           reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    $end            reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    DLLAVE          reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)
    RETURN          reduce using rule 56 (iniVariable -> variable ID tipoDeDato .)


state 96

    (57) iniVariable -> variable ID EQUALS . valor
    (58) iniVariable -> variable ID EQUALS . valorBoolean
    (59) iniVariable -> variable ID EQUALS . expLogicas
    (60) iniVariable -> variable ID EQUALS . expresionRelacional
    (116) readline -> variable ID EQUALS . READLINE IPAR DPAR
    (102) list -> variable ID EQUALS . LISTOF IPAR listElementos DPAR
    (101) conjuntos -> variable ID EQUALS . SETOF IPAR listElementos DPAR
    (92) maps -> variable ID EQUALS . MAPOF IPAR mapsElemento DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    READLINE        shift and go to state 160
    LISTOF          shift and go to state 161
    SETOF           shift and go to state 162
    MAPOF           shift and go to state 163
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    ID              shift and go to state 150
    DOUBLE          shift and go to state 49

    valor                          shift and go to state 156
    valorBoolean                   shift and go to state 157
    expLogicas                     shift and go to state 158
    expresionRelacional            shift and go to state 159
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 25

state 97

    (119) tipoDeDato -> DOSPUNTOS . INT EQUALS ENTERO
    (120) tipoDeDato -> DOSPUNTOS . DOUBLE EQUALS DECIMAL
    (121) tipoDeDato -> DOSPUNTOS . STRING EQUALS CADENA_DE_CARACTERES
    (122) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS valorBoolean
    (123) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS expLogicas
    (124) tipoDeDato -> DOSPUNTOS . BOOLEAN EQUALS expresionRelacional

    INT             shift and go to state 164
    DOUBLE          shift and go to state 165
    STRING          shift and go to state 166
    BOOLEAN         shift and go to state 167


state 98

    (95) tupla -> variable IPAR ID . COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    COMA            shift and go to state 168


state 99

    (129) expresion -> ID .
    (131) expresion -> ID . operadorMat expresion
    (137) operadorMat -> . PLUS
    (138) operadorMat -> . MINUS
    (139) operadorMat -> . TIMES
    (140) operadorMat -> . DIVIDE

    ID              reduce using rule 129 (expresion -> ID .)
    PRINT           reduce using rule 129 (expresion -> ID .)
    PRINTLN         reduce using rule 129 (expresion -> ID .)
    READLINE        reduce using rule 129 (expresion -> ID .)
    NEGATION        reduce using rule 129 (expresion -> ID .)
    FUN             reduce using rule 129 (expresion -> ID .)
    IF              reduce using rule 129 (expresion -> ID .)
    FOR             reduce using rule 129 (expresion -> ID .)
    WHILE           reduce using rule 129 (expresion -> ID .)
    VAR             reduce using rule 129 (expresion -> ID .)
    VAL             reduce using rule 129 (expresion -> ID .)
    ENTERO          reduce using rule 129 (expresion -> ID .)
    DECIMAL         reduce using rule 129 (expresion -> ID .)
    CADENA_DE_CARACTERES reduce using rule 129 (expresion -> ID .)
    DOUBLE          reduce using rule 129 (expresion -> ID .)
    MAPOF           reduce using rule 129 (expresion -> ID .)
    TRUE            reduce using rule 129 (expresion -> ID .)
    FALSE           reduce using rule 129 (expresion -> ID .)
    LISTOF          reduce using rule 129 (expresion -> ID .)
    SETOF           reduce using rule 129 (expresion -> ID .)
    $end            reduce using rule 129 (expresion -> ID .)
    DLLAVE          reduce using rule 129 (expresion -> ID .)
    RETURN          reduce using rule 129 (expresion -> ID .)
    DPAR            reduce using rule 129 (expresion -> ID .)
    ELSE            reduce using rule 129 (expresion -> ID .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 64

    operadorMat                    shift and go to state 56

state 100

    (131) expresion -> ID operadorMat expresion .

    ID              reduce using rule 131 (expresion -> ID operadorMat expresion .)
    PRINT           reduce using rule 131 (expresion -> ID operadorMat expresion .)
    PRINTLN         reduce using rule 131 (expresion -> ID operadorMat expresion .)
    READLINE        reduce using rule 131 (expresion -> ID operadorMat expresion .)
    NEGATION        reduce using rule 131 (expresion -> ID operadorMat expresion .)
    FUN             reduce using rule 131 (expresion -> ID operadorMat expresion .)
    IF              reduce using rule 131 (expresion -> ID operadorMat expresion .)
    FOR             reduce using rule 131 (expresion -> ID operadorMat expresion .)
    WHILE           reduce using rule 131 (expresion -> ID operadorMat expresion .)
    VAR             reduce using rule 131 (expresion -> ID operadorMat expresion .)
    VAL             reduce using rule 131 (expresion -> ID operadorMat expresion .)
    ENTERO          reduce using rule 131 (expresion -> ID operadorMat expresion .)
    DECIMAL         reduce using rule 131 (expresion -> ID operadorMat expresion .)
    CADENA_DE_CARACTERES reduce using rule 131 (expresion -> ID operadorMat expresion .)
    DOUBLE          reduce using rule 131 (expresion -> ID operadorMat expresion .)
    MAPOF           reduce using rule 131 (expresion -> ID operadorMat expresion .)
    TRUE            reduce using rule 131 (expresion -> ID operadorMat expresion .)
    FALSE           reduce using rule 131 (expresion -> ID operadorMat expresion .)
    LISTOF          reduce using rule 131 (expresion -> ID operadorMat expresion .)
    SETOF           reduce using rule 131 (expresion -> ID operadorMat expresion .)
    $end            reduce using rule 131 (expresion -> ID operadorMat expresion .)
    DLLAVE          reduce using rule 131 (expresion -> ID operadorMat expresion .)
    RETURN          reduce using rule 131 (expresion -> ID operadorMat expresion .)
    DPAR            reduce using rule 131 (expresion -> ID operadorMat expresion .)
    ELSE            reduce using rule 131 (expresion -> ID operadorMat expresion .)


state 101

    (141) valor -> ENTERO .

    PLUS            reduce using rule 141 (valor -> ENTERO .)
    MINUS           reduce using rule 141 (valor -> ENTERO .)
    TIMES           reduce using rule 141 (valor -> ENTERO .)
    DIVIDE          reduce using rule 141 (valor -> ENTERO .)
    ID              reduce using rule 141 (valor -> ENTERO .)
    PRINT           reduce using rule 141 (valor -> ENTERO .)
    PRINTLN         reduce using rule 141 (valor -> ENTERO .)
    READLINE        reduce using rule 141 (valor -> ENTERO .)
    NEGATION        reduce using rule 141 (valor -> ENTERO .)
    FUN             reduce using rule 141 (valor -> ENTERO .)
    IF              reduce using rule 141 (valor -> ENTERO .)
    FOR             reduce using rule 141 (valor -> ENTERO .)
    WHILE           reduce using rule 141 (valor -> ENTERO .)
    VAR             reduce using rule 141 (valor -> ENTERO .)
    VAL             reduce using rule 141 (valor -> ENTERO .)
    ENTERO          reduce using rule 141 (valor -> ENTERO .)
    DECIMAL         reduce using rule 141 (valor -> ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 141 (valor -> ENTERO .)
    DOUBLE          reduce using rule 141 (valor -> ENTERO .)
    MAPOF           reduce using rule 141 (valor -> ENTERO .)
    TRUE            reduce using rule 141 (valor -> ENTERO .)
    FALSE           reduce using rule 141 (valor -> ENTERO .)
    LISTOF          reduce using rule 141 (valor -> ENTERO .)
    SETOF           reduce using rule 141 (valor -> ENTERO .)
    $end            reduce using rule 141 (valor -> ENTERO .)
    DLLAVE          reduce using rule 141 (valor -> ENTERO .)
    RETURN          reduce using rule 141 (valor -> ENTERO .)
    DPAR            reduce using rule 141 (valor -> ENTERO .)
    ELSE            reduce using rule 141 (valor -> ENTERO .)
    COMA            reduce using rule 141 (valor -> ENTERO .)


state 102

    (117) firstAndCap -> ID PUNTO FIRST . IPAR DPAR

    IPAR            shift and go to state 169


state 103

    (118) firstAndCap -> ID PUNTO CAPITALIZE . IPAR DPAR

    IPAR            shift and go to state 170


state 104

    (82) slice -> ID PUNTO SLICE . IPAR ENTERO PUNTO PUNTO ENTERO DPAR

    IPAR            shift and go to state 171


state 105

    (83) size -> ID PUNTO SIZE .

    ID              reduce using rule 83 (size -> ID PUNTO SIZE .)
    PRINT           reduce using rule 83 (size -> ID PUNTO SIZE .)
    PRINTLN         reduce using rule 83 (size -> ID PUNTO SIZE .)
    READLINE        reduce using rule 83 (size -> ID PUNTO SIZE .)
    NEGATION        reduce using rule 83 (size -> ID PUNTO SIZE .)
    FUN             reduce using rule 83 (size -> ID PUNTO SIZE .)
    IF              reduce using rule 83 (size -> ID PUNTO SIZE .)
    FOR             reduce using rule 83 (size -> ID PUNTO SIZE .)
    WHILE           reduce using rule 83 (size -> ID PUNTO SIZE .)
    VAR             reduce using rule 83 (size -> ID PUNTO SIZE .)
    VAL             reduce using rule 83 (size -> ID PUNTO SIZE .)
    ENTERO          reduce using rule 83 (size -> ID PUNTO SIZE .)
    DECIMAL         reduce using rule 83 (size -> ID PUNTO SIZE .)
    CADENA_DE_CARACTERES reduce using rule 83 (size -> ID PUNTO SIZE .)
    DOUBLE          reduce using rule 83 (size -> ID PUNTO SIZE .)
    MAPOF           reduce using rule 83 (size -> ID PUNTO SIZE .)
    TRUE            reduce using rule 83 (size -> ID PUNTO SIZE .)
    FALSE           reduce using rule 83 (size -> ID PUNTO SIZE .)
    LISTOF          reduce using rule 83 (size -> ID PUNTO SIZE .)
    SETOF           reduce using rule 83 (size -> ID PUNTO SIZE .)
    $end            reduce using rule 83 (size -> ID PUNTO SIZE .)
    DLLAVE          reduce using rule 83 (size -> ID PUNTO SIZE .)
    RETURN          reduce using rule 83 (size -> ID PUNTO SIZE .)
    DPAR            reduce using rule 83 (size -> ID PUNTO SIZE .)


state 106

    (85) isEmpty -> ID PUNTO ISEMPTY . IPAR DPAR

    IPAR            shift and go to state 172


state 107

    (89) funMap -> ID PUNTO KEYS .

    ID              reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    PRINT           reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    PRINTLN         reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    READLINE        reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    NEGATION        reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    FUN             reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    IF              reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    FOR             reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    WHILE           reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    VAR             reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    VAL             reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    ENTERO          reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    DECIMAL         reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    CADENA_DE_CARACTERES reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    DOUBLE          reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    MAPOF           reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    TRUE            reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    FALSE           reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    LISTOF          reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    SETOF           reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    $end            reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    DLLAVE          reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    RETURN          reduce using rule 89 (funMap -> ID PUNTO KEYS .)
    DPAR            reduce using rule 89 (funMap -> ID PUNTO KEYS .)


state 108

    (90) funMap -> ID PUNTO VALUES .

    ID              reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    PRINT           reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    PRINTLN         reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    READLINE        reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    NEGATION        reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    FUN             reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    IF              reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    FOR             reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    WHILE           reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    VAR             reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    VAL             reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    ENTERO          reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    DECIMAL         reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    CADENA_DE_CARACTERES reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    DOUBLE          reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    MAPOF           reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    TRUE            reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    FALSE           reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    LISTOF          reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    SETOF           reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    $end            reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    DLLAVE          reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    RETURN          reduce using rule 90 (funMap -> ID PUNTO VALUES .)
    DPAR            reduce using rule 90 (funMap -> ID PUNTO VALUES .)


state 109

    (87) getMap -> ID PUNTO GET . IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 173


state 110

    (27) valorInDecAsignacion -> ID incDecAsignaacion ENTERO .

    ID              reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    PRINT           reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    PRINTLN         reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    READLINE        reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    NEGATION        reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    FUN             reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    IF              reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    FOR             reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    WHILE           reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    VAR             reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    VAL             reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    ENTERO          reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    DECIMAL         reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    DOUBLE          reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    MAPOF           reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    TRUE            reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    FALSE           reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    LISTOF          reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    SETOF           reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    $end            reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    DLLAVE          reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)
    RETURN          reduce using rule 27 (valorInDecAsignacion -> ID incDecAsignaacion ENTERO .)


state 111

    (81) indexCol -> ID ICOR ID . DCOR

    DCOR            shift and go to state 174


state 112

    (80) indexCol -> ID ICOR ENTERO . DCOR

    DCOR            shift and go to state 175


state 113

    (130) expresion -> valor operadorMat expresion .

    ID              reduce using rule 130 (expresion -> valor operadorMat expresion .)
    PRINT           reduce using rule 130 (expresion -> valor operadorMat expresion .)
    PRINTLN         reduce using rule 130 (expresion -> valor operadorMat expresion .)
    READLINE        reduce using rule 130 (expresion -> valor operadorMat expresion .)
    NEGATION        reduce using rule 130 (expresion -> valor operadorMat expresion .)
    FUN             reduce using rule 130 (expresion -> valor operadorMat expresion .)
    IF              reduce using rule 130 (expresion -> valor operadorMat expresion .)
    FOR             reduce using rule 130 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 130 (expresion -> valor operadorMat expresion .)
    VAR             reduce using rule 130 (expresion -> valor operadorMat expresion .)
    VAL             reduce using rule 130 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 130 (expresion -> valor operadorMat expresion .)
    DECIMAL         reduce using rule 130 (expresion -> valor operadorMat expresion .)
    CADENA_DE_CARACTERES reduce using rule 130 (expresion -> valor operadorMat expresion .)
    DOUBLE          reduce using rule 130 (expresion -> valor operadorMat expresion .)
    MAPOF           reduce using rule 130 (expresion -> valor operadorMat expresion .)
    TRUE            reduce using rule 130 (expresion -> valor operadorMat expresion .)
    FALSE           reduce using rule 130 (expresion -> valor operadorMat expresion .)
    LISTOF          reduce using rule 130 (expresion -> valor operadorMat expresion .)
    SETOF           reduce using rule 130 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 130 (expresion -> valor operadorMat expresion .)
    DLLAVE          reduce using rule 130 (expresion -> valor operadorMat expresion .)
    RETURN          reduce using rule 130 (expresion -> valor operadorMat expresion .)
    DPAR            reduce using rule 130 (expresion -> valor operadorMat expresion .)
    ELSE            reduce using rule 130 (expresion -> valor operadorMat expresion .)


state 114

    (132) expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .

    ID              reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    PRINT           reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    PRINTLN         reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    READLINE        reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    NEGATION        reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    FUN             reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    IF              reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    FOR             reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    WHILE           reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    VAR             reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    VAL             reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    ENTERO          reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DECIMAL         reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    CADENA_DE_CARACTERES reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DOUBLE          reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    MAPOF           reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    TRUE            reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    FALSE           reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    LISTOF          reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    SETOF           reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    $end            reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DLLAVE          reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    RETURN          reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    DPAR            reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)
    ELSE            reduce using rule 132 (expresionRelacional -> elementoRelacional operadorRelacional elementoRelacional .)


state 115

    (133) elementoRelacional -> ENTERO .

    ID              reduce using rule 133 (elementoRelacional -> ENTERO .)
    PRINT           reduce using rule 133 (elementoRelacional -> ENTERO .)
    PRINTLN         reduce using rule 133 (elementoRelacional -> ENTERO .)
    READLINE        reduce using rule 133 (elementoRelacional -> ENTERO .)
    NEGATION        reduce using rule 133 (elementoRelacional -> ENTERO .)
    FUN             reduce using rule 133 (elementoRelacional -> ENTERO .)
    IF              reduce using rule 133 (elementoRelacional -> ENTERO .)
    FOR             reduce using rule 133 (elementoRelacional -> ENTERO .)
    WHILE           reduce using rule 133 (elementoRelacional -> ENTERO .)
    VAR             reduce using rule 133 (elementoRelacional -> ENTERO .)
    VAL             reduce using rule 133 (elementoRelacional -> ENTERO .)
    ENTERO          reduce using rule 133 (elementoRelacional -> ENTERO .)
    DECIMAL         reduce using rule 133 (elementoRelacional -> ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 133 (elementoRelacional -> ENTERO .)
    DOUBLE          reduce using rule 133 (elementoRelacional -> ENTERO .)
    MAPOF           reduce using rule 133 (elementoRelacional -> ENTERO .)
    TRUE            reduce using rule 133 (elementoRelacional -> ENTERO .)
    FALSE           reduce using rule 133 (elementoRelacional -> ENTERO .)
    LISTOF          reduce using rule 133 (elementoRelacional -> ENTERO .)
    SETOF           reduce using rule 133 (elementoRelacional -> ENTERO .)
    $end            reduce using rule 133 (elementoRelacional -> ENTERO .)
    DLLAVE          reduce using rule 133 (elementoRelacional -> ENTERO .)
    RETURN          reduce using rule 133 (elementoRelacional -> ENTERO .)
    DPAR            reduce using rule 133 (elementoRelacional -> ENTERO .)
    ELSE            reduce using rule 133 (elementoRelacional -> ENTERO .)
    EQUAL           reduce using rule 133 (elementoRelacional -> ENTERO .)
    NOTEQ           reduce using rule 133 (elementoRelacional -> ENTERO .)
    LARGE           reduce using rule 133 (elementoRelacional -> ENTERO .)
    SMALL           reduce using rule 133 (elementoRelacional -> ENTERO .)
    LRGEQ           reduce using rule 133 (elementoRelacional -> ENTERO .)
    SMLEQ           reduce using rule 133 (elementoRelacional -> ENTERO .)


state 116

    (135) elementoRelacional -> ID .

    ID              reduce using rule 135 (elementoRelacional -> ID .)
    PRINT           reduce using rule 135 (elementoRelacional -> ID .)
    PRINTLN         reduce using rule 135 (elementoRelacional -> ID .)
    READLINE        reduce using rule 135 (elementoRelacional -> ID .)
    NEGATION        reduce using rule 135 (elementoRelacional -> ID .)
    FUN             reduce using rule 135 (elementoRelacional -> ID .)
    IF              reduce using rule 135 (elementoRelacional -> ID .)
    FOR             reduce using rule 135 (elementoRelacional -> ID .)
    WHILE           reduce using rule 135 (elementoRelacional -> ID .)
    VAR             reduce using rule 135 (elementoRelacional -> ID .)
    VAL             reduce using rule 135 (elementoRelacional -> ID .)
    ENTERO          reduce using rule 135 (elementoRelacional -> ID .)
    DECIMAL         reduce using rule 135 (elementoRelacional -> ID .)
    CADENA_DE_CARACTERES reduce using rule 135 (elementoRelacional -> ID .)
    DOUBLE          reduce using rule 135 (elementoRelacional -> ID .)
    MAPOF           reduce using rule 135 (elementoRelacional -> ID .)
    TRUE            reduce using rule 135 (elementoRelacional -> ID .)
    FALSE           reduce using rule 135 (elementoRelacional -> ID .)
    LISTOF          reduce using rule 135 (elementoRelacional -> ID .)
    SETOF           reduce using rule 135 (elementoRelacional -> ID .)
    $end            reduce using rule 135 (elementoRelacional -> ID .)
    DLLAVE          reduce using rule 135 (elementoRelacional -> ID .)
    RETURN          reduce using rule 135 (elementoRelacional -> ID .)
    DPAR            reduce using rule 135 (elementoRelacional -> ID .)
    ELSE            reduce using rule 135 (elementoRelacional -> ID .)


state 117

    (136) elementoRelacional -> valorBoolean .

    ID              reduce using rule 136 (elementoRelacional -> valorBoolean .)
    PRINT           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    PRINTLN         reduce using rule 136 (elementoRelacional -> valorBoolean .)
    READLINE        reduce using rule 136 (elementoRelacional -> valorBoolean .)
    NEGATION        reduce using rule 136 (elementoRelacional -> valorBoolean .)
    FUN             reduce using rule 136 (elementoRelacional -> valorBoolean .)
    IF              reduce using rule 136 (elementoRelacional -> valorBoolean .)
    FOR             reduce using rule 136 (elementoRelacional -> valorBoolean .)
    WHILE           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    VAR             reduce using rule 136 (elementoRelacional -> valorBoolean .)
    VAL             reduce using rule 136 (elementoRelacional -> valorBoolean .)
    ENTERO          reduce using rule 136 (elementoRelacional -> valorBoolean .)
    DECIMAL         reduce using rule 136 (elementoRelacional -> valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 136 (elementoRelacional -> valorBoolean .)
    DOUBLE          reduce using rule 136 (elementoRelacional -> valorBoolean .)
    MAPOF           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    TRUE            reduce using rule 136 (elementoRelacional -> valorBoolean .)
    FALSE           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LISTOF          reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SETOF           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    $end            reduce using rule 136 (elementoRelacional -> valorBoolean .)
    DLLAVE          reduce using rule 136 (elementoRelacional -> valorBoolean .)
    RETURN          reduce using rule 136 (elementoRelacional -> valorBoolean .)
    DPAR            reduce using rule 136 (elementoRelacional -> valorBoolean .)
    ELSE            reduce using rule 136 (elementoRelacional -> valorBoolean .)


state 118

    (61) imprimir -> PRINT IPAR elementosPrint . DPAR

    DPAR            shift and go to state 176


state 119

    (63) elementosPrint -> funColecciones .

    DPAR            reduce using rule 63 (elementosPrint -> funColecciones .)


state 120

    (64) elementosPrint -> coleccion .
    (84) size -> coleccion . PUNTO SIZE
    (86) isEmpty -> coleccion . PUNTO ISEMPTY IPAR DPAR

    DPAR            reduce using rule 64 (elementosPrint -> coleccion .)
    PUNTO           shift and go to state 94


state 121

    (65) elementosPrint -> expresion .

    DPAR            reduce using rule 65 (elementosPrint -> expresion .)


state 122

    (66) elementosPrint -> valorBoolean .
    (147) boolID -> valorBoolean .
    (136) elementoRelacional -> valorBoolean .

    DPAR            reduce using rule 66 (elementosPrint -> valorBoolean .)
    AND             reduce using rule 147 (boolID -> valorBoolean .)
    OR              reduce using rule 147 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)


state 123

    (67) elementosPrint -> expLogicas .

    DPAR            reduce using rule 67 (elementosPrint -> expLogicas .)


state 124

    (68) elementosPrint -> expresionRelacional .

    DPAR            reduce using rule 68 (elementosPrint -> expresionRelacional .)


state 125

    (69) elementosPrint -> imprimirColecciones .

    DPAR            reduce using rule 69 (elementosPrint -> imprimirColecciones .)


state 126

    (125) coleccion -> LISTOF . IPAR listElementos DPAR
    (72) imprimirColecciones -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 177


state 127

    (126) coleccion -> SETOF . IPAR listElementos DPAR
    (73) imprimirColecciones -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 178


state 128

    (127) coleccion -> MAPOF . IPAR mapsElemento DPAR
    (71) imprimirColecciones -> MAPOF . IPAR mapsElemento DPAR
    (91) funMap -> MAPOF . IPAR mapsElemento DPAR PUNTO VALUES
    (88) getMap -> MAPOF . IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 179


state 129

    (129) expresion -> ID .
    (131) expresion -> ID . operadorMat expresion
    (80) indexCol -> ID . ICOR ENTERO DCOR
    (81) indexCol -> ID . ICOR ID DCOR
    (82) slice -> ID . PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> ID . PUNTO SIZE
    (85) isEmpty -> ID . PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> ID . PUNTO KEYS
    (90) funMap -> ID . PUNTO VALUES
    (87) getMap -> ID . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> ID .
    (135) elementoRelacional -> ID .
    (137) operadorMat -> . PLUS
    (138) operadorMat -> . MINUS
    (139) operadorMat -> . TIMES
    (140) operadorMat -> . DIVIDE

    DPAR            reduce using rule 129 (expresion -> ID .)
    ICOR            shift and go to state 60
    PUNTO           shift and go to state 180
    AND             reduce using rule 146 (boolID -> ID .)
    OR              reduce using rule 146 (boolID -> ID .)
    EQUAL           reduce using rule 135 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 135 (elementoRelacional -> ID .)
    LARGE           reduce using rule 135 (elementoRelacional -> ID .)
    SMALL           reduce using rule 135 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 135 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 135 (elementoRelacional -> ID .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 64

    operadorMat                    shift and go to state 56

state 130

    (70) imprimirColecciones -> PAIR . IPAR tuplaElemento COMA tuplaElemento DPAR

    IPAR            shift and go to state 181


state 131

    (62) imprimir -> PRINTLN IPAR elementosPrint . DPAR

    DPAR            shift and go to state 182


state 132

    (115) readline -> READLINE IPAR DPAR .

    ID              reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    PRINT           reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    PRINTLN         reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    READLINE        reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    NEGATION        reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    FUN             reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    IF              reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    FOR             reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    WHILE           reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    VAR             reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    VAL             reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    ENTERO          reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    DECIMAL         reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    DOUBLE          reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    MAPOF           reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    TRUE            reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    FALSE           reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    LISTOF          reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    SETOF           reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    $end            reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    DLLAVE          reduce using rule 115 (readline -> READLINE IPAR DPAR .)
    RETURN          reduce using rule 115 (readline -> READLINE IPAR DPAR .)


state 133

    (111) listElementos -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 183


state 134

    (125) coleccion -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 184


state 135

    (103) listElementos -> valor .
    (109) listElementos -> valor . COMA listElementos

    DPAR            reduce using rule 103 (listElementos -> valor .)
    COMA            shift and go to state 185


state 136

    (104) listElementos -> ID .
    (110) listElementos -> ID . COMA listElementos
    (135) elementoRelacional -> ID .
    (146) boolID -> ID .

    DPAR            reduce using rule 104 (listElementos -> ID .)
    COMA            shift and go to state 186
    EQUAL           reduce using rule 135 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 135 (elementoRelacional -> ID .)
    LARGE           reduce using rule 135 (elementoRelacional -> ID .)
    SMALL           reduce using rule 135 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 135 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 135 (elementoRelacional -> ID .)
    AND             reduce using rule 146 (boolID -> ID .)
    OR              reduce using rule 146 (boolID -> ID .)


state 137

    (105) listElementos -> valorBoolean .
    (108) listElementos -> valorBoolean . COMA listElementos
    (136) elementoRelacional -> valorBoolean .
    (147) boolID -> valorBoolean .

    DPAR            reduce using rule 105 (listElementos -> valorBoolean .)
    COMA            shift and go to state 187
    EQUAL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    AND             reduce using rule 147 (boolID -> valorBoolean .)
    OR              reduce using rule 147 (boolID -> valorBoolean .)


state 138

    (106) listElementos -> expresionRelacional .

    DPAR            reduce using rule 106 (listElementos -> expresionRelacional .)


state 139

    (107) listElementos -> expLogicas .

    DPAR            reduce using rule 107 (listElementos -> expLogicas .)


state 140

    (112) listElementos -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 188


state 141

    (126) coleccion -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 189


state 142

    (91) funMap -> MAPOF IPAR mapsElemento . DPAR PUNTO VALUES
    (88) getMap -> MAPOF IPAR mapsElemento . DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (127) coleccion -> MAPOF IPAR mapsElemento . DPAR

    DPAR            shift and go to state 190


state 143

    (93) mapsElemento -> CADENA_DE_CARACTERES . TO tuplaElemento
    (94) mapsElemento -> CADENA_DE_CARACTERES . TO tuplaElemento COMA mapsElemento

    TO              shift and go to state 191


state 144

    (144) expLogicas -> boolID opLogico boolID .

    ID              reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    PRINT           reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    PRINTLN         reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    READLINE        reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    NEGATION        reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    FUN             reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    IF              reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    FOR             reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    WHILE           reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    VAR             reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    VAL             reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    ENTERO          reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    DECIMAL         reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    CADENA_DE_CARACTERES reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    DOUBLE          reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    MAPOF           reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    TRUE            reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    FALSE           reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    LISTOF          reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    SETOF           reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    $end            reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    DLLAVE          reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    RETURN          reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    DPAR            reduce using rule 144 (expLogicas -> boolID opLogico boolID .)
    ELSE            reduce using rule 144 (expLogicas -> boolID opLogico boolID .)


state 145

    (21) fun -> FUN ID IPAR . DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> FUN ID IPAR . entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> FUN ID IPAR . DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> FUN ID IPAR . entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> FUN ID IPAR . entrada_fun DPAR EQUALS return
    (50) entrada_fun -> . ID DOSPUNTOS tipos
    (51) entrada_fun -> . ID DOSPUNTOS tipos COMA entrada_fun

    DPAR            shift and go to state 193
    ID              shift and go to state 192

    entrada_fun                    shift and go to state 194

state 146

    (37) if -> IF IPAR entradaIf . DPAR ILLAVE algoritmo DLLAVE
    (38) if -> IF IPAR entradaIf . DPAR return
    (39) if -> IF IPAR entradaIf . DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> IF IPAR entradaIf . DPAR return else

    DPAR            shift and go to state 195


state 147

    (43) entradaIf -> valorBoolean .
    (147) boolID -> valorBoolean .
    (136) elementoRelacional -> valorBoolean .

    DPAR            reduce using rule 43 (entradaIf -> valorBoolean .)
    AND             reduce using rule 147 (boolID -> valorBoolean .)
    OR              reduce using rule 147 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)


state 148

    (44) entradaIf -> expLogicas .

    DPAR            reduce using rule 44 (entradaIf -> expLogicas .)


state 149

    (45) entradaIf -> expresionRelacional .

    DPAR            reduce using rule 45 (entradaIf -> expresionRelacional .)


state 150

    (146) boolID -> ID .
    (135) elementoRelacional -> ID .

    AND             reduce using rule 146 (boolID -> ID .)
    OR              reduce using rule 146 (boolID -> ID .)
    EQUAL           reduce using rule 135 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 135 (elementoRelacional -> ID .)
    LARGE           reduce using rule 135 (elementoRelacional -> ID .)
    SMALL           reduce using rule 135 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 135 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 135 (elementoRelacional -> ID .)


state 151

    (33) for -> FOR condicionFor ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (18) cuerpo -> . while
    (19) cuerpo -> . valorIncDec
    (20) cuerpo -> . valorInDecAsignacion
    (56) iniVariable -> . variable ID tipoDeDato
    (57) iniVariable -> . variable ID EQUALS valor
    (58) iniVariable -> . variable ID EQUALS valorBoolean
    (59) iniVariable -> . variable ID EQUALS expLogicas
    (60) iniVariable -> . variable ID EQUALS expresionRelacional
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (61) imprimir -> . PRINT IPAR elementosPrint DPAR
    (62) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (115) readline -> . READLINE IPAR DPAR
    (116) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (117) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (102) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (21) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (37) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> . IF IPAR entradaIf DPAR return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> . IF IPAR entradaIf DPAR return else
    (33) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (26) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) valorIncDec -> . ID incrementoDec
    (27) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (113) variable -> . VAR
    (114) variable -> . VAL
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 26
    PRINTLN         shift and go to state 27
    READLINE        shift and go to state 28
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 196
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    valorIncDec                    shift and go to state 19
    valorInDecAsignacion           shift and go to state 20
    variable                       shift and go to state 21
    valor                          shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 25
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 152

    (34) condicionFor -> IPAR ID . IN ID DPAR
    (35) condicionFor -> IPAR ID . IN ENTERO PUNTO PUNTO ENTERO DPAR
    (36) condicionFor -> IPAR ID . IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    IN              shift and go to state 197


state 153

    (26) while -> WHILE IPAR entradaIf . DPAR ILLAVE algoritmo DLLAVE

    DPAR            shift and go to state 198


state 154

    (84) size -> coleccion PUNTO SIZE .

    ID              reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    PRINT           reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    PRINTLN         reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    READLINE        reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    NEGATION        reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    FUN             reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    IF              reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    FOR             reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    WHILE           reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    VAR             reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    VAL             reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    ENTERO          reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    DECIMAL         reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    CADENA_DE_CARACTERES reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    DOUBLE          reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    MAPOF           reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    TRUE            reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    FALSE           reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    LISTOF          reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    SETOF           reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    $end            reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    DLLAVE          reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    RETURN          reduce using rule 84 (size -> coleccion PUNTO SIZE .)
    DPAR            reduce using rule 84 (size -> coleccion PUNTO SIZE .)


state 155

    (86) isEmpty -> coleccion PUNTO ISEMPTY . IPAR DPAR

    IPAR            shift and go to state 199


state 156

    (57) iniVariable -> variable ID EQUALS valor .

    ID              reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    PRINT           reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    PRINTLN         reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    READLINE        reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    NEGATION        reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    FUN             reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    IF              reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    FOR             reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    WHILE           reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    VAR             reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    VAL             reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    ENTERO          reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    DECIMAL         reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    CADENA_DE_CARACTERES reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    DOUBLE          reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    MAPOF           reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    TRUE            reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    FALSE           reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    LISTOF          reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    SETOF           reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    $end            reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    DLLAVE          reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)
    RETURN          reduce using rule 57 (iniVariable -> variable ID EQUALS valor .)


state 157

    (58) iniVariable -> variable ID EQUALS valorBoolean .
    (147) boolID -> valorBoolean .
    (136) elementoRelacional -> valorBoolean .

    ID              reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    PRINT           reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    PRINTLN         reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    READLINE        reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    NEGATION        reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    FUN             reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    IF              reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    FOR             reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    WHILE           reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    VAR             reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    VAL             reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    ENTERO          reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    DECIMAL         reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    DOUBLE          reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    MAPOF           reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    TRUE            reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    FALSE           reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    LISTOF          reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    SETOF           reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    $end            reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    DLLAVE          reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    RETURN          reduce using rule 58 (iniVariable -> variable ID EQUALS valorBoolean .)
    AND             reduce using rule 147 (boolID -> valorBoolean .)
    OR              reduce using rule 147 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)


state 158

    (59) iniVariable -> variable ID EQUALS expLogicas .

    ID              reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    PRINT           reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    PRINTLN         reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    READLINE        reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    NEGATION        reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    FUN             reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    IF              reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    FOR             reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    WHILE           reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    VAR             reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    VAL             reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    ENTERO          reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    DECIMAL         reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    DOUBLE          reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    MAPOF           reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    TRUE            reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    FALSE           reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    LISTOF          reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    SETOF           reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    $end            reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    DLLAVE          reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)
    RETURN          reduce using rule 59 (iniVariable -> variable ID EQUALS expLogicas .)


state 159

    (60) iniVariable -> variable ID EQUALS expresionRelacional .

    ID              reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    PRINT           reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    PRINTLN         reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    READLINE        reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    NEGATION        reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    FUN             reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    IF              reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    FOR             reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    WHILE           reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    VAR             reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    VAL             reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    ENTERO          reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    DECIMAL         reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    DOUBLE          reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    MAPOF           reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    TRUE            reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    FALSE           reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    LISTOF          reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    SETOF           reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    $end            reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    DLLAVE          reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)
    RETURN          reduce using rule 60 (iniVariable -> variable ID EQUALS expresionRelacional .)


state 160

    (116) readline -> variable ID EQUALS READLINE . IPAR DPAR

    IPAR            shift and go to state 200


state 161

    (102) list -> variable ID EQUALS LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 201


state 162

    (101) conjuntos -> variable ID EQUALS SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 202


state 163

    (92) maps -> variable ID EQUALS MAPOF . IPAR mapsElemento DPAR

    IPAR            shift and go to state 203


state 164

    (119) tipoDeDato -> DOSPUNTOS INT . EQUALS ENTERO

    EQUALS          shift and go to state 204


state 165

    (120) tipoDeDato -> DOSPUNTOS DOUBLE . EQUALS DECIMAL

    EQUALS          shift and go to state 205


state 166

    (121) tipoDeDato -> DOSPUNTOS STRING . EQUALS CADENA_DE_CARACTERES

    EQUALS          shift and go to state 206


state 167

    (122) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS valorBoolean
    (123) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS expLogicas
    (124) tipoDeDato -> DOSPUNTOS BOOLEAN . EQUALS expresionRelacional

    EQUALS          shift and go to state 207


state 168

    (95) tupla -> variable IPAR ID COMA . ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    ID              shift and go to state 208


state 169

    (117) firstAndCap -> ID PUNTO FIRST IPAR . DPAR

    DPAR            shift and go to state 209


state 170

    (118) firstAndCap -> ID PUNTO CAPITALIZE IPAR . DPAR

    DPAR            shift and go to state 210


state 171

    (82) slice -> ID PUNTO SLICE IPAR . ENTERO PUNTO PUNTO ENTERO DPAR

    ENTERO          shift and go to state 211


state 172

    (85) isEmpty -> ID PUNTO ISEMPTY IPAR . DPAR

    DPAR            shift and go to state 212


state 173

    (87) getMap -> ID PUNTO GET IPAR . CADENA_DE_CARACTERES DPAR

    CADENA_DE_CARACTERES shift and go to state 213


state 174

    (81) indexCol -> ID ICOR ID DCOR .

    ID              reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    PRINT           reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    PRINTLN         reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    READLINE        reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    NEGATION        reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    FUN             reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    IF              reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    FOR             reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    WHILE           reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    VAR             reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    VAL             reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    ENTERO          reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    DECIMAL         reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    CADENA_DE_CARACTERES reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    DOUBLE          reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    MAPOF           reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    TRUE            reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    FALSE           reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    LISTOF          reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    SETOF           reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    $end            reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    DLLAVE          reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    RETURN          reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)
    DPAR            reduce using rule 81 (indexCol -> ID ICOR ID DCOR .)


state 175

    (80) indexCol -> ID ICOR ENTERO DCOR .

    ID              reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    PRINT           reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    PRINTLN         reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    READLINE        reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    NEGATION        reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    FUN             reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    IF              reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    FOR             reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    WHILE           reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    VAR             reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    VAL             reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    ENTERO          reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    DECIMAL         reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    CADENA_DE_CARACTERES reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    DOUBLE          reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    MAPOF           reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    TRUE            reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    FALSE           reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    LISTOF          reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    SETOF           reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    $end            reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    DLLAVE          reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    RETURN          reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)
    DPAR            reduce using rule 80 (indexCol -> ID ICOR ENTERO DCOR .)


state 176

    (61) imprimir -> PRINT IPAR elementosPrint DPAR .

    ID              reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    PRINT           reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    PRINTLN         reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    READLINE        reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    NEGATION        reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    FUN             reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    IF              reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    FOR             reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    WHILE           reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    VAR             reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    VAL             reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    ENTERO          reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    DECIMAL         reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    CADENA_DE_CARACTERES reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    DOUBLE          reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    MAPOF           reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    TRUE            reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    FALSE           reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    LISTOF          reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    SETOF           reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    $end            reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    DLLAVE          reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)
    RETURN          reduce using rule 61 (imprimir -> PRINT IPAR elementosPrint DPAR .)


state 177

    (125) coleccion -> LISTOF IPAR . listElementos DPAR
    (72) imprimirColecciones -> LISTOF IPAR . listElementos DPAR
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 214
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 178

    (126) coleccion -> SETOF IPAR . listElementos DPAR
    (73) imprimirColecciones -> SETOF IPAR . listElementos DPAR
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 215
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 179

    (127) coleccion -> MAPOF IPAR . mapsElemento DPAR
    (71) imprimirColecciones -> MAPOF IPAR . mapsElemento DPAR
    (91) funMap -> MAPOF IPAR . mapsElemento DPAR PUNTO VALUES
    (88) getMap -> MAPOF IPAR . mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (93) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (94) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 143

    mapsElemento                   shift and go to state 216

state 180

    (82) slice -> ID PUNTO . SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> ID PUNTO . SIZE
    (85) isEmpty -> ID PUNTO . ISEMPTY IPAR DPAR
    (89) funMap -> ID PUNTO . KEYS
    (90) funMap -> ID PUNTO . VALUES
    (87) getMap -> ID PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    SLICE           shift and go to state 104
    SIZE            shift and go to state 105
    ISEMPTY         shift and go to state 106
    KEYS            shift and go to state 107
    VALUES          shift and go to state 108
    GET             shift and go to state 109


state 181

    (70) imprimirColecciones -> PAIR IPAR . tuplaElemento COMA tuplaElemento DPAR
    (96) tuplaElemento -> . valor
    (97) tuplaElemento -> . ID
    (98) tuplaElemento -> . valorBoolean
    (99) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (100) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE

    ID              shift and go to state 219
    LISTOF          shift and go to state 221
    SETOF           shift and go to state 222
    ENTERO          shift and go to state 101
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    tuplaElemento                  shift and go to state 217
    valor                          shift and go to state 218
    valorBoolean                   shift and go to state 220

state 182

    (62) imprimir -> PRINTLN IPAR elementosPrint DPAR .

    ID              reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    PRINT           reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    PRINTLN         reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    READLINE        reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    NEGATION        reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    FUN             reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    IF              reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    FOR             reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    WHILE           reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    VAR             reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    VAL             reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    ENTERO          reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    DECIMAL         reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    CADENA_DE_CARACTERES reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    DOUBLE          reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    MAPOF           reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    TRUE            reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    FALSE           reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    LISTOF          reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    SETOF           reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    $end            reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    DLLAVE          reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)
    RETURN          reduce using rule 62 (imprimir -> PRINTLN IPAR elementosPrint DPAR .)


state 183

    (111) listElementos -> LISTOF IPAR . listElementos DPAR
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 223
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 184

    (125) coleccion -> LISTOF IPAR listElementos DPAR .

    PUNTO           reduce using rule 125 (coleccion -> LISTOF IPAR listElementos DPAR .)


state 185

    (109) listElementos -> valor COMA . listElementos
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    valor                          shift and go to state 135
    listElementos                  shift and go to state 224
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 186

    (110) listElementos -> ID COMA . listElementos
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 225
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 187

    (108) listElementos -> valorBoolean COMA . listElementos
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    valorBoolean                   shift and go to state 137
    listElementos                  shift and go to state 226
    valor                          shift and go to state 135
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 188

    (112) listElementos -> SETOF IPAR . listElementos DPAR
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 227
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 189

    (126) coleccion -> SETOF IPAR listElementos DPAR .

    PUNTO           reduce using rule 126 (coleccion -> SETOF IPAR listElementos DPAR .)


state 190

    (91) funMap -> MAPOF IPAR mapsElemento DPAR . PUNTO VALUES
    (88) getMap -> MAPOF IPAR mapsElemento DPAR . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (127) coleccion -> MAPOF IPAR mapsElemento DPAR .

  ! shift/reduce conflict for PUNTO resolved as shift
    PUNTO           shift and go to state 228

  ! PUNTO           [ reduce using rule 127 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]


state 191

    (93) mapsElemento -> CADENA_DE_CARACTERES TO . tuplaElemento
    (94) mapsElemento -> CADENA_DE_CARACTERES TO . tuplaElemento COMA mapsElemento
    (96) tuplaElemento -> . valor
    (97) tuplaElemento -> . ID
    (98) tuplaElemento -> . valorBoolean
    (99) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (100) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE

    ID              shift and go to state 219
    LISTOF          shift and go to state 221
    SETOF           shift and go to state 222
    ENTERO          shift and go to state 101
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    tuplaElemento                  shift and go to state 229
    valor                          shift and go to state 218
    valorBoolean                   shift and go to state 220

state 192

    (50) entrada_fun -> ID . DOSPUNTOS tipos
    (51) entrada_fun -> ID . DOSPUNTOS tipos COMA entrada_fun

    DOSPUNTOS       shift and go to state 230


state 193

    (21) fun -> FUN ID IPAR DPAR . ILLAVE algoritmo DLLAVE
    (23) fun -> FUN ID IPAR DPAR . DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE

    ILLAVE          shift and go to state 231
    DOSPUNTOS       shift and go to state 232


state 194

    (22) fun -> FUN ID IPAR entrada_fun . DPAR ILLAVE algoritmo DLLAVE
    (24) fun -> FUN ID IPAR entrada_fun . DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> FUN ID IPAR entrada_fun . DPAR EQUALS return

    DPAR            shift and go to state 233


state 195

    (37) if -> IF IPAR entradaIf DPAR . ILLAVE algoritmo DLLAVE
    (38) if -> IF IPAR entradaIf DPAR . return
    (39) if -> IF IPAR entradaIf DPAR . ILLAVE algoritmo DLLAVE else
    (40) if -> IF IPAR entradaIf DPAR . return else
    (46) return -> . expLogicas
    (47) return -> . expresion
    (48) return -> . valorBoolean
    (49) return -> . expresionRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    ILLAVE          shift and go to state 234
    NEGATION        shift and go to state 39
    ID              shift and go to state 240
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49

    return                         shift and go to state 235
    expLogicas                     shift and go to state 236
    expresion                      shift and go to state 237
    valorBoolean                   shift and go to state 238
    expresionRelacional            shift and go to state 239
    boolID                         shift and go to state 38
    valor                          shift and go to state 23
    elementoRelacional             shift and go to state 25

state 196

    (33) for -> FOR condicionFor ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 241


state 197

    (34) condicionFor -> IPAR ID IN . ID DPAR
    (35) condicionFor -> IPAR ID IN . ENTERO PUNTO PUNTO ENTERO DPAR
    (36) condicionFor -> IPAR ID IN . ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR

    ID              shift and go to state 242
    ENTERO          shift and go to state 243


state 198

    (26) while -> WHILE IPAR entradaIf DPAR . ILLAVE algoritmo DLLAVE

    ILLAVE          shift and go to state 244


state 199

    (86) isEmpty -> coleccion PUNTO ISEMPTY IPAR . DPAR

    DPAR            shift and go to state 245


state 200

    (116) readline -> variable ID EQUALS READLINE IPAR . DPAR

    DPAR            shift and go to state 246


state 201

    (102) list -> variable ID EQUALS LISTOF IPAR . listElementos DPAR
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 247
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 202

    (101) conjuntos -> variable ID EQUALS SETOF IPAR . listElementos DPAR
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 248
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 203

    (92) maps -> variable ID EQUALS MAPOF IPAR . mapsElemento DPAR
    (93) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (94) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 143

    mapsElemento                   shift and go to state 249

state 204

    (119) tipoDeDato -> DOSPUNTOS INT EQUALS . ENTERO

    ENTERO          shift and go to state 250


state 205

    (120) tipoDeDato -> DOSPUNTOS DOUBLE EQUALS . DECIMAL

    DECIMAL         shift and go to state 251


state 206

    (121) tipoDeDato -> DOSPUNTOS STRING EQUALS . CADENA_DE_CARACTERES

    CADENA_DE_CARACTERES shift and go to state 252


state 207

    (122) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . valorBoolean
    (123) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . expLogicas
    (124) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS . expresionRelacional
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    ID              shift and go to state 150
    ENTERO          shift and go to state 115
    DOUBLE          shift and go to state 49

    valorBoolean                   shift and go to state 253
    expLogicas                     shift and go to state 254
    expresionRelacional            shift and go to state 255
    boolID                         shift and go to state 38
    elementoRelacional             shift and go to state 25

state 208

    (95) tupla -> variable IPAR ID COMA ID . DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    DPAR            shift and go to state 256


state 209

    (117) firstAndCap -> ID PUNTO FIRST IPAR DPAR .

    ID              reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    PRINT           reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    PRINTLN         reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    READLINE        reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    NEGATION        reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    FUN             reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    IF              reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    FOR             reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    WHILE           reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    VAR             reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    VAL             reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    ENTERO          reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    DECIMAL         reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    DOUBLE          reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    MAPOF           reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    TRUE            reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    FALSE           reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    LISTOF          reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    SETOF           reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    $end            reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    DLLAVE          reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)
    RETURN          reduce using rule 117 (firstAndCap -> ID PUNTO FIRST IPAR DPAR .)


state 210

    (118) firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .

    ID              reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    PRINT           reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    PRINTLN         reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    READLINE        reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    NEGATION        reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    FUN             reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    IF              reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    FOR             reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    WHILE           reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    VAR             reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    VAL             reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    ENTERO          reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    DECIMAL         reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    DOUBLE          reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    MAPOF           reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    TRUE            reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    FALSE           reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    LISTOF          reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    SETOF           reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    $end            reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    DLLAVE          reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)
    RETURN          reduce using rule 118 (firstAndCap -> ID PUNTO CAPITALIZE IPAR DPAR .)


state 211

    (82) slice -> ID PUNTO SLICE IPAR ENTERO . PUNTO PUNTO ENTERO DPAR

    PUNTO           shift and go to state 257


state 212

    (85) isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .

    ID              reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    PRINT           reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    PRINTLN         reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    READLINE        reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    NEGATION        reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    FUN             reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    IF              reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    FOR             reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    WHILE           reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    VAR             reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    VAL             reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    ENTERO          reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DECIMAL         reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DOUBLE          reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    MAPOF           reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    TRUE            reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    FALSE           reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    LISTOF          reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    SETOF           reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    $end            reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DLLAVE          reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    RETURN          reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)
    DPAR            reduce using rule 85 (isEmpty -> ID PUNTO ISEMPTY IPAR DPAR .)


state 213

    (87) getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES . DPAR

    DPAR            shift and go to state 258


state 214

    (125) coleccion -> LISTOF IPAR listElementos . DPAR
    (72) imprimirColecciones -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 259


state 215

    (126) coleccion -> SETOF IPAR listElementos . DPAR
    (73) imprimirColecciones -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 260


state 216

    (127) coleccion -> MAPOF IPAR mapsElemento . DPAR
    (71) imprimirColecciones -> MAPOF IPAR mapsElemento . DPAR
    (91) funMap -> MAPOF IPAR mapsElemento . DPAR PUNTO VALUES
    (88) getMap -> MAPOF IPAR mapsElemento . DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR

    DPAR            shift and go to state 261


state 217

    (70) imprimirColecciones -> PAIR IPAR tuplaElemento . COMA tuplaElemento DPAR

    COMA            shift and go to state 262


state 218

    (96) tuplaElemento -> valor .

    COMA            reduce using rule 96 (tuplaElemento -> valor .)
    DPAR            reduce using rule 96 (tuplaElemento -> valor .)


state 219

    (97) tuplaElemento -> ID .

    COMA            reduce using rule 97 (tuplaElemento -> ID .)
    DPAR            reduce using rule 97 (tuplaElemento -> ID .)


state 220

    (98) tuplaElemento -> valorBoolean .

    COMA            reduce using rule 98 (tuplaElemento -> valorBoolean .)
    DPAR            reduce using rule 98 (tuplaElemento -> valorBoolean .)


state 221

    (99) tuplaElemento -> LISTOF . IPAR listElementos DPAR

    IPAR            shift and go to state 263


state 222

    (100) tuplaElemento -> SETOF . IPAR listElementos DPAR

    IPAR            shift and go to state 264


state 223

    (111) listElementos -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 265


state 224

    (109) listElementos -> valor COMA listElementos .

    DPAR            reduce using rule 109 (listElementos -> valor COMA listElementos .)


state 225

    (110) listElementos -> ID COMA listElementos .

    DPAR            reduce using rule 110 (listElementos -> ID COMA listElementos .)


state 226

    (108) listElementos -> valorBoolean COMA listElementos .

    DPAR            reduce using rule 108 (listElementos -> valorBoolean COMA listElementos .)


state 227

    (112) listElementos -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 266


state 228

    (91) funMap -> MAPOF IPAR mapsElemento DPAR PUNTO . VALUES
    (88) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO . GET IPAR CADENA_DE_CARACTERES DPAR

    VALUES          shift and go to state 267
    GET             shift and go to state 268


state 229

    (93) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento .
    (94) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento . COMA mapsElemento

    DPAR            reduce using rule 93 (mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento .)
    COMA            shift and go to state 269


state 230

    (50) entrada_fun -> ID DOSPUNTOS . tipos
    (51) entrada_fun -> ID DOSPUNTOS . tipos COMA entrada_fun
    (52) tipos -> . INT
    (53) tipos -> . DOUBLE
    (54) tipos -> . BOOLEAN
    (55) tipos -> . STRING

    INT             shift and go to state 271
    DOUBLE          shift and go to state 272
    BOOLEAN         shift and go to state 273
    STRING          shift and go to state 274

    tipos                          shift and go to state 270

state 231

    (21) fun -> FUN ID IPAR DPAR ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (18) cuerpo -> . while
    (19) cuerpo -> . valorIncDec
    (20) cuerpo -> . valorInDecAsignacion
    (56) iniVariable -> . variable ID tipoDeDato
    (57) iniVariable -> . variable ID EQUALS valor
    (58) iniVariable -> . variable ID EQUALS valorBoolean
    (59) iniVariable -> . variable ID EQUALS expLogicas
    (60) iniVariable -> . variable ID EQUALS expresionRelacional
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (61) imprimir -> . PRINT IPAR elementosPrint DPAR
    (62) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (115) readline -> . READLINE IPAR DPAR
    (116) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (117) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (102) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (21) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (37) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> . IF IPAR entradaIf DPAR return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> . IF IPAR entradaIf DPAR return else
    (33) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (26) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) valorIncDec -> . ID incrementoDec
    (27) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (113) variable -> . VAR
    (114) variable -> . VAL
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 26
    PRINTLN         shift and go to state 27
    READLINE        shift and go to state 28
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 275
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    valorIncDec                    shift and go to state 19
    valorInDecAsignacion           shift and go to state 20
    variable                       shift and go to state 21
    valor                          shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 25
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 232

    (23) fun -> FUN ID IPAR DPAR DOSPUNTOS . tipos ILLAVE algoritmo RETURN return DLLAVE
    (52) tipos -> . INT
    (53) tipos -> . DOUBLE
    (54) tipos -> . BOOLEAN
    (55) tipos -> . STRING

    INT             shift and go to state 271
    DOUBLE          shift and go to state 272
    BOOLEAN         shift and go to state 273
    STRING          shift and go to state 274

    tipos                          shift and go to state 276

state 233

    (22) fun -> FUN ID IPAR entrada_fun DPAR . ILLAVE algoritmo DLLAVE
    (24) fun -> FUN ID IPAR entrada_fun DPAR . DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> FUN ID IPAR entrada_fun DPAR . EQUALS return

    ILLAVE          shift and go to state 277
    DOSPUNTOS       shift and go to state 278
    EQUALS          shift and go to state 279


state 234

    (37) if -> IF IPAR entradaIf DPAR ILLAVE . algoritmo DLLAVE
    (39) if -> IF IPAR entradaIf DPAR ILLAVE . algoritmo DLLAVE else
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (18) cuerpo -> . while
    (19) cuerpo -> . valorIncDec
    (20) cuerpo -> . valorInDecAsignacion
    (56) iniVariable -> . variable ID tipoDeDato
    (57) iniVariable -> . variable ID EQUALS valor
    (58) iniVariable -> . variable ID EQUALS valorBoolean
    (59) iniVariable -> . variable ID EQUALS expLogicas
    (60) iniVariable -> . variable ID EQUALS expresionRelacional
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (61) imprimir -> . PRINT IPAR elementosPrint DPAR
    (62) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (115) readline -> . READLINE IPAR DPAR
    (116) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (117) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (102) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (21) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (37) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> . IF IPAR entradaIf DPAR return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> . IF IPAR entradaIf DPAR return else
    (33) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (26) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) valorIncDec -> . ID incrementoDec
    (27) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (113) variable -> . VAR
    (114) variable -> . VAL
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 26
    PRINTLN         shift and go to state 27
    READLINE        shift and go to state 28
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 280
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    valorIncDec                    shift and go to state 19
    valorInDecAsignacion           shift and go to state 20
    variable                       shift and go to state 21
    valor                          shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 25
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 235

    (38) if -> IF IPAR entradaIf DPAR return .
    (40) if -> IF IPAR entradaIf DPAR return . else
    (41) else -> . ELSE ILLAVE algoritmo DLLAVE
    (42) else -> . ELSE return

    ID              reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    PRINT           reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    PRINTLN         reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    READLINE        reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    NEGATION        reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    FUN             reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    IF              reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    FOR             reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    WHILE           reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    VAR             reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    VAL             reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    ENTERO          reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    DECIMAL         reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    CADENA_DE_CARACTERES reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    DOUBLE          reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    MAPOF           reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    TRUE            reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    FALSE           reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    LISTOF          reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    SETOF           reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    $end            reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    DLLAVE          reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    RETURN          reduce using rule 38 (if -> IF IPAR entradaIf DPAR return .)
    ELSE            shift and go to state 282

    else                           shift and go to state 281

state 236

    (46) return -> expLogicas .

    ELSE            reduce using rule 46 (return -> expLogicas .)
    ID              reduce using rule 46 (return -> expLogicas .)
    PRINT           reduce using rule 46 (return -> expLogicas .)
    PRINTLN         reduce using rule 46 (return -> expLogicas .)
    READLINE        reduce using rule 46 (return -> expLogicas .)
    NEGATION        reduce using rule 46 (return -> expLogicas .)
    FUN             reduce using rule 46 (return -> expLogicas .)
    IF              reduce using rule 46 (return -> expLogicas .)
    FOR             reduce using rule 46 (return -> expLogicas .)
    WHILE           reduce using rule 46 (return -> expLogicas .)
    VAR             reduce using rule 46 (return -> expLogicas .)
    VAL             reduce using rule 46 (return -> expLogicas .)
    ENTERO          reduce using rule 46 (return -> expLogicas .)
    DECIMAL         reduce using rule 46 (return -> expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 46 (return -> expLogicas .)
    DOUBLE          reduce using rule 46 (return -> expLogicas .)
    MAPOF           reduce using rule 46 (return -> expLogicas .)
    TRUE            reduce using rule 46 (return -> expLogicas .)
    FALSE           reduce using rule 46 (return -> expLogicas .)
    LISTOF          reduce using rule 46 (return -> expLogicas .)
    SETOF           reduce using rule 46 (return -> expLogicas .)
    $end            reduce using rule 46 (return -> expLogicas .)
    DLLAVE          reduce using rule 46 (return -> expLogicas .)
    RETURN          reduce using rule 46 (return -> expLogicas .)


state 237

    (47) return -> expresion .

    ELSE            reduce using rule 47 (return -> expresion .)
    ID              reduce using rule 47 (return -> expresion .)
    PRINT           reduce using rule 47 (return -> expresion .)
    PRINTLN         reduce using rule 47 (return -> expresion .)
    READLINE        reduce using rule 47 (return -> expresion .)
    NEGATION        reduce using rule 47 (return -> expresion .)
    FUN             reduce using rule 47 (return -> expresion .)
    IF              reduce using rule 47 (return -> expresion .)
    FOR             reduce using rule 47 (return -> expresion .)
    WHILE           reduce using rule 47 (return -> expresion .)
    VAR             reduce using rule 47 (return -> expresion .)
    VAL             reduce using rule 47 (return -> expresion .)
    ENTERO          reduce using rule 47 (return -> expresion .)
    DECIMAL         reduce using rule 47 (return -> expresion .)
    CADENA_DE_CARACTERES reduce using rule 47 (return -> expresion .)
    DOUBLE          reduce using rule 47 (return -> expresion .)
    MAPOF           reduce using rule 47 (return -> expresion .)
    TRUE            reduce using rule 47 (return -> expresion .)
    FALSE           reduce using rule 47 (return -> expresion .)
    LISTOF          reduce using rule 47 (return -> expresion .)
    SETOF           reduce using rule 47 (return -> expresion .)
    $end            reduce using rule 47 (return -> expresion .)
    DLLAVE          reduce using rule 47 (return -> expresion .)
    RETURN          reduce using rule 47 (return -> expresion .)


state 238

    (48) return -> valorBoolean .
    (147) boolID -> valorBoolean .
    (136) elementoRelacional -> valorBoolean .

    ELSE            reduce using rule 48 (return -> valorBoolean .)
    ID              reduce using rule 48 (return -> valorBoolean .)
    PRINT           reduce using rule 48 (return -> valorBoolean .)
    PRINTLN         reduce using rule 48 (return -> valorBoolean .)
    READLINE        reduce using rule 48 (return -> valorBoolean .)
    NEGATION        reduce using rule 48 (return -> valorBoolean .)
    FUN             reduce using rule 48 (return -> valorBoolean .)
    IF              reduce using rule 48 (return -> valorBoolean .)
    FOR             reduce using rule 48 (return -> valorBoolean .)
    WHILE           reduce using rule 48 (return -> valorBoolean .)
    VAR             reduce using rule 48 (return -> valorBoolean .)
    VAL             reduce using rule 48 (return -> valorBoolean .)
    ENTERO          reduce using rule 48 (return -> valorBoolean .)
    DECIMAL         reduce using rule 48 (return -> valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 48 (return -> valorBoolean .)
    DOUBLE          reduce using rule 48 (return -> valorBoolean .)
    MAPOF           reduce using rule 48 (return -> valorBoolean .)
    TRUE            reduce using rule 48 (return -> valorBoolean .)
    FALSE           reduce using rule 48 (return -> valorBoolean .)
    LISTOF          reduce using rule 48 (return -> valorBoolean .)
    SETOF           reduce using rule 48 (return -> valorBoolean .)
    $end            reduce using rule 48 (return -> valorBoolean .)
    DLLAVE          reduce using rule 48 (return -> valorBoolean .)
    RETURN          reduce using rule 48 (return -> valorBoolean .)
    AND             reduce using rule 147 (boolID -> valorBoolean .)
    OR              reduce using rule 147 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)


state 239

    (49) return -> expresionRelacional .

    ELSE            reduce using rule 49 (return -> expresionRelacional .)
    ID              reduce using rule 49 (return -> expresionRelacional .)
    PRINT           reduce using rule 49 (return -> expresionRelacional .)
    PRINTLN         reduce using rule 49 (return -> expresionRelacional .)
    READLINE        reduce using rule 49 (return -> expresionRelacional .)
    NEGATION        reduce using rule 49 (return -> expresionRelacional .)
    FUN             reduce using rule 49 (return -> expresionRelacional .)
    IF              reduce using rule 49 (return -> expresionRelacional .)
    FOR             reduce using rule 49 (return -> expresionRelacional .)
    WHILE           reduce using rule 49 (return -> expresionRelacional .)
    VAR             reduce using rule 49 (return -> expresionRelacional .)
    VAL             reduce using rule 49 (return -> expresionRelacional .)
    ENTERO          reduce using rule 49 (return -> expresionRelacional .)
    DECIMAL         reduce using rule 49 (return -> expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 49 (return -> expresionRelacional .)
    DOUBLE          reduce using rule 49 (return -> expresionRelacional .)
    MAPOF           reduce using rule 49 (return -> expresionRelacional .)
    TRUE            reduce using rule 49 (return -> expresionRelacional .)
    FALSE           reduce using rule 49 (return -> expresionRelacional .)
    LISTOF          reduce using rule 49 (return -> expresionRelacional .)
    SETOF           reduce using rule 49 (return -> expresionRelacional .)
    $end            reduce using rule 49 (return -> expresionRelacional .)
    DLLAVE          reduce using rule 49 (return -> expresionRelacional .)
    RETURN          reduce using rule 49 (return -> expresionRelacional .)


state 240

    (129) expresion -> ID .
    (131) expresion -> ID . operadorMat expresion
    (146) boolID -> ID .
    (135) elementoRelacional -> ID .
    (137) operadorMat -> . PLUS
    (138) operadorMat -> . MINUS
    (139) operadorMat -> . TIMES
    (140) operadorMat -> . DIVIDE

    ELSE            reduce using rule 129 (expresion -> ID .)
    ID              reduce using rule 129 (expresion -> ID .)
    PRINT           reduce using rule 129 (expresion -> ID .)
    PRINTLN         reduce using rule 129 (expresion -> ID .)
    READLINE        reduce using rule 129 (expresion -> ID .)
    NEGATION        reduce using rule 129 (expresion -> ID .)
    FUN             reduce using rule 129 (expresion -> ID .)
    IF              reduce using rule 129 (expresion -> ID .)
    FOR             reduce using rule 129 (expresion -> ID .)
    WHILE           reduce using rule 129 (expresion -> ID .)
    VAR             reduce using rule 129 (expresion -> ID .)
    VAL             reduce using rule 129 (expresion -> ID .)
    ENTERO          reduce using rule 129 (expresion -> ID .)
    DECIMAL         reduce using rule 129 (expresion -> ID .)
    CADENA_DE_CARACTERES reduce using rule 129 (expresion -> ID .)
    DOUBLE          reduce using rule 129 (expresion -> ID .)
    MAPOF           reduce using rule 129 (expresion -> ID .)
    TRUE            reduce using rule 129 (expresion -> ID .)
    FALSE           reduce using rule 129 (expresion -> ID .)
    LISTOF          reduce using rule 129 (expresion -> ID .)
    SETOF           reduce using rule 129 (expresion -> ID .)
    $end            reduce using rule 129 (expresion -> ID .)
    DLLAVE          reduce using rule 129 (expresion -> ID .)
    RETURN          reduce using rule 129 (expresion -> ID .)
    AND             reduce using rule 146 (boolID -> ID .)
    OR              reduce using rule 146 (boolID -> ID .)
    EQUAL           reduce using rule 135 (elementoRelacional -> ID .)
    NOTEQ           reduce using rule 135 (elementoRelacional -> ID .)
    LARGE           reduce using rule 135 (elementoRelacional -> ID .)
    SMALL           reduce using rule 135 (elementoRelacional -> ID .)
    LRGEQ           reduce using rule 135 (elementoRelacional -> ID .)
    SMLEQ           reduce using rule 135 (elementoRelacional -> ID .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 64

    operadorMat                    shift and go to state 56

state 241

    (33) for -> FOR condicionFor ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 33 (for -> FOR condicionFor ILLAVE algoritmo DLLAVE .)


state 242

    (34) condicionFor -> IPAR ID IN ID . DPAR

    DPAR            shift and go to state 283


state 243

    (35) condicionFor -> IPAR ID IN ENTERO . PUNTO PUNTO ENTERO DPAR
    (36) condicionFor -> IPAR ID IN ENTERO . PUNTO PUNTO ENTERO STEP ENTERO DPAR

    PUNTO           shift and go to state 284


state 244

    (26) while -> WHILE IPAR entradaIf DPAR ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (18) cuerpo -> . while
    (19) cuerpo -> . valorIncDec
    (20) cuerpo -> . valorInDecAsignacion
    (56) iniVariable -> . variable ID tipoDeDato
    (57) iniVariable -> . variable ID EQUALS valor
    (58) iniVariable -> . variable ID EQUALS valorBoolean
    (59) iniVariable -> . variable ID EQUALS expLogicas
    (60) iniVariable -> . variable ID EQUALS expresionRelacional
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (61) imprimir -> . PRINT IPAR elementosPrint DPAR
    (62) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (115) readline -> . READLINE IPAR DPAR
    (116) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (117) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (102) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (21) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (37) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> . IF IPAR entradaIf DPAR return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> . IF IPAR entradaIf DPAR return else
    (33) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (26) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) valorIncDec -> . ID incrementoDec
    (27) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (113) variable -> . VAR
    (114) variable -> . VAL
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 26
    PRINTLN         shift and go to state 27
    READLINE        shift and go to state 28
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 285
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    valorIncDec                    shift and go to state 19
    valorInDecAsignacion           shift and go to state 20
    variable                       shift and go to state 21
    valor                          shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 25
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 245

    (86) isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .

    ID              reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    PRINT           reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    PRINTLN         reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    READLINE        reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    NEGATION        reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    FUN             reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    IF              reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    FOR             reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    WHILE           reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    VAR             reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    VAL             reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    ENTERO          reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DECIMAL         reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DOUBLE          reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    MAPOF           reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    TRUE            reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    FALSE           reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    LISTOF          reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    SETOF           reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    $end            reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DLLAVE          reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    RETURN          reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)
    DPAR            reduce using rule 86 (isEmpty -> coleccion PUNTO ISEMPTY IPAR DPAR .)


state 246

    (116) readline -> variable ID EQUALS READLINE IPAR DPAR .

    ID              reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    PRINT           reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    PRINTLN         reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    READLINE        reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    NEGATION        reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    FUN             reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    IF              reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    FOR             reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    WHILE           reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    VAR             reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    VAL             reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    ENTERO          reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    DECIMAL         reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    CADENA_DE_CARACTERES reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    DOUBLE          reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    MAPOF           reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    TRUE            reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    FALSE           reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    LISTOF          reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    SETOF           reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    $end            reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    DLLAVE          reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)
    RETURN          reduce using rule 116 (readline -> variable ID EQUALS READLINE IPAR DPAR .)


state 247

    (102) list -> variable ID EQUALS LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 286


state 248

    (101) conjuntos -> variable ID EQUALS SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 287


state 249

    (92) maps -> variable ID EQUALS MAPOF IPAR mapsElemento . DPAR

    DPAR            shift and go to state 288


state 250

    (119) tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .

    ID              reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    PRINT           reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    PRINTLN         reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    READLINE        reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    NEGATION        reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    FUN             reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    IF              reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    FOR             reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    WHILE           reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    VAR             reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    VAL             reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    ENTERO          reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    DECIMAL         reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    CADENA_DE_CARACTERES reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    DOUBLE          reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    MAPOF           reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    TRUE            reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    FALSE           reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    LISTOF          reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    SETOF           reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    $end            reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    DLLAVE          reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)
    RETURN          reduce using rule 119 (tipoDeDato -> DOSPUNTOS INT EQUALS ENTERO .)


state 251

    (120) tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .

    ID              reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    PRINT           reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    PRINTLN         reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    READLINE        reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    NEGATION        reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    FUN             reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    IF              reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    FOR             reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    WHILE           reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    VAR             reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    VAL             reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    ENTERO          reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    DECIMAL         reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    CADENA_DE_CARACTERES reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    DOUBLE          reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    MAPOF           reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    TRUE            reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    FALSE           reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    LISTOF          reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    SETOF           reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    $end            reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    DLLAVE          reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)
    RETURN          reduce using rule 120 (tipoDeDato -> DOSPUNTOS DOUBLE EQUALS DECIMAL .)


state 252

    (121) tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .

    ID              reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    PRINT           reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    PRINTLN         reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    READLINE        reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    NEGATION        reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    FUN             reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    IF              reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    FOR             reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    WHILE           reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    VAR             reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    VAL             reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    ENTERO          reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    DECIMAL         reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    CADENA_DE_CARACTERES reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    DOUBLE          reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    MAPOF           reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    TRUE            reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    FALSE           reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    LISTOF          reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    SETOF           reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    $end            reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    DLLAVE          reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)
    RETURN          reduce using rule 121 (tipoDeDato -> DOSPUNTOS STRING EQUALS CADENA_DE_CARACTERES .)


state 253

    (122) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .
    (147) boolID -> valorBoolean .
    (136) elementoRelacional -> valorBoolean .

    ID              reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    PRINT           reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    PRINTLN         reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    READLINE        reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    NEGATION        reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    FUN             reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    IF              reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    FOR             reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    WHILE           reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    VAR             reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    VAL             reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    ENTERO          reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    DECIMAL         reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    CADENA_DE_CARACTERES reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    DOUBLE          reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    MAPOF           reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    TRUE            reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    FALSE           reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    LISTOF          reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    SETOF           reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    $end            reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    DLLAVE          reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    RETURN          reduce using rule 122 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS valorBoolean .)
    AND             reduce using rule 147 (boolID -> valorBoolean .)
    OR              reduce using rule 147 (boolID -> valorBoolean .)
    EQUAL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    NOTEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LARGE           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMALL           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    LRGEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)
    SMLEQ           reduce using rule 136 (elementoRelacional -> valorBoolean .)


state 254

    (123) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .

    ID              reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    PRINT           reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    PRINTLN         reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    READLINE        reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    NEGATION        reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    FUN             reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    IF              reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    FOR             reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    WHILE           reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    VAR             reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    VAL             reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    ENTERO          reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    DECIMAL         reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    CADENA_DE_CARACTERES reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    DOUBLE          reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    MAPOF           reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    TRUE            reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    FALSE           reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    LISTOF          reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    SETOF           reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    $end            reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    DLLAVE          reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)
    RETURN          reduce using rule 123 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expLogicas .)


state 255

    (124) tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .

    ID              reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    PRINT           reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    PRINTLN         reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    READLINE        reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    NEGATION        reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    FUN             reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    IF              reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    FOR             reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    WHILE           reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    VAR             reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    VAL             reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    ENTERO          reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    DECIMAL         reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    CADENA_DE_CARACTERES reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    DOUBLE          reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    MAPOF           reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    TRUE            reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    FALSE           reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    LISTOF          reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    SETOF           reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    $end            reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    DLLAVE          reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)
    RETURN          reduce using rule 124 (tipoDeDato -> DOSPUNTOS BOOLEAN EQUALS expresionRelacional .)


state 256

    (95) tupla -> variable IPAR ID COMA ID DPAR . EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    EQUALS          shift and go to state 289


state 257

    (82) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO . PUNTO ENTERO DPAR

    PUNTO           shift and go to state 290


state 258

    (87) getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .

    ID              reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINT           reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINTLN         reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    READLINE        reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    NEGATION        reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FUN             reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    IF              reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FOR             reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    WHILE           reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAR             reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAL             reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    ENTERO          reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DECIMAL         reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    CADENA_DE_CARACTERES reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DOUBLE          reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    MAPOF           reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    TRUE            reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FALSE           reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    LISTOF          reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    SETOF           reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    $end            reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DLLAVE          reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    RETURN          reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DPAR            reduce using rule 87 (getMap -> ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)


state 259

    (125) coleccion -> LISTOF IPAR listElementos DPAR .
    (72) imprimirColecciones -> LISTOF IPAR listElementos DPAR .

  ! reduce/reduce conflict for DPAR resolved using rule 72 (imprimirColecciones -> LISTOF IPAR listElementos DPAR .)
    PUNTO           reduce using rule 125 (coleccion -> LISTOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 72 (imprimirColecciones -> LISTOF IPAR listElementos DPAR .)

  ! DPAR            [ reduce using rule 125 (coleccion -> LISTOF IPAR listElementos DPAR .) ]


state 260

    (126) coleccion -> SETOF IPAR listElementos DPAR .
    (73) imprimirColecciones -> SETOF IPAR listElementos DPAR .

  ! reduce/reduce conflict for DPAR resolved using rule 73 (imprimirColecciones -> SETOF IPAR listElementos DPAR .)
    PUNTO           reduce using rule 126 (coleccion -> SETOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 73 (imprimirColecciones -> SETOF IPAR listElementos DPAR .)

  ! DPAR            [ reduce using rule 126 (coleccion -> SETOF IPAR listElementos DPAR .) ]


state 261

    (127) coleccion -> MAPOF IPAR mapsElemento DPAR .
    (71) imprimirColecciones -> MAPOF IPAR mapsElemento DPAR .
    (91) funMap -> MAPOF IPAR mapsElemento DPAR . PUNTO VALUES
    (88) getMap -> MAPOF IPAR mapsElemento DPAR . PUNTO GET IPAR CADENA_DE_CARACTERES DPAR

  ! reduce/reduce conflict for DPAR resolved using rule 71 (imprimirColecciones -> MAPOF IPAR mapsElemento DPAR .)
  ! shift/reduce conflict for PUNTO resolved as shift
    DPAR            reduce using rule 71 (imprimirColecciones -> MAPOF IPAR mapsElemento DPAR .)
    PUNTO           shift and go to state 228

  ! PUNTO           [ reduce using rule 127 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]
  ! DPAR            [ reduce using rule 127 (coleccion -> MAPOF IPAR mapsElemento DPAR .) ]


state 262

    (70) imprimirColecciones -> PAIR IPAR tuplaElemento COMA . tuplaElemento DPAR
    (96) tuplaElemento -> . valor
    (97) tuplaElemento -> . ID
    (98) tuplaElemento -> . valorBoolean
    (99) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (100) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE

    ID              shift and go to state 219
    LISTOF          shift and go to state 221
    SETOF           shift and go to state 222
    ENTERO          shift and go to state 101
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    tuplaElemento                  shift and go to state 291
    valor                          shift and go to state 218
    valorBoolean                   shift and go to state 220

state 263

    (99) tuplaElemento -> LISTOF IPAR . listElementos DPAR
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 292
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 264

    (100) tuplaElemento -> SETOF IPAR . listElementos DPAR
    (103) listElementos -> . valor
    (104) listElementos -> . ID
    (105) listElementos -> . valorBoolean
    (106) listElementos -> . expresionRelacional
    (107) listElementos -> . expLogicas
    (108) listElementos -> . valorBoolean COMA listElementos
    (109) listElementos -> . valor COMA listElementos
    (110) listElementos -> . ID COMA listElementos
    (111) listElementos -> . LISTOF IPAR listElementos DPAR
    (112) listElementos -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean

    ID              shift and go to state 136
    LISTOF          shift and go to state 133
    SETOF           shift and go to state 140
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    NEGATION        shift and go to state 39
    DOUBLE          shift and go to state 49

    listElementos                  shift and go to state 293
    valor                          shift and go to state 135
    valorBoolean                   shift and go to state 137
    expresionRelacional            shift and go to state 138
    expLogicas                     shift and go to state 139
    elementoRelacional             shift and go to state 25
    boolID                         shift and go to state 38

state 265

    (111) listElementos -> LISTOF IPAR listElementos DPAR .

    DPAR            reduce using rule 111 (listElementos -> LISTOF IPAR listElementos DPAR .)


state 266

    (112) listElementos -> SETOF IPAR listElementos DPAR .

    DPAR            reduce using rule 112 (listElementos -> SETOF IPAR listElementos DPAR .)


state 267

    (91) funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .

    ID              reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    PRINT           reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    PRINTLN         reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    READLINE        reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    NEGATION        reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    FUN             reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    IF              reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    FOR             reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    WHILE           reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    VAR             reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    VAL             reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    ENTERO          reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DECIMAL         reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    CADENA_DE_CARACTERES reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DOUBLE          reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    MAPOF           reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    TRUE            reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    FALSE           reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    LISTOF          reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    SETOF           reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    $end            reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DLLAVE          reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    RETURN          reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)
    DPAR            reduce using rule 91 (funMap -> MAPOF IPAR mapsElemento DPAR PUNTO VALUES .)


state 268

    (88) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET . IPAR CADENA_DE_CARACTERES DPAR

    IPAR            shift and go to state 294


state 269

    (94) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA . mapsElemento
    (93) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento
    (94) mapsElemento -> . CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento

    CADENA_DE_CARACTERES shift and go to state 143

    mapsElemento                   shift and go to state 295

state 270

    (50) entrada_fun -> ID DOSPUNTOS tipos .
    (51) entrada_fun -> ID DOSPUNTOS tipos . COMA entrada_fun

    DPAR            reduce using rule 50 (entrada_fun -> ID DOSPUNTOS tipos .)
    COMA            shift and go to state 296


state 271

    (52) tipos -> INT .

    COMA            reduce using rule 52 (tipos -> INT .)
    DPAR            reduce using rule 52 (tipos -> INT .)
    ILLAVE          reduce using rule 52 (tipos -> INT .)


state 272

    (53) tipos -> DOUBLE .

    COMA            reduce using rule 53 (tipos -> DOUBLE .)
    DPAR            reduce using rule 53 (tipos -> DOUBLE .)
    ILLAVE          reduce using rule 53 (tipos -> DOUBLE .)


state 273

    (54) tipos -> BOOLEAN .

    COMA            reduce using rule 54 (tipos -> BOOLEAN .)
    DPAR            reduce using rule 54 (tipos -> BOOLEAN .)
    ILLAVE          reduce using rule 54 (tipos -> BOOLEAN .)


state 274

    (55) tipos -> STRING .

    COMA            reduce using rule 55 (tipos -> STRING .)
    DPAR            reduce using rule 55 (tipos -> STRING .)
    ILLAVE          reduce using rule 55 (tipos -> STRING .)


state 275

    (21) fun -> FUN ID IPAR DPAR ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 297


state 276

    (23) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos . ILLAVE algoritmo RETURN return DLLAVE

    ILLAVE          shift and go to state 298


state 277

    (22) fun -> FUN ID IPAR entrada_fun DPAR ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (18) cuerpo -> . while
    (19) cuerpo -> . valorIncDec
    (20) cuerpo -> . valorInDecAsignacion
    (56) iniVariable -> . variable ID tipoDeDato
    (57) iniVariable -> . variable ID EQUALS valor
    (58) iniVariable -> . variable ID EQUALS valorBoolean
    (59) iniVariable -> . variable ID EQUALS expLogicas
    (60) iniVariable -> . variable ID EQUALS expresionRelacional
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (61) imprimir -> . PRINT IPAR elementosPrint DPAR
    (62) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (115) readline -> . READLINE IPAR DPAR
    (116) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (117) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (102) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (21) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (37) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> . IF IPAR entradaIf DPAR return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> . IF IPAR entradaIf DPAR return else
    (33) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (26) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) valorIncDec -> . ID incrementoDec
    (27) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (113) variable -> . VAR
    (114) variable -> . VAL
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 26
    PRINTLN         shift and go to state 27
    READLINE        shift and go to state 28
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 299
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    valorIncDec                    shift and go to state 19
    valorInDecAsignacion           shift and go to state 20
    variable                       shift and go to state 21
    valor                          shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 25
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 278

    (24) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS . tipos ILLAVE algoritmo RETURN return DLLAVE
    (52) tipos -> . INT
    (53) tipos -> . DOUBLE
    (54) tipos -> . BOOLEAN
    (55) tipos -> . STRING

    INT             shift and go to state 271
    DOUBLE          shift and go to state 272
    BOOLEAN         shift and go to state 273
    STRING          shift and go to state 274

    tipos                          shift and go to state 300

state 279

    (25) fun -> FUN ID IPAR entrada_fun DPAR EQUALS . return
    (46) return -> . expLogicas
    (47) return -> . expresion
    (48) return -> . valorBoolean
    (49) return -> . expresionRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    NEGATION        shift and go to state 39
    ID              shift and go to state 240
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49

    return                         shift and go to state 301
    expLogicas                     shift and go to state 236
    expresion                      shift and go to state 237
    valorBoolean                   shift and go to state 238
    expresionRelacional            shift and go to state 239
    boolID                         shift and go to state 38
    valor                          shift and go to state 23
    elementoRelacional             shift and go to state 25

state 280

    (37) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo . DLLAVE
    (39) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo . DLLAVE else

    DLLAVE          shift and go to state 302


state 281

    (40) if -> IF IPAR entradaIf DPAR return else .

    ID              reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    PRINT           reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    PRINTLN         reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    READLINE        reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    NEGATION        reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    FUN             reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    IF              reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    FOR             reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    WHILE           reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    VAR             reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    VAL             reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    ENTERO          reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    DECIMAL         reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    CADENA_DE_CARACTERES reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    DOUBLE          reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    MAPOF           reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    TRUE            reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    FALSE           reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    LISTOF          reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    SETOF           reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    $end            reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    DLLAVE          reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)
    RETURN          reduce using rule 40 (if -> IF IPAR entradaIf DPAR return else .)


state 282

    (41) else -> ELSE . ILLAVE algoritmo DLLAVE
    (42) else -> ELSE . return
    (46) return -> . expLogicas
    (47) return -> . expresion
    (48) return -> . valorBoolean
    (49) return -> . expresionRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    ILLAVE          shift and go to state 303
    NEGATION        shift and go to state 39
    ID              shift and go to state 240
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49

    return                         shift and go to state 304
    expLogicas                     shift and go to state 236
    expresion                      shift and go to state 237
    valorBoolean                   shift and go to state 238
    expresionRelacional            shift and go to state 239
    boolID                         shift and go to state 38
    valor                          shift and go to state 23
    elementoRelacional             shift and go to state 25

state 283

    (34) condicionFor -> IPAR ID IN ID DPAR .

    ILLAVE          reduce using rule 34 (condicionFor -> IPAR ID IN ID DPAR .)


state 284

    (35) condicionFor -> IPAR ID IN ENTERO PUNTO . PUNTO ENTERO DPAR
    (36) condicionFor -> IPAR ID IN ENTERO PUNTO . PUNTO ENTERO STEP ENTERO DPAR

    PUNTO           shift and go to state 305


state 285

    (26) while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 306


state 286

    (102) list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .

    ID              reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    PRINT           reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    PRINTLN         reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    READLINE        reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    NEGATION        reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    FUN             reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    IF              reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    FOR             reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    WHILE           reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    VAR             reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    VAL             reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    ENTERO          reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    DECIMAL         reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    CADENA_DE_CARACTERES reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    DOUBLE          reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    MAPOF           reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    TRUE            reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    FALSE           reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    LISTOF          reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    SETOF           reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    $end            reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    DLLAVE          reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)
    RETURN          reduce using rule 102 (list -> variable ID EQUALS LISTOF IPAR listElementos DPAR .)


state 287

    (101) conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .

    ID              reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    PRINT           reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    PRINTLN         reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    READLINE        reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    NEGATION        reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    FUN             reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    IF              reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    FOR             reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    WHILE           reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    VAR             reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    VAL             reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    ENTERO          reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    DECIMAL         reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    CADENA_DE_CARACTERES reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    DOUBLE          reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    MAPOF           reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    TRUE            reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    FALSE           reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    LISTOF          reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    SETOF           reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    $end            reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    DLLAVE          reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)
    RETURN          reduce using rule 101 (conjuntos -> variable ID EQUALS SETOF IPAR listElementos DPAR .)


state 288

    (92) maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .

    ID              reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    PRINT           reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    PRINTLN         reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    READLINE        reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    NEGATION        reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    FUN             reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    IF              reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    FOR             reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    WHILE           reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    VAR             reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    VAL             reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    ENTERO          reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    DECIMAL         reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    CADENA_DE_CARACTERES reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    DOUBLE          reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    MAPOF           reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    TRUE            reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    FALSE           reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    LISTOF          reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    SETOF           reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    $end            reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    DLLAVE          reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)
    RETURN          reduce using rule 92 (maps -> variable ID EQUALS MAPOF IPAR mapsElemento DPAR .)


state 289

    (95) tupla -> variable IPAR ID COMA ID DPAR EQUALS . PAIR IPAR tuplaElemento COMA tuplaElemento DPAR

    PAIR            shift and go to state 307


state 290

    (82) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO . ENTERO DPAR

    ENTERO          shift and go to state 308


state 291

    (70) imprimirColecciones -> PAIR IPAR tuplaElemento COMA tuplaElemento . DPAR

    DPAR            shift and go to state 309


state 292

    (99) tuplaElemento -> LISTOF IPAR listElementos . DPAR

    DPAR            shift and go to state 310


state 293

    (100) tuplaElemento -> SETOF IPAR listElementos . DPAR

    DPAR            shift and go to state 311


state 294

    (88) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR . CADENA_DE_CARACTERES DPAR

    CADENA_DE_CARACTERES shift and go to state 312


state 295

    (94) mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento .

    DPAR            reduce using rule 94 (mapsElemento -> CADENA_DE_CARACTERES TO tuplaElemento COMA mapsElemento .)


state 296

    (51) entrada_fun -> ID DOSPUNTOS tipos COMA . entrada_fun
    (50) entrada_fun -> . ID DOSPUNTOS tipos
    (51) entrada_fun -> . ID DOSPUNTOS tipos COMA entrada_fun

    ID              shift and go to state 192

    entrada_fun                    shift and go to state 313

state 297

    (21) fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 21 (fun -> FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE .)


state 298

    (23) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE . algoritmo RETURN return DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (18) cuerpo -> . while
    (19) cuerpo -> . valorIncDec
    (20) cuerpo -> . valorInDecAsignacion
    (56) iniVariable -> . variable ID tipoDeDato
    (57) iniVariable -> . variable ID EQUALS valor
    (58) iniVariable -> . variable ID EQUALS valorBoolean
    (59) iniVariable -> . variable ID EQUALS expLogicas
    (60) iniVariable -> . variable ID EQUALS expresionRelacional
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (61) imprimir -> . PRINT IPAR elementosPrint DPAR
    (62) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (115) readline -> . READLINE IPAR DPAR
    (116) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (117) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (102) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (21) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (37) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> . IF IPAR entradaIf DPAR return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> . IF IPAR entradaIf DPAR return else
    (33) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (26) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) valorIncDec -> . ID incrementoDec
    (27) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (113) variable -> . VAR
    (114) variable -> . VAL
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 26
    PRINTLN         shift and go to state 27
    READLINE        shift and go to state 28
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 314
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    valorIncDec                    shift and go to state 19
    valorInDecAsignacion           shift and go to state 20
    variable                       shift and go to state 21
    valor                          shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 25
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 299

    (22) fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 315


state 300

    (24) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos . ILLAVE algoritmo RETURN return DLLAVE

    ILLAVE          shift and go to state 316


state 301

    (25) fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .

    ID              reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    PRINT           reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    PRINTLN         reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    READLINE        reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    NEGATION        reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    FUN             reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    IF              reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    FOR             reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    WHILE           reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    VAR             reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    VAL             reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    ENTERO          reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    DECIMAL         reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    CADENA_DE_CARACTERES reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    DOUBLE          reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    MAPOF           reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    TRUE            reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    FALSE           reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    LISTOF          reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    SETOF           reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    $end            reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    DLLAVE          reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)
    RETURN          reduce using rule 25 (fun -> FUN ID IPAR entrada_fun DPAR EQUALS return .)


state 302

    (37) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .
    (39) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE . else
    (41) else -> . ELSE ILLAVE algoritmo DLLAVE
    (42) else -> . ELSE return

    ID              reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 37 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    ELSE            shift and go to state 282

    else                           shift and go to state 317

state 303

    (41) else -> ELSE ILLAVE . algoritmo DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (18) cuerpo -> . while
    (19) cuerpo -> . valorIncDec
    (20) cuerpo -> . valorInDecAsignacion
    (56) iniVariable -> . variable ID tipoDeDato
    (57) iniVariable -> . variable ID EQUALS valor
    (58) iniVariable -> . variable ID EQUALS valorBoolean
    (59) iniVariable -> . variable ID EQUALS expLogicas
    (60) iniVariable -> . variable ID EQUALS expresionRelacional
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (61) imprimir -> . PRINT IPAR elementosPrint DPAR
    (62) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (115) readline -> . READLINE IPAR DPAR
    (116) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (117) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (102) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (21) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (37) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> . IF IPAR entradaIf DPAR return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> . IF IPAR entradaIf DPAR return else
    (33) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (26) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) valorIncDec -> . ID incrementoDec
    (27) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (113) variable -> . VAR
    (114) variable -> . VAL
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 26
    PRINTLN         shift and go to state 27
    READLINE        shift and go to state 28
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 318
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    valorIncDec                    shift and go to state 19
    valorInDecAsignacion           shift and go to state 20
    variable                       shift and go to state 21
    valor                          shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 25
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 304

    (42) else -> ELSE return .

    ID              reduce using rule 42 (else -> ELSE return .)
    PRINT           reduce using rule 42 (else -> ELSE return .)
    PRINTLN         reduce using rule 42 (else -> ELSE return .)
    READLINE        reduce using rule 42 (else -> ELSE return .)
    NEGATION        reduce using rule 42 (else -> ELSE return .)
    FUN             reduce using rule 42 (else -> ELSE return .)
    IF              reduce using rule 42 (else -> ELSE return .)
    FOR             reduce using rule 42 (else -> ELSE return .)
    WHILE           reduce using rule 42 (else -> ELSE return .)
    VAR             reduce using rule 42 (else -> ELSE return .)
    VAL             reduce using rule 42 (else -> ELSE return .)
    ENTERO          reduce using rule 42 (else -> ELSE return .)
    DECIMAL         reduce using rule 42 (else -> ELSE return .)
    CADENA_DE_CARACTERES reduce using rule 42 (else -> ELSE return .)
    DOUBLE          reduce using rule 42 (else -> ELSE return .)
    MAPOF           reduce using rule 42 (else -> ELSE return .)
    TRUE            reduce using rule 42 (else -> ELSE return .)
    FALSE           reduce using rule 42 (else -> ELSE return .)
    LISTOF          reduce using rule 42 (else -> ELSE return .)
    SETOF           reduce using rule 42 (else -> ELSE return .)
    $end            reduce using rule 42 (else -> ELSE return .)
    DLLAVE          reduce using rule 42 (else -> ELSE return .)
    RETURN          reduce using rule 42 (else -> ELSE return .)


state 305

    (35) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO . ENTERO DPAR
    (36) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO . ENTERO STEP ENTERO DPAR

    ENTERO          shift and go to state 319


state 306

    (26) while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 26 (while -> WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE .)


state 307

    (95) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR . IPAR tuplaElemento COMA tuplaElemento DPAR

    IPAR            shift and go to state 320


state 308

    (82) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO . DPAR

    DPAR            shift and go to state 321


state 309

    (70) imprimirColecciones -> PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .

    DPAR            reduce using rule 70 (imprimirColecciones -> PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)


state 310

    (99) tuplaElemento -> LISTOF IPAR listElementos DPAR .

    COMA            reduce using rule 99 (tuplaElemento -> LISTOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 99 (tuplaElemento -> LISTOF IPAR listElementos DPAR .)


state 311

    (100) tuplaElemento -> SETOF IPAR listElementos DPAR .

    COMA            reduce using rule 100 (tuplaElemento -> SETOF IPAR listElementos DPAR .)
    DPAR            reduce using rule 100 (tuplaElemento -> SETOF IPAR listElementos DPAR .)


state 312

    (88) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES . DPAR

    DPAR            shift and go to state 322


state 313

    (51) entrada_fun -> ID DOSPUNTOS tipos COMA entrada_fun .

    DPAR            reduce using rule 51 (entrada_fun -> ID DOSPUNTOS tipos COMA entrada_fun .)


state 314

    (23) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo . RETURN return DLLAVE

    RETURN          shift and go to state 323


state 315

    (22) fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 22 (fun -> FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE .)


state 316

    (24) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE . algoritmo RETURN return DLLAVE
    (1) algoritmo -> . cuerpo
    (2) algoritmo -> . cuerpo algoritmo
    (3) cuerpo -> . iniVariable
    (4) cuerpo -> . expresion
    (5) cuerpo -> . expresionRelacional
    (6) cuerpo -> . imprimir
    (7) cuerpo -> . readline
    (8) cuerpo -> . firstAndCap
    (9) cuerpo -> . list
    (10) cuerpo -> . conjuntos
    (11) cuerpo -> . tupla
    (12) cuerpo -> . maps
    (13) cuerpo -> . funColecciones
    (14) cuerpo -> . expLogicas
    (15) cuerpo -> . fun
    (16) cuerpo -> . if
    (17) cuerpo -> . for
    (18) cuerpo -> . while
    (19) cuerpo -> . valorIncDec
    (20) cuerpo -> . valorInDecAsignacion
    (56) iniVariable -> . variable ID tipoDeDato
    (57) iniVariable -> . variable ID EQUALS valor
    (58) iniVariable -> . variable ID EQUALS valorBoolean
    (59) iniVariable -> . variable ID EQUALS expLogicas
    (60) iniVariable -> . variable ID EQUALS expresionRelacional
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (61) imprimir -> . PRINT IPAR elementosPrint DPAR
    (62) imprimir -> . PRINTLN IPAR elementosPrint DPAR
    (115) readline -> . READLINE IPAR DPAR
    (116) readline -> . variable ID EQUALS READLINE IPAR DPAR
    (117) firstAndCap -> . ID PUNTO FIRST IPAR DPAR
    (118) firstAndCap -> . ID PUNTO CAPITALIZE IPAR DPAR
    (102) list -> . variable ID EQUALS LISTOF IPAR listElementos DPAR
    (101) conjuntos -> . variable ID EQUALS SETOF IPAR listElementos DPAR
    (95) tupla -> . variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR
    (92) maps -> . variable ID EQUALS MAPOF IPAR mapsElemento DPAR
    (74) funColecciones -> . indexCol
    (75) funColecciones -> . slice
    (76) funColecciones -> . size
    (77) funColecciones -> . isEmpty
    (78) funColecciones -> . funMap
    (79) funColecciones -> . getMap
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (21) fun -> . FUN ID IPAR DPAR ILLAVE algoritmo DLLAVE
    (22) fun -> . FUN ID IPAR entrada_fun DPAR ILLAVE algoritmo DLLAVE
    (23) fun -> . FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (24) fun -> . FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE
    (25) fun -> . FUN ID IPAR entrada_fun DPAR EQUALS return
    (37) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (38) if -> . IF IPAR entradaIf DPAR return
    (39) if -> . IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else
    (40) if -> . IF IPAR entradaIf DPAR return else
    (33) for -> . FOR condicionFor ILLAVE algoritmo DLLAVE
    (26) while -> . WHILE IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE
    (28) valorIncDec -> . ID incrementoDec
    (27) valorInDecAsignacion -> . ID incDecAsignaacion ENTERO
    (113) variable -> . VAR
    (114) variable -> . VAL
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean
    (80) indexCol -> . ID ICOR ENTERO DCOR
    (81) indexCol -> . ID ICOR ID DCOR
    (82) slice -> . ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR
    (83) size -> . ID PUNTO SIZE
    (84) size -> . coleccion PUNTO SIZE
    (85) isEmpty -> . ID PUNTO ISEMPTY IPAR DPAR
    (86) isEmpty -> . coleccion PUNTO ISEMPTY IPAR DPAR
    (89) funMap -> . ID PUNTO KEYS
    (90) funMap -> . ID PUNTO VALUES
    (91) funMap -> . MAPOF IPAR mapsElemento DPAR PUNTO VALUES
    (87) getMap -> . ID PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (88) getMap -> . MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (125) coleccion -> . LISTOF IPAR listElementos DPAR
    (126) coleccion -> . SETOF IPAR listElementos DPAR
    (127) coleccion -> . MAPOF IPAR mapsElemento DPAR

    ID              shift and go to state 22
    PRINT           shift and go to state 26
    PRINTLN         shift and go to state 27
    READLINE        shift and go to state 28
    NEGATION        shift and go to state 39
    FUN             shift and go to state 40
    IF              shift and go to state 41
    FOR             shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 45
    VAL             shift and go to state 46
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49
    MAPOF           shift and go to state 31
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    LISTOF          shift and go to state 29
    SETOF           shift and go to state 30

    algoritmo                      shift and go to state 324
    cuerpo                         shift and go to state 2
    iniVariable                    shift and go to state 3
    expresion                      shift and go to state 4
    expresionRelacional            shift and go to state 5
    imprimir                       shift and go to state 6
    readline                       shift and go to state 7
    firstAndCap                    shift and go to state 8
    list                           shift and go to state 9
    conjuntos                      shift and go to state 10
    tupla                          shift and go to state 11
    maps                           shift and go to state 12
    funColecciones                 shift and go to state 13
    expLogicas                     shift and go to state 14
    fun                            shift and go to state 15
    if                             shift and go to state 16
    for                            shift and go to state 17
    while                          shift and go to state 18
    valorIncDec                    shift and go to state 19
    valorInDecAsignacion           shift and go to state 20
    variable                       shift and go to state 21
    valor                          shift and go to state 23
    valorBoolean                   shift and go to state 24
    elementoRelacional             shift and go to state 25
    indexCol                       shift and go to state 32
    slice                          shift and go to state 33
    size                           shift and go to state 34
    isEmpty                        shift and go to state 35
    funMap                         shift and go to state 36
    getMap                         shift and go to state 37
    boolID                         shift and go to state 38
    coleccion                      shift and go to state 50

state 317

    (39) if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .

    ID              reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    PRINT           reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    PRINTLN         reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    READLINE        reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    NEGATION        reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    FUN             reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    IF              reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    FOR             reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    WHILE           reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    VAR             reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    VAL             reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    ENTERO          reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    DECIMAL         reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    CADENA_DE_CARACTERES reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    DOUBLE          reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    MAPOF           reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    TRUE            reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    FALSE           reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    LISTOF          reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    SETOF           reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    $end            reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    DLLAVE          reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)
    RETURN          reduce using rule 39 (if -> IF IPAR entradaIf DPAR ILLAVE algoritmo DLLAVE else .)


state 318

    (41) else -> ELSE ILLAVE algoritmo . DLLAVE

    DLLAVE          shift and go to state 325


state 319

    (35) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO . DPAR
    (36) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO . STEP ENTERO DPAR

    DPAR            shift and go to state 326
    STEP            shift and go to state 327


state 320

    (95) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR . tuplaElemento COMA tuplaElemento DPAR
    (96) tuplaElemento -> . valor
    (97) tuplaElemento -> . ID
    (98) tuplaElemento -> . valorBoolean
    (99) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (100) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE

    ID              shift and go to state 219
    LISTOF          shift and go to state 221
    SETOF           shift and go to state 222
    ENTERO          shift and go to state 101
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    tuplaElemento                  shift and go to state 328
    valor                          shift and go to state 218
    valorBoolean                   shift and go to state 220

state 321

    (82) slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .

    ID              reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    PRINT           reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    PRINTLN         reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    READLINE        reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    NEGATION        reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    FUN             reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    IF              reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    FOR             reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    WHILE           reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    VAR             reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    VAL             reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    ENTERO          reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DECIMAL         reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    CADENA_DE_CARACTERES reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DOUBLE          reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    MAPOF           reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    TRUE            reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    FALSE           reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    LISTOF          reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    SETOF           reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    $end            reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DLLAVE          reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    RETURN          reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)
    DPAR            reduce using rule 82 (slice -> ID PUNTO SLICE IPAR ENTERO PUNTO PUNTO ENTERO DPAR .)


state 322

    (88) getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .

    ID              reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINT           reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    PRINTLN         reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    READLINE        reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    NEGATION        reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FUN             reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    IF              reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FOR             reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    WHILE           reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAR             reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    VAL             reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    ENTERO          reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DECIMAL         reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    CADENA_DE_CARACTERES reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DOUBLE          reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    MAPOF           reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    TRUE            reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    FALSE           reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    LISTOF          reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    SETOF           reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    $end            reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DLLAVE          reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    RETURN          reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)
    DPAR            reduce using rule 88 (getMap -> MAPOF IPAR mapsElemento DPAR PUNTO GET IPAR CADENA_DE_CARACTERES DPAR .)


state 323

    (23) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN . return DLLAVE
    (46) return -> . expLogicas
    (47) return -> . expresion
    (48) return -> . valorBoolean
    (49) return -> . expresionRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    NEGATION        shift and go to state 39
    ID              shift and go to state 240
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49

    return                         shift and go to state 329
    expLogicas                     shift and go to state 236
    expresion                      shift and go to state 237
    valorBoolean                   shift and go to state 238
    expresionRelacional            shift and go to state 239
    boolID                         shift and go to state 38
    valor                          shift and go to state 23
    elementoRelacional             shift and go to state 25

state 324

    (24) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo . RETURN return DLLAVE

    RETURN          shift and go to state 330


state 325

    (41) else -> ELSE ILLAVE algoritmo DLLAVE .

    ID              reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    PRINT           reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    PRINTLN         reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    READLINE        reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    NEGATION        reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    FUN             reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    IF              reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    FOR             reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    WHILE           reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    VAR             reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    VAL             reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    ENTERO          reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    DECIMAL         reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    DOUBLE          reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    MAPOF           reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    TRUE            reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    FALSE           reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    LISTOF          reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    SETOF           reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    $end            reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    DLLAVE          reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)
    RETURN          reduce using rule 41 (else -> ELSE ILLAVE algoritmo DLLAVE .)


state 326

    (35) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR .

    ILLAVE          reduce using rule 35 (condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO DPAR .)


state 327

    (36) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP . ENTERO DPAR

    ENTERO          shift and go to state 331


state 328

    (95) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento . COMA tuplaElemento DPAR

    COMA            shift and go to state 332


state 329

    (23) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return . DLLAVE

    DLLAVE          shift and go to state 333


state 330

    (24) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN . return DLLAVE
    (46) return -> . expLogicas
    (47) return -> . expresion
    (48) return -> . valorBoolean
    (49) return -> . expresionRelacional
    (144) expLogicas -> . boolID opLogico boolID
    (145) expLogicas -> . NEGATION boolID
    (128) expresion -> . valor
    (129) expresion -> . ID
    (130) expresion -> . valor operadorMat expresion
    (131) expresion -> . ID operadorMat expresion
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE
    (132) expresionRelacional -> . elementoRelacional operadorRelacional elementoRelacional
    (146) boolID -> . ID
    (147) boolID -> . valorBoolean
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (133) elementoRelacional -> . ENTERO
    (134) elementoRelacional -> . DOUBLE
    (135) elementoRelacional -> . ID
    (136) elementoRelacional -> . valorBoolean

    NEGATION        shift and go to state 39
    ID              shift and go to state 240
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52
    ENTERO          shift and go to state 44
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    DOUBLE          shift and go to state 49

    return                         shift and go to state 334
    expLogicas                     shift and go to state 236
    expresion                      shift and go to state 237
    valorBoolean                   shift and go to state 238
    expresionRelacional            shift and go to state 239
    boolID                         shift and go to state 38
    valor                          shift and go to state 23
    elementoRelacional             shift and go to state 25

state 331

    (36) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO . DPAR

    DPAR            shift and go to state 335


state 332

    (95) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA . tuplaElemento DPAR
    (96) tuplaElemento -> . valor
    (97) tuplaElemento -> . ID
    (98) tuplaElemento -> . valorBoolean
    (99) tuplaElemento -> . LISTOF IPAR listElementos DPAR
    (100) tuplaElemento -> . SETOF IPAR listElementos DPAR
    (141) valor -> . ENTERO
    (142) valor -> . DECIMAL
    (143) valor -> . CADENA_DE_CARACTERES
    (150) valorBoolean -> . TRUE
    (151) valorBoolean -> . FALSE

    ID              shift and go to state 219
    LISTOF          shift and go to state 221
    SETOF           shift and go to state 222
    ENTERO          shift and go to state 101
    DECIMAL         shift and go to state 47
    CADENA_DE_CARACTERES shift and go to state 48
    TRUE            shift and go to state 51
    FALSE           shift and go to state 52

    tuplaElemento                  shift and go to state 336
    valor                          shift and go to state 218
    valorBoolean                   shift and go to state 220

state 333

    (23) fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .

    ID              reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINT           reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINTLN         reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    READLINE        reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    NEGATION        reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FUN             reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    IF              reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FOR             reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    WHILE           reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAR             reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAL             reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    ENTERO          reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DECIMAL         reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DOUBLE          reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    MAPOF           reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    TRUE            reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FALSE           reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    LISTOF          reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    SETOF           reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    $end            reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DLLAVE          reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    RETURN          reduce using rule 23 (fun -> FUN ID IPAR DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)


state 334

    (24) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return . DLLAVE

    DLLAVE          shift and go to state 337


state 335

    (36) condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR .

    ILLAVE          reduce using rule 36 (condicionFor -> IPAR ID IN ENTERO PUNTO PUNTO ENTERO STEP ENTERO DPAR .)


state 336

    (95) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento . DPAR

    DPAR            shift and go to state 338


state 337

    (24) fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .

    ID              reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINT           reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    PRINTLN         reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    READLINE        reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    NEGATION        reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FUN             reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    IF              reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FOR             reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    WHILE           reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAR             reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    VAL             reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    ENTERO          reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DECIMAL         reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    CADENA_DE_CARACTERES reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DOUBLE          reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    MAPOF           reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    TRUE            reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    FALSE           reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    LISTOF          reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    SETOF           reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    $end            reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    DLLAVE          reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)
    RETURN          reduce using rule 24 (fun -> FUN ID IPAR entrada_fun DPAR DOSPUNTOS tipos ILLAVE algoritmo RETURN return DLLAVE .)


state 338

    (95) tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .

    ID              reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    PRINT           reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    PRINTLN         reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    READLINE        reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    NEGATION        reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    FUN             reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    IF              reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    FOR             reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    WHILE           reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    VAR             reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    VAL             reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    ENTERO          reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    DECIMAL         reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    CADENA_DE_CARACTERES reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    DOUBLE          reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    MAPOF           reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    TRUE            reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    FALSE           reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    LISTOF          reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    SETOF           reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    $end            reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    DLLAVE          reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)
    RETURN          reduce using rule 95 (tupla -> variable IPAR ID COMA ID DPAR EQUALS PAIR IPAR tuplaElemento COMA tuplaElemento DPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTO in state 190 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 261 resolved as shift
WARNING: reduce/reduce conflict in state 259 resolved using rule (imprimirColecciones -> LISTOF IPAR listElementos DPAR)
WARNING: rejected rule (coleccion -> LISTOF IPAR listElementos DPAR) in state 259
WARNING: reduce/reduce conflict in state 260 resolved using rule (imprimirColecciones -> SETOF IPAR listElementos DPAR)
WARNING: rejected rule (coleccion -> SETOF IPAR listElementos DPAR) in state 260
WARNING: reduce/reduce conflict in state 261 resolved using rule (imprimirColecciones -> MAPOF IPAR mapsElemento DPAR)
WARNING: rejected rule (coleccion -> MAPOF IPAR mapsElemento DPAR) in state 261
WARNING: Rule (coleccion -> MAPOF IPAR mapsElemento DPAR) is never reduced
